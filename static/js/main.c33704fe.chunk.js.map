{"version":3,"sources":["constants/index.js","utils/index.js","utils/parseSimfile.js","utils/debugUtils.js","utils/engineUtils.js","components/chart/canvas/Arrow.js","components/chart/canvas/ShockArrow.js","components/chart/canvas/StepZone.js","components/chart/canvas/Guidelines.js","components/chart/canvas/TargetFlash.js","components/chart/canvas/ComboDisplay.js","components/chart/canvas/BpmAndStopDisplay.js","components/chart/canvas/LaneCover.js","actions/AudioActions.js","reducers/AudioReducer.js","reducers/ChartReducer.js","actions/ModsActions.js","utils/userSettings.js","components/form/options.js","reducers/ModsReducer.js","reducers/ScreenReducer.js","utils/loadStore.js","actions/SimfileActions.js","reducers/SimfileReducer.js","actions/SongSelectActions.js","reducers/SongSelectReducer.js","reducers/index.js","actions/ChartActions.js","actions/ScreenActions.js","store.js","components/chart/canvas/Progress.js","core/AudioPlayer.js","core/GameEngine.js","components/chart/ShareModal.js","components/ui/HoldButton.js","components/chart/PlayControls.js","components/chart/SongInfo.js","utils/canvasUtils.js","components/chart/staticCanvas/StaticArrow.js","components/chart/staticCanvas/StaticGuidelines.js","components/chart/StaticModal.js","components/chart/CabButtons.js","components/chart/BpmDisplay.js","components/chart/StopDisplay.js","components/chart/ChartArea.js","hooks/index.js","components/form/SongSearch.js","utils/songUtils.js","components/form/SongGrid.js","components/ui/ToggleSwitch.js","components/form/songFormOptions.js","svg/audiowave.svg","components/form/SongForm.js","components/form/ModsForm.js","svg/arrows.svg","svg/mods.svg","svg/music_search.svg","components/navigation/Navbar.js","containers/main/MainContainer.js","components/debug/LogView.js","containers/static/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["DIRECTIONS","SP_DIFFICULTIES","DP_DIFFICULTIES","BPM_RANGES","getOriginPath","window","location","search","href","slice","indexOf","fetchDocument","path","a","axios","get","response","data","getAssetPath","getJacketPath","capitalize","str","toUpperCase","presetParams","obj","split","forEach","param","key","value","error","console","log","parseUrlParams","modeRegex","difficultyRegex","difficultyMap","Beginner","Easy","Medium","Hard","Challenge","parseSimfile","sm","chartStrs","simfileType","simfiles","chartMetadata","bpms","stops","offset","sampleStart","sampleLength","test","exec","length","map","point","beat","Math","round","parseFloat","numLoadedCharts","chartStr","i","mode","smDifficulty","difficulty","level","simfile","levelRegex","RegExp","parseInt","measures","lastIndexOf","trim","measure","measureIdx","ticks","filter","n","startsWith","numTicks","noteObjects","tick","tickIdx","noteObj","note","measureN","measureD","push","chart","debugLog","text","changeActiveBpm","bpmValue","globalParams","currentBpmEl","document","querySelector","bpmQueue","beatTick","textContent","getCurrentCombo","song","audio","allArrows","currentTime","seek","arrow","combo","timestamp","getReverseCoord","originalCoord","height","canvas","clearBpmAndStopDisplay","bpmReel","getElementById","innerHTML","stopReel","initializeBeatWindow","windowStart","windowEnd","arrows","freezes","shocks","chartAreaHeight","mods","speed","visibleTime","cmod","timeTick","numVisibleBeats","windowStartPtr","windowEndPtr","previousArrow","currentArrow","shock","event","events","ts","freeze","nextTopArrow","j","nextArrow","nextTopShock","currentShock","nextShock","nextTopEvent","currentEvent","nextEvent","holdEnds","nextTopFreeze","latestHoldEnd","max","currentFreeze","nextFreeze","timeWindowStartPtr","timeWindowEndPtr","currentTimeWindow","beatWindowStartPtr","beatWindowEndPtr","currentBeatWindow","updateBeatWindow","Object","keys","nextBottomArrowAdj","nextBottomShockAdj","nextBottomEventAdj","nextBottomFreeze","nextBottomFreezeAdj","arrowImages","direction","Image","src","imageName","Arrow","attrs","this","beatstamp","directionIdx","arrowImg","frameX","frameY","destX","destY","c","getContext","staticAttrs","scroll","appearance","bottomBoundary","arrowWidth","arrowHeight","currentTimePosition","currentBeatPosition","totalBodyHeight","arrowBodyImg","holdEndTimes","holdStartTimes","holdEndBeats","holdStartBeats","repetitions","floor","partialHeight","originalPartialHeight","partialDestY","freezeBeingHeld","drawImage","bodyHeight","bodyFrameY","bodyDestY","bodyDistance","tailHeight","actualDestY","arrowHeadImg","freeze_head","noteskin","colorFreezes","topBoundary","includes","beatD","beatN","measureFraction","columnIdx","columnHeight","ShockArrow","frame","flashImages","receptorImages","StepZone","isFlash","Guidelines","finalBeat","guidelines","strokeStyle","ARROW_HEIGHT","lineWidth","beginPath","moveTo","lineTo","width","stroke","image","TargetFlash","directions","save","globalAlpha","pow","restore","comboImages","type","num","coords","1","2","3","4","ComboDisplay","comboNum","comboFont","numDigits","toString","comboImg","numImg","comboDestX","comboDestY","comboWidth","comboHeight","digit","digitWidth","digitHeight","imageCol","imageRow","imageX","imageY","numDestX","numDestY","numWidth","numHeight","BpmAndStopDisplay","bpm","pxPosition","getPxPosition","digits","imageWidth","DIGIT_WIDTH","stop","reel","clientHeight","images","upper","lower","appearanceIdx","LaneCover","laneCoverHeight","img","ARROW_WIDTH","setChartAudioStatus","status","dispatch","payload","initialState","chartAudio","progress","previewAudio","activeBpm","updateMods","getUserSettings","settings","localStorage","getItem","JSON","parse","err","updateUserSettings","newSettings","setItem","stringify","getSavedSongProgress","saveSongProgress","options","turn","shuffle","stepZone","comboDisplay","optionDefaultValues","laneCoverVisible","globalOffset","bpmStopDisplay","params","userSettings","mod","difficulties","b","B","D","E","C","turnValue","toLowerCase","generateInitialValues","innerWidth","innerHeight","activeView","loadStore","lastRequestedSong","lastRequestedSongLoaded","getSimfileList","tsv","parsedTsv","row","levels","missingDifficulties","loadSimfile","smName","hash","replace","random","title","encodeURIComponent","useSsc","alert","simfileList","selectSong","combineReducers","state","action","updatedMods","updatedState","diff","canvasHeight","lowerBoundary","upperBoundary","screen","target","values","songSelect","store","createStore","reducers","compose","applyMiddleware","thunk","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","mouseDown","currentProgress","presetStart","presetMarker","drawBackground","addEventListener","e","preventDefault","jumpToProgress","touches","setPresetMarker","totalWidth","offsetWidth","presetPosition","style","left","presetProgress","progressPercent","domRect","getBoundingClientRect","clientX","x","setProgress","AudioPlayer","seekProgress","stopPropagation","fillStyle","fillRect","isNaN","sources","preview","currentSong","currentPreview","currentSongId","currentPreviewId","previewFadeTimeout","updateTimeline","bind","updateProgress","audioResyncFrames","getCurrentSong","initialProgress","setLoadingAudio","thisSong","Howl","dAudioUrl","format","html5","onload","onloaderror","id","blah","onplay","tl","play","resync","gsap","ticker","add","startAnimationLoop","onpause","pause","remove","stopAnimationLoop","onseek","onstop","restart","onend","spriteId","thisPreview","sprite","sample","volume","setTimeout","fade","clearTimeout","storeAudioSource","audioReloadFrames","isAudioStable","getCurrentTime","getState","updateProgressOnce","getChartAudioStatus","currentBpm","lastBpmValue","bpmEvent","getCurrentBpm","currentCombo","comboTemp","ms","seekTime","audioDuration","duration","time","deltaTime","t0","performance","now","Progress","render","getFullCombo","updateAnimationLoopOnce","actions","songId","kill","playing","assistTick","getPreviewAudioStatus","getCurrentPreview","GameEngine","chartParams","timeline","eventList","mainLoopRequestRef","targetFlashes","lastEntity","startLoop","stopLoop","updateLoopOnce","resetChart","stopQueue","setGlobalParams","output","debugLogView","find","t","join","debugSimfileChart","generateEventList","generateArrows","generateTimestamps","initTimeline","restartTl","pauseTl","storePreviewSource","requestAnimationFrame","mainLoop","cancelAnimationFrame","bpmPtr","stopPtr","prevEvent","prevTimestamp","timestampDiff","currentTimestamp","Array","isArray","newChart","turnMap","off","mirror","right","shuffle1","shuffle2","shuffle3","shuffle4","shuffle5","shuffle6","shuffle7","shuffle8","turnMod","turnedNote","reverse","applyTurnMods","shockArrow","laneCover","lastArrow","lastEvent","lastArrowBeat","lastEventBeat","comboArrows","currentBpmPtr","currentEventPtr","pendingStopPtr","pendingStop","currentStopOffset","idx","bpmSection","bpmSectionStartBeat","arrowTimestamp","arrowsDuringFreeze","freezeHead","freezeTail","arrowDuringFreeze","set","onStart","to","ease","accumulatedBeatTick","startEvent","endEvent","delay","sectionBeatLength","sectionDuration","bpmAndStopDisplay","setTimeline","loop","killed","clientWidth","renderBpm","renderStop","upArrows","notUpArrows","renderFreezeBody","renderArrow","targetFlash","paused","Basic","Difficult","Expert","modes","single","double","ShareModal","props","modalOpen","setModalOpen","shareUrl","useRef","useState","message","setMessage","useEffect","current","getProgress","queryStr","generateShareUrl","Modal","className","size","open","onClose","Header","Content","Input","Button","onClick","copy","HoldButton","button","requestRef","pressingDownRef","notPressingDownRef","buttonProps","el","ref","removeEventListener","pressingDown","notPressingDown","handleHold","children","connect","controlsDisabled","setShareModalOpen","goBack","Icon","name","disabled","goForward","selectedSong","selectedDifficulty","selectedMode","artist","tempCanvas","createElement","tctx","freezeTailImg","freezeBodyImg","StaticArrow","StaticGuidelines","columnWidth","measuresPerColumn","columnStart","STATIC_ARROW_WIDTH","STATIC_ARROW_HEIGHT","gameEngine","canvasRef","setCanvasHeight","canvasWidth","setCanvasWidth","speedMod","numMeasures","calcCanvasHeight","numColumns","ceil","calcCanvasWidth","scaleFactor","cw","ch","scaleCanvas","beatNum","handleClose","onOpen","canvasRect","leftEdge","scaledColumnWidth","topEdge","y","clientY","cy","beatIdx","progressTs","updateLaneCoverHeight","laneCoverFn","adjustLaneCoverHeight","keyCode","laneCoverHeightDiff","reverseFactor","toggleLaneCover","loadingAudio","setGameEngine","setCanvas","shareModalOpen","chartArea","canvasContainer","chartLoadingScreen","staticModalOpen","setStaticModalOpen","prevState","usePrevious","initCanvas","resizeChartArea","transform","top","position","wrapper","xOffset","yOffset","currentState","thing","ge","prev","curr","isTlPaused","updateExternalGlobalParams","shareParams","jumpToPresetStart","onTouchStart","SongSearch","selectedSongOption","onSongSelect","simfileOptions","Dropdown","placeholder","searchQuery","re","escapeRegExp","description","selection","onChange","_","selectOnBlur","selectOnNavigation","getClosestDifficulty","SongGrid","displayedSongs","selectedDifficultyOption","selectedFilters","isChartAvailable","songs","renderSongLevel","levelFilter","difficultyFilter","displayedLevels","difficultyIdx","closestDiff","closestDiffIdx","getDisplayedSongData","renderSong","alt","ToggleSwitch","option1","option2","selectOption","option","getSwitchClassName","titleSortOptions","concat","letter","versionSortOptions","versionName","levelSortOptions","difficultySortOptions","bpmRangeOptions","minBpm","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","_ref4","_ref6","_ref7","_ref8","_ref9","_ref10","_ref","svgRef","viewBox","ForwardRef","forwardRef","previousSong","songGridContainer","setSelectedSongOption","setSelectedDifficultyOption","setLoadingFirstSong","filters","version","setSelectedFilters","updateSelectedFilters","newFilters","setDisplayedSongs","singleDiffs","doubleDiffs","abcSort","bpmRangeValue","displayBpm","nextHighestBpm","maxBpm","bpmIndex","Infinity","isInBpmRange","some","sort","songA","songB","aBpms","aMaxBpm","bBpms","bMaxBpm","scrollTop","setSelectedSong","body","click","preserveShareUrl","selectClosestDifficulty","difficultyToSelect","selectedDiffOptionIndex","onDifficultySelect","stopSongPreview","killImmediately","history","pushState","playSongPreview","availableSimfiles","isSimfileAvailable","handleDifficultySelect","renderDifficulties","onModeSelect","getDisplayBpm","upward","lowBpm","highBpm","getEffectiveScrollSpeed","Radio","label","checked","min","onBlur","fieldValue","Checkbox","toggle","step","fill","verticalAlign","overflow","fillRule","stopPreviewAudio","setActiveView","view","navItems","icon","svgIcon","SongIcon","ModsIcon","ChartIcon","isDisabled","navItem","SVGIcon","changeActiveView","selectDifficulty","selectMode","resizeScreen","loadingSimfiles","setLoadingSimfiles","selectedSM","fetchSimfiles","fetchData","init","withRouter","exact","routeProps","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","basename","process","URL","origin","fetch","headers","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c33704fe.chunk.js","sourcesContent":["export const DEBUG_MODE = false;\n\nexport const ARROW_WIDTH = 64;\nexport const ARROW_HEIGHT = 64;\n\nexport const STATIC_ARROW_WIDTH = 32;\nexport const STATIC_ARROW_HEIGHT = 32;\n\n/* Height of one repetition of the freeze body pattern */\nexport const FREEZE_BODY_HEIGHT = 128;\n\nexport const STATIC_FREEZE_BODY_HEIGHT = 64;\n\n/* Amount of pixels the Hidden+ and Sudden+ lane covers are moved with one nudge */\nexport const LANE_COVER_INCREMENT = 4;\n\nexport const DIRECTIONS = [\"left\", \"down\", \"up\", \"right\"];\n\n/* \n  Offset of the visuals (i.e. chart, gsap timeline) relative to the audio.\n  Positive value represents notes being earlier (have to hit earlier than the music)\n  Negative value represents notes being later (have to hit later than the music)\n*/\nexport const DEFAULT_OFFSET = 0.07;\n// export const DEFAULT_OFFSET = -0.1;  // oneplus\n\nexport const MARVELOUS_FLASH_FRAMES = 12;\n\n/* Number of beats played after the last note or event until the timeline ends */\nexport const END_EXTRA_BEATS = 8;\n\n/* Default cmod value; also serves as fallback speed if cmod form field value is invalid */\nexport const DEFAULT_CMOD = 550;\n\nexport const DDR_VERSIONS = [\n  \"DDR 1st\",\n  \"DDR 2ndMIX\",\n  \"DDR 3rdMIX\",\n  \"DDR 4thMIX\",\n  \"DDR 5thMIX\",\n  \"DDRMAX\",\n  \"DDRMAX2\",\n  \"DDR EXTREME\",\n  \"DDR SuperNOVA\",\n  \"DDR SuperNOVA 2\",\n  \"DDR X\",\n  \"DDR X2\",\n  \"DDR X3 VS 2ndMIX\",\n  \"DDR (2013)\",\n  \"DDR (2014)\",\n  \"DDR A\",\n  \"DDR A20\",\n  \"DDR A20 PLUS\",\n];\n\nexport const SP_DIFFICULTIES = [\n  \"Beginner\",\n  \"Basic\",\n  \"Difficult\",\n  \"Expert\",\n  \"Challenge\",\n];\nexport const DP_DIFFICULTIES = [\"Basic\", \"Difficult\", \"Expert\", \"Challenge\"];\n\n/* Each number represents the lower bound of a range of bpm values, where the upper bound is\nthe next number (non-inclusive).\nFor example, 1 represents the range of bpms from 1 to 99 (i.e. BPM SORT ~100 in-game),\n100 represents the range of bpms from 100 to 109 (BPM SORT 100~ in-game), etc.\n300 represents all bpms 300 and up.\nBpm in this context refers to the MAX value of the song's DISPLAYED bpm. */\nexport const BPM_RANGES = [\n  1,\n  100,\n  110,\n  120,\n  130,\n  140,\n  150,\n  160,\n  170,\n  180,\n  190,\n  200,\n  300,\n];\n\n/* Indices are chosen to match the genre filters' corresponding IDs on eagate. */\nexport const GENRES = [\n  null,\n  \"Japanese Pops\",\n  \"Anime & Game\",\n  \"Variety\",\n  null,\n  null,\n  null,\n  \"HinaBitter\",\n  \"Touhou Arrange\",\n  \"Popular Songs\",\n  null,\n  \"Tokimeki Idol\",\n  \"BandMeshi\",\n];\n\nexport const TITLE_CATEGORIES = [\n  \"あ\",\n  \"か\",\n  \"さ\",\n  \"た\",\n  \"な\",\n  \"は\",\n  \"ま\",\n  \"や\",\n  \"ら\",\n  \"わ\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"NUM\",\n];\n\nexport const LEVELS = [\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n];\n","import axios from \"axios\";\n\nimport { DEBUG_MODE } from \"../constants\";\n\nexport const getOriginPath = () => {\n  if (window.location.search)\n    return window.location.href.slice(\n      0,\n      window.location.href.indexOf(window.location.search)\n    );\n  return window.location.href;\n};\n\nexport const fetchDocument = async (path) => {\n  const response = await axios.get(path);\n  return response.data;\n};\n\nexport const getAssetPath = (path) => {\n  return getOriginPath() + \"assets/\" + path;\n};\n\nexport const getJacketPath = (path) => {\n  return getOriginPath() + \"jackets/\" + path;\n};\n\nexport const capitalize = (str) => {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n};\n\nexport const parseUrlParams = () => {\n  if (!window.location.search) return {};\n  const obj = {};\n  try {\n    window.location.search\n      .slice(1)\n      .split(\"&\")\n      .forEach((param) => {\n        const [key, value] = param.split(\"=\");\n        obj[key] = value;\n      });\n    return obj;\n  } catch (error) {\n    console.log(\"error parsing url params\", error);\n    return {};\n  }\n};\nexport const presetParams = parseUrlParams();\n\nexport const debugLog = (text, divNum = 1) => {\n  if (!DEBUG_MODE) return;\n  const debugDiv = document.querySelector(`#debugLog .debug-text${divNum}`);\n  if (debugDiv) {\n    debugDiv.textContent = text;\n  }\n};\n\nexport const debugLogView = (text, viewNum = 1) => {\n  if (!DEBUG_MODE) return;\n  const debugDiv = document.querySelector(`#logView${viewNum}`);\n  if (debugDiv) {\n    debugDiv.textContent = text;\n  }\n};\n","const modeRegex = /dance-([a-z]+)/;\nconst difficultyRegex = /(Beginner|Easy|Medium|Hard|Challenge|Edit)/;\n\nconst difficultyMap = {\n  Beginner: \"Beginner\",\n  Easy: \"Basic\",\n  Medium: \"Difficult\",\n  Hard: \"Expert\",\n  Challenge: \"Challenge\",\n};\n\nconst parseSimfile = (sm, simfileType = \"sm\") => {\n  const simfiles = {};\n\n  const chartMetadata = sm.slice(0, sm.indexOf(simfileType === \"ssc\" ? \"#NOTEDATA:\" : \"#NOTES:\"));\n\n  let bpms = [];\n  let stops = [];\n  let offset = 0;\n  let sampleStart = 0,\n    sampleLength = 15;\n\n  // default bpms\n  if (/#BPMS:/i.test(chartMetadata)) {\n    bpms = /#BPMS:([\\s\\S]*?)\\s*;/i.exec(chartMetadata)[1];\n    if (bpms.length) {\n      bpms = bpms.split(\",\").map((point) => {\n        const [beat, value] = point.split(\"=\");\n        return {\n          beat: Math.round(parseFloat(beat) * 1000) / 1000,\n          value: parseFloat(value),\n        };\n      });\n    }\n  }\n  // default stops\n  if (/#STOPS:/i.test(chartMetadata)) {\n    stops = /#STOPS:([\\s\\S]*?)\\s*;/i.exec(chartMetadata)[1];\n    if (stops.length) {\n      stops = stops.split(\",\").map((point) => {\n        const [beat, value] = point.split(\"=\");\n        return {\n          beat: Math.round(parseFloat(beat) * 1000) / 1000,\n          value: parseFloat(value),\n        };\n      });\n    }\n  }\n\n  let chartStrs;\n\n  // offset\n  if (/#OFFSET:/i.test(chartMetadata)) {\n    offset = /#OFFSET:([\\s\\S]*?)\\s*;/i.exec(chartMetadata)[1];\n    offset = parseFloat(offset);\n  }\n\n  if (simfileType === \"ssc\") {\n    chartStrs = sm\n      .slice(sm.indexOf(\"#NOTEDATA:\"))\n      .split(/#NOTEDATA:\\s*;/)\n      .slice(1);\n  } else {\n    chartStrs = sm\n      .slice(sm.indexOf(\"#NOTES:\"))\n      .split(/#NOTES:\\s+/)\n      .slice(1);\n  }\n\n  // sample start and length\n  if (/#SAMPLESTART:/i.test(chartMetadata)) {\n    sampleStart = /#SAMPLESTART:([\\s\\S]*?)\\s*;/i.exec(sm)[1];\n    sampleStart = parseFloat(sampleStart);\n  }\n\n  // console.log(chartStrs);\n\n  let numLoadedCharts = 0;\n\n  chartStrs.forEach((chartStr, i) => {\n    const mode = modeRegex.exec(chartStr)[1]; // single or double\n    if (mode !== \"single\" && mode !== \"double\") return;\n\n    let smDifficulty = difficultyRegex.exec(chartStr)[1];\n    const difficulty = difficultyMap[smDifficulty];\n\n    simfiles[`${mode}_${difficulty}`] = {\n      difficulty,\n      mode,\n      bpms,\n      stops,\n      offset,\n      sampleStart,\n      sampleLength,\n    };\n    const simfile = simfiles[`${mode}_${difficulty}`];\n\n    let level;\n    if (simfileType === \"ssc\") {\n      level = /#METER:([0-9]+);/.exec(chartStr)[1];\n    } else {\n      const levelRegex = new RegExp(`${smDifficulty}:\\\\s+([0-9]+):`);\n      level = parseInt(levelRegex.exec(chartStr)[1]);\n    }\n    simfile.level = level;\n\n    if (simfileType === \"ssc\") {\n      // check for different bpms\n      if (/#BPMS:/i.test(chartStr)) {\n        bpms = /#BPMS:([\\s\\S]*?)\\s*;/i.exec(chartStr)[1];\n        if (bpms.length) {\n          bpms = bpms.split(\",\").map((point) => {\n            const [beat, value] = point.split(\"=\");\n            return { beat: parseFloat(beat), value: parseFloat(value) };\n          });\n          simfile.bpms = bpms;\n        }\n      }\n\n      // check for different stops\n      if (/#STOPS:/i.test(chartStr)) {\n        stops = /#STOPS:([\\s\\S]*?)\\s*;/i.exec(chartStr)[1];\n        if (stops.length) {\n          stops = stops.split(\",\").map((point) => {\n            const [beat, value] = point.split(\"=\");\n            return { beat: parseFloat(beat), value: parseFloat(value) };\n          });\n          simfile.stops = stops;\n        }\n      }\n    }\n\n    let measures = chartStr\n      .slice(chartStr.lastIndexOf(\":\") + 1, chartStr.lastIndexOf(\";\"))\n      .trim()\n      .split(\",\");\n    measures = measures.map((measure, measureIdx) => {\n      const ticks = measure\n        .trim()\n        .split(\"\\r\\n\")\n        .filter((n) => !n.startsWith(\"//\")); // filter out comment lines\n\n      const numTicks = ticks.length;\n\n      const noteObjects = [];\n      ticks.forEach((tick, tickIdx) => {\n        // skip empty ticks and comment lines\n        if (!tick.split(\"\").filter((n) => n !== \"0\").length) return;\n\n        const noteObj = {};\n        noteObj.note = tick;\n        noteObj.measureIdx = measureIdx; // index of the measure relative to the whole song (starting at 0)\n        noteObj.measureN = tickIdx; // numerator of the fraction describing where note falls in this measure\n        noteObj.measureD = numTicks; // denominator of the fraction describing where note falls in this measure\n\n        noteObjects.push(noteObj);\n      });\n      if (measureIdx >= measures.length - 1) {\n        // console.log(`finished loading ${mode}_${difficulty}`);\n        numLoadedCharts++;\n      }\n\n      return noteObjects;\n    });\n\n    simfile.chart = measures;\n  });\n\n  simfiles.numLoadedCharts = numLoadedCharts;\n\n  window.simfiles = simfiles;\n\n  return simfiles;\n};\n\nexport default parseSimfile;\n","import { DEBUG_MODE } from \"../constants\";\n\nexport const debugLog = (text, divNum = 1) => {\n  if (!DEBUG_MODE) return;\n  const debugDiv = document.querySelector(`#debugLog .debug-text${divNum}`);\n  if (debugDiv) {\n    debugDiv.textContent = text;\n  }\n};\n\nexport const debugLogView = (text, viewNum = 1) => {\n  if (!DEBUG_MODE) return;\n  const debugDiv = document.querySelector(`#logView${viewNum}`);\n  if (debugDiv) {\n    debugDiv.textContent = text;\n  }\n};\n\nexport const debugSimfileChart = (simfile) => {\n  // console.log(\"DSC\", simfile);\n  const chart = simfile.chart;\n  // console.log(chart);\n\n  let output = `${simfile.mode} ${simfile.difficulty} ${simfile.level}\\n\\n`;\n\n  const printChart = chart\n    .map((row) => {\n      if (!row.length) return \"[    ]\\n\";\n      let str = \"[\";\n      const numTicks = row[0].measureD;\n\n      for (let i = 0; i < numTicks; i++) {\n        const tick = row.find((t) => t.measureN == i);\n        if (i > 0) str += \" \";\n        if (!tick) {\n          // str += \"    \";\n          str += \"0000\";\n        } else {\n          // let lineOutput = \"\";\n          // tick.note.split(\"\").forEach((note, i) => {\n          //   if (note == 0) lineOutput += \" \";\n          //   else if (note == 1) {\n          //     if (i === 0) lineOutput += \"L\";\n          //     else if (i === 1) lineOutput += \"D\";\n          //     else if (i === 2) lineOutput += \"U\";\n          //     else if (i === 3) lineOutput += \"R\";\n          //   }\n          // });\n          // str += lineOutput;\n\n          str += tick.note;\n        }\n        if (i < numTicks - 1) str += \"\\n\";\n      }\n\n      str += `] (${numTicks} ticks)\\n`;\n      return str;\n    })\n    .join(\"\\n\");\n  output += printChart;\n  debugLogView(output, 1);\n};\n","import { DEFAULT_OFFSET, ARROW_HEIGHT } from \"../constants\";\nimport { debugLog } from \"./debugUtils\";\n\nexport const applyTurnMods = (chart, mods, mode) => {\n  const { turn, shuffle } = mods;\n\n  // shuffle patterns courtesy of https://zenius-i-vanisher.com/v5.2/viewthread.php?threadid=3823\n  const turnMap = {\n    off: \"LDUR\",\n    mirror: \"RUDL\",\n    left: \"ULRD\",\n    right: \"DRLU\",\n    shuffle1: \"LRDU\",\n    shuffle2: \"UDRL\",\n    shuffle3: \"LRUD\",\n    shuffle4: \"DURL\",\n    shuffle5: \"DLUR\",\n    shuffle6: \"DULR\",\n    shuffle7: \"RLUD\",\n    shuffle8: \"RULD\",\n  };\n\n  let turnMod = turn;\n  if (turn === \"shuffle\") turnMod += shuffle;\n\n  if (mode === \"single\") {\n    return chart.map((row) => {\n      const note = row.note;\n      const turnedNote = turnMap[turnMod]\n        .split(\"\") //\n        .map((direction) => note[turnMap.off.indexOf(direction)]);\n\n      return { ...row, note: turnedNote };\n    });\n  }\n  if (mode === \"double\") {\n    return chart.map((row) => {\n      let turnedNote = row.note.split(\"\");\n      if (turn === \"mirror\") turnedNote = turnedNote.reverse();\n      return { ...row, note: turnedNote };\n    });\n  }\n};\n\n/*\n  Given the bpmQueue and the current beat tick, find the latest bpm\n  change event that happened before the current beat and set the current bpm\n  to that bpm value. This should be invoked every time the audio is resynced\n  (which will happen whenever progress is skipped)\n*/\nexport const getCurrentBpm = (params) => {\n  const { beatTick, bpmQueue } = params;\n  let lastBpmValue = 0;\n  for (let i = 0; i < bpmQueue.length; i++) {\n    const bpmEvent = bpmQueue[i];\n    if (bpmEvent.beat > beatTick) {\n      return lastBpmValue;\n    }\n    lastBpmValue = bpmEvent.value;\n  }\n  return lastBpmValue;\n};\n\n/*\n  Change current displayed bpm. Going with direct DOM text manipulation\n  rather than dispatching an action\n*/\nexport const changeActiveBpm = (bpmValue, globalParams) => {\n  const currentBpmEl = document.querySelector(\".current-bpm-value\");\n  if (!currentBpmEl) return;\n\n  const { bpmQueue, beatTick } = globalParams;\n\n  // Several charts start with an \"offset\" bpm on the first measure and are corrected\n  // to the \"real\" bpm on the second measure. If the chart follows this pattern,\n  // don't show the offset bpm as it can be very different and misleading\n  if (beatTick < 4 && bpmQueue.length >= 2 && bpmQueue[0].beat === 0 && bpmQueue[1].beat === 4) {\n    currentBpmEl.textContent = \"\";\n  } else {\n    currentBpmEl.textContent = Math.round(bpmValue);\n  }\n\n  // console.log(\"globalParams\", globalParams);\n};\n\n/*\n  Find the current combo given the song timestamp. This should be invoked\n  every time the audio is resynced.\n*/\n\nexport const getCurrentCombo = (song) => {\n  const { audio, globalParams } = song;\n  const { allArrows } = globalParams;\n  if (!allArrows.length) return 0;\n\n  const currentTime = audio.seek();\n\n  // if audio is not properly loaded by the time this runs, currentTime will\n  // return the Howl object, causing this method to return the full combo.\n  // Return 0 instead in this case; seeing no combo is better than seeing\n  // an incorrect full combo number\n\n  // if (typeof currentTime !== \"number\") {\n  //   return 0;\n  // }\n\n  let currentCombo;\n\n  // Go through the chart until the arrow following the current timestamp is reached,\n  // then set the combo to one less than that arrow's combo\n  for (let i = 0; i < allArrows.length; i++) {\n    const arrow = allArrows[i];\n    if (arrow.combo && arrow.timestamp > currentTime + DEFAULT_OFFSET) {\n      currentCombo = arrow.combo - 1;\n      // console.log(currentCombo);\n      return currentCombo;\n    }\n  }\n\n  // If end of chart is reached, use the combo of the last arrow.\n  // Need to go back if the last \"note\" is the end of a freeze, which is common\n  // Expected to short circuit out of loop after ~1-2 iterations\n  for (let i = allArrows.length - 1; i >= 0; i--) {\n    const arrow = allArrows[i];\n    if (arrow.combo) {\n      currentCombo = arrow.combo;\n      return currentCombo;\n    }\n  }\n\n  return -1; // should never reach this. return -1 to make debugging easier\n};\n\nexport const getFullCombo = (song) => {\n  const { globalParams } = song;\n  const { allArrows } = globalParams;\n  if (!allArrows.length) return 0;\n  for (let i = allArrows.length - 1; i >= 0; i--) {\n    const arrow = allArrows[i];\n    if (arrow.combo) {\n      return arrow.combo;\n    }\n  }\n  return 0;\n};\n\n/*\n  Method for finding the coordinate of a sprite on Reverse scroll\n  given the corresponding coordinate on Normal scroll and its height\n*/\nexport const getReverseCoord = (originalCoord, height, canvas) => {\n  return canvas.height - (originalCoord + height);\n};\n\n/* Remove all bpm/stop display elements from the DOM */\nexport const clearBpmAndStopDisplay = () => {\n  const bpmReel = document.getElementById(\"bpmReel\");\n  if (bpmReel) {\n    bpmReel.innerHTML = \"\";\n    // console.log(\"cleared bpm reel\", bpmReel);\n  }\n  const stopReel = document.getElementById(\"stopReel\");\n  if (stopReel) {\n    stopReel.innerHTML = \"\";\n    // console.log(\"cleared stop reel\", stopReel);\n  }\n};\n\n/*\n  Based on the current beat tick, calculates the index of the first\n  arrow to fall within the visible beat window\n*/\nexport const initializeBeatWindow = (globalParams) => {\n  const { arrows, freezes, shocks, chartAreaHeight, mods } = globalParams;\n\n  let timestamp = mods.speed === \"cmod\" ? \"timestamp\" : \"beatstamp\";\n\n  // calculate number of beats (on 1x scroll) covered by the visible chart area\n  // = number of arrow heights that can fit on screen + 1 extra arrow height on top and bottom\n  // then divided by the scroll speed mod\n  // let numVisibleBeats = (chartAreaHeight + ARROW_HEIGHT) / ARROW_HEIGHT;\n\n  let windowStart, windowEnd;\n\n  if (mods.speed === \"cmod\") {\n    let visibleTime = chartAreaHeight / ARROW_HEIGHT;\n    visibleTime /= mods.cmod / 60;\n    windowStart = globalParams.timeTick - 1 / (mods.cmod / 60);\n    windowEnd = globalParams.timeTick + visibleTime;\n  } else {\n    let numVisibleBeats = chartAreaHeight / ARROW_HEIGHT;\n    numVisibleBeats /= mods.speed;\n\n    windowStart = globalParams.beatTick - 1 / mods.speed;\n    windowEnd = globalParams.beatTick + numVisibleBeats;\n  }\n\n  const windowStartPtr = {};\n  const windowEndPtr = {};\n\n  // if no arrows have passed yet (or none exist), set pointer to beginning\n  if (!arrows.length || arrows[0][timestamp] > windowStart) {\n    windowStartPtr.arrow = 0;\n  }\n  // if no more arrows left\n  else if (arrows[arrows.length - 1][timestamp] < windowStart) {\n    windowStartPtr.arrow = arrows.length;\n  }\n  // if at least one arrow has passed, find the topmost arrow that has yet to pass\n  // binary search would be ideal. for now, just use an ordinary O(n) search\n  else {\n    for (let i = 1; i < arrows.length; i++) {\n      const previousArrow = arrows[i - 1];\n      const currentArrow = arrows[i];\n\n      // return the index of the first arrow that lies on or after the current beat tick\n      if (previousArrow[timestamp] < windowStart && currentArrow[timestamp] >= windowStart) {\n        windowStartPtr.arrow = i;\n        break;\n      }\n    }\n  }\n\n  // start pointer for shock arrows\n  if (!shocks.length || shocks[0][timestamp] > windowStart) {\n    windowStartPtr.shock = 0;\n  } else if (shocks[shocks.length - 1][timestamp] < windowStart) {\n    windowStartPtr.shock = shocks.length;\n  } else {\n    for (let i = 1; i < shocks.length; i++) {\n      if (shocks[i - 1][timestamp] < windowStart && shocks[i][timestamp] >= windowStart) {\n        windowStartPtr.shock = i;\n        break;\n      }\n    }\n  }\n\n  // start pointer for bpm/stop values\n  [\"bpm\", \"stop\"].forEach((event) => {\n    const events = globalParams[`${event}Queue`];\n    const ts = mods.speed === \"cmod\" ? \"timestamp\" : \"beat\";\n    if (!events.length || events[0][ts] > windowStart) {\n      windowStartPtr[event] = 0;\n    } else if (events[events.length - 1][ts] < windowStart) {\n      windowStartPtr[event] = events.length;\n    } else {\n      for (let i = 1; i < events.length; i++) {\n        if (events[i - 1][ts] < windowStart && events[i][ts] >= windowStart) {\n          windowStartPtr[event] = i;\n          break;\n        }\n      }\n    }\n  });\n\n  // find start pointer for freeze bodies. copy of above logic for regular arrows\n  if (!freezes.length || freezes[0][timestamp] > windowStart) {\n    windowStartPtr.freeze = 0;\n  } else if (freezes[freezes.length - 1][timestamp] < windowStart) {\n    windowStartPtr.freeze = freezes.length;\n  } else {\n    for (let i = 1; i < freezes.length; i++) {\n      if (freezes[i - 1][timestamp] < windowStart && freezes[i][timestamp] >= windowStart) {\n        windowStartPtr.freeze = i;\n        break;\n      }\n    }\n  }\n\n  // repeat for end pointer\n\n  // if there are no arrows on screen and the next \"top arrow\" is pointing to an arrow\n  // that has yet to appear, point the next \"bottom arrow\" to the arrow BEFORE the top arrow.\n  // This replicates the way the pointers naturally update when the screen reaches a section\n  // with no visible arrows, essentially meaning there are no arrows to iterate over and render\n\n  let nextTopArrow = arrows[windowStartPtr.arrow];\n\n  // short-circuit if chart is over or if no arrows are on screen\n  if (windowStartPtr.arrow >= arrows.length || nextTopArrow[timestamp] > windowEnd) {\n    windowEndPtr.arrow = windowStartPtr.arrow - 1;\n  }\n\n  // if at least one arrow is on screen\n  else {\n    for (let j = windowStartPtr.arrow; j < arrows.length; j++) {\n      const currentArrow = arrows[j];\n      const nextArrow = arrows[j + 1];\n\n      // if there is no next arrow, the end has been reached\n      if (!nextArrow) {\n        windowEndPtr.arrow = j;\n        break;\n      } else if (currentArrow[timestamp] <= windowEnd && nextArrow[timestamp] > windowEnd) {\n        windowEndPtr.arrow = j;\n        break;\n      }\n    }\n  }\n\n  // end pointer for shock arrows\n  let nextTopShock = shocks[windowStartPtr.shock];\n  if (windowStartPtr.shock >= shocks.length || nextTopShock[timestamp] > windowEnd) {\n    windowEndPtr.shock = windowStartPtr.shock - 1;\n  } else {\n    for (let i = windowStartPtr.shock; i < shocks.length; i++) {\n      const currentShock = shocks[i];\n      const nextShock = shocks[i + 1];\n      if (!nextShock || (currentShock[timestamp] <= windowEnd && nextShock[timestamp] > windowEnd)) {\n        windowEndPtr.shock = i;\n        break;\n      }\n    }\n  }\n\n  // end pointer for bpm/stop values\n  [\"bpm\", \"stop\"].forEach((event) => {\n    const events = globalParams[`${event}Queue`];\n    const ts = mods.speed === \"cmod\" ? \"timestamp\" : \"beat\";\n    let nextTopEvent = events[windowStartPtr[event]];\n    if (windowStartPtr[event] >= events.length || nextTopEvent[ts] > windowEnd) {\n      windowEndPtr[event] = windowStartPtr[event] - 1;\n    } else {\n      for (let i = windowStartPtr[event]; i < events.length; i++) {\n        const currentEvent = events[i];\n        const nextEvent = events[i + 1];\n        if (!nextEvent || (currentEvent[ts] <= windowEnd && nextEvent[ts] > windowEnd)) {\n          windowEndPtr[event] = i;\n          break;\n        }\n      }\n    }\n  });\n\n  const holdEnds = mods.speed === \"cmod\" ? \"holdEndTimes\" : \"holdEndBeats\";\n\n  // find end pointer for freeze bodies\n  let nextTopFreeze = freezes[windowStartPtr.freeze];\n  if (windowStartPtr.freeze >= freezes.length) {\n    windowEndPtr.freeze = windowStartPtr.freeze - 1;\n  }\n\n  // if the next top arrow is off screen\n  else if (nextTopFreeze[timestamp] > windowEnd) {\n    windowEndPtr.freeze = windowStartPtr.freeze - 1;\n\n    // if the off-screen arrow is in the middle of (or part of) a freeze,\n    // increment the end pointer until it matches the latest hold end (which could either\n    // be part of itself or part of an adjacent freeze arrow)\n    if (nextTopFreeze[holdEnds]) {\n      const latestHoldEnd = Math.max(...nextTopFreeze[holdEnds].filter((a) => a));\n      windowEndPtr.freeze = windowStartPtr.freeze;\n      while (freezes[windowEndPtr.freeze][timestamp] < latestHoldEnd) windowEndPtr.freeze++;\n    }\n  }\n  // if at least one arrow is on screen\n  else {\n    for (let i = windowStartPtr.freeze; i < freezes.length; i++) {\n      const currentFreeze = freezes[i];\n      const nextFreeze = freezes[i + 1];\n\n      if (!nextFreeze) {\n        windowEndPtr.freeze = i;\n        break;\n      }\n      // if the last visible arrow is in the middle of (or part of) a freeze,\n      // increment the end pointer until it matches the latest holdEndBeat (which could either\n      // be part of itself or part of an adjacent freeze arrow)\n      else if (currentFreeze[timestamp] <= windowEnd && nextFreeze[timestamp] > windowEnd) {\n        if (currentFreeze[holdEnds]) {\n          const latestHoldEnd = Math.max(...currentFreeze[holdEnds].filter((a) => a));\n\n          while (freezes[i][timestamp] < latestHoldEnd) i++;\n        }\n        windowEndPtr.freeze = i;\n        break;\n      }\n    }\n  }\n\n  if (mods.speed === \"cmod\") {\n    globalParams.timeWindowStartPtr = windowStartPtr;\n    globalParams.timeWindowEndPtr = windowEndPtr;\n    globalParams.currentTimeWindow = [windowStart, windowEnd];\n  } else {\n    globalParams.beatWindowStartPtr = windowStartPtr;\n    globalParams.beatWindowEndPtr = windowEndPtr;\n    globalParams.currentBeatWindow = [windowStart, windowEnd];\n  }\n\n  // globalParams.currentBeatWindow = currentBeatWindow;\n\n  // console.log(\"initialize beat window\", currentBeatWindow);\n};\n\n/*\n  Assuming the beat pointer is already defined, invoke this method on every subsequent\n  frame to incrementally update the window values and determine if the pointer needs\n  to be shifted\n*/\nexport const updateBeatWindow = (globalParams) => {\n  const { arrows, freezes, shocks, chartAreaHeight, mods } = globalParams;\n\n  let windowStartPtr, windowEndPtr, timestamp;\n  if (mods.speed === \"cmod\") {\n    windowStartPtr = globalParams.timeWindowStartPtr;\n    windowEndPtr = globalParams.timeWindowEndPtr;\n    timestamp = \"timestamp\";\n  } else {\n    windowStartPtr = globalParams.beatWindowStartPtr;\n    windowEndPtr = globalParams.beatWindowEndPtr;\n    timestamp = \"beatstamp\";\n  }\n\n  if (\n    typeof windowStartPtr === \"undefined\" ||\n    typeof windowEndPtr === \"undefined\" ||\n    !Object.keys(windowStartPtr).length ||\n    !Object.keys(windowEndPtr).length\n  )\n    return;\n\n  // calculate number of beats (on 1x scroll) covered by the visible chart area\n  // = number of arrow heights that can fit on screen + 1 extra arrow height on top and bottom\n  // then divided by the scroll speed mod\n  // let numVisibleBeats = (chartAreaHeight + ARROW_HEIGHT) / ARROW_HEIGHT;\n  let windowStart, windowEnd;\n  if (mods.speed === \"cmod\") {\n    let visibleTime = chartAreaHeight / ARROW_HEIGHT;\n    visibleTime /= mods.cmod / 60;\n    windowStart = globalParams.timeTick - 1 / (mods.cmod / 60);\n    windowEnd = globalParams.timeTick + visibleTime;\n    globalParams.currentTimeWindow = [windowStart, windowEnd];\n  } else {\n    let numVisibleBeats = chartAreaHeight / ARROW_HEIGHT;\n    numVisibleBeats /= mods.speed;\n\n    windowStart = globalParams.beatTick - 1 / mods.speed;\n    windowEnd = globalParams.beatTick + numVisibleBeats;\n    globalParams.currentBeatWindow = [windowStart, windowEnd];\n  }\n\n  // short-circuit if chart is over\n  if (windowStartPtr.arrow === arrows.length) return;\n\n  // if chart is just beginning, watch for the first arrow (unless it is a freeze)\n  // short-circuit if it has not begun\n  if (windowEndPtr.arrow === -1) {\n    // if the first arrow has finally appeared, set the end ptr\n    if (arrows[0][timestamp] <= windowEnd) {\n      windowEndPtr.arrow = 0;\n    }\n  }\n\n  // watch for first shock if applicable\n  if (shocks.length && windowEndPtr.shock === -1 && shocks[0][timestamp] <= windowEnd) {\n    windowEndPtr.shock = 0;\n  }\n\n  // watch for first bpm change/stop\n  [\"bpm\", \"stop\"].forEach((event) => {\n    const events = globalParams[`${event}Queue`];\n    const ts = mods.speed === \"cmod\" ? \"timestamp\" : \"beat\";\n    if (events.length && windowEndPtr[event] === -1 && events[0][ts] <= windowEnd) {\n      windowEndPtr[event] = 0;\n    }\n  });\n\n  // Watching top arrow\n  //\n  // if there are arrows on the screen, and the topmost arrow from the previous frame is\n  // now behind the updated windowStart\n  const topmostArrow = arrows[windowStartPtr.arrow];\n\n  let nextTopArrow = topmostArrow;\n\n  // topmost arrow is no longer the topmost arrow when it is behind windowStart\n  while (nextTopArrow[timestamp] < windowStart) {\n    windowStartPtr.arrow++;\n\n    // no more arrows left\n    if (windowStartPtr.arrow >= arrows.length) return;\n\n    nextTopArrow = arrows[windowStartPtr.arrow];\n  }\n\n  // watching top shock arrow\n  let nextTopShock = shocks[windowStartPtr.shock];\n  while (nextTopShock && nextTopShock[timestamp] < windowStart) {\n    windowStartPtr.shock++;\n    nextTopShock = shocks[windowStartPtr.shock];\n  }\n\n  // watch for first bpm change/stop\n  [\"bpm\", \"stop\"].forEach((event) => {\n    const events = globalParams[`${event}Queue`];\n    const ts = mods.speed === \"cmod\" ? \"timestamp\" : \"beat\";\n    let nextTopEvent = events[windowStartPtr[event]];\n    while (nextTopEvent && nextTopEvent[ts] < windowStart) {\n      windowStartPtr[event]++;\n      nextTopEvent = events[windowStartPtr[event]];\n    }\n  });\n\n  // watching top freeze arrow\n  let nextTopFreeze = freezes[windowStartPtr.freeze];\n  while (nextTopFreeze && nextTopFreeze[timestamp] < windowStart) {\n    windowStartPtr.freeze++;\n    nextTopFreeze = freezes[windowStartPtr.freeze];\n  }\n\n  // Watching bottom arrow\n  //\n  // if there are arrows on the screen, and the arrow AFTER the bottommost arrow from the previous\n  // frame is now behind the updated windowEnd\n  let nextBottomArrow = arrows[windowEndPtr.arrow];\n  let nextBottomArrowAdj = arrows[windowEndPtr.arrow + 1];\n\n  // bottommost arrow is no longer bottommost arrow when the next arrow is behind windowEnd\n  while (nextBottomArrowAdj && nextBottomArrowAdj[timestamp] <= windowEnd) {\n    windowEndPtr.arrow++;\n    nextBottomArrow = arrows[windowEndPtr.arrow];\n    nextBottomArrowAdj = arrows[windowEndPtr.arrow + 1];\n  }\n\n  // watching bottom shock arrow\n  let nextBottomShock = shocks[windowEndPtr.shock];\n  let nextBottomShockAdj = shocks[windowEndPtr.shock + 1];\n  while (nextBottomShockAdj && nextBottomShockAdj[timestamp] <= windowEnd) {\n    windowEndPtr.shock++;\n    nextBottomShock = shocks[windowEndPtr.shock];\n    nextBottomShockAdj = shocks[windowEndPtr.shock + 1];\n  }\n\n  // watch for first bpm change/stop\n  [\"bpm\", \"stop\"].forEach((event) => {\n    const events = globalParams[`${event}Queue`];\n    const ts = mods.speed === \"cmod\" ? \"timestamp\" : \"beat\";\n    let nextBottomEvent = events[windowEndPtr[event]];\n    let nextBottomEventAdj = events[windowEndPtr[event] + 1];\n    while (nextBottomEventAdj && nextBottomEventAdj[ts] <= windowEnd) {\n      windowEndPtr[event]++;\n      nextBottomEvent = events[windowEndPtr[event]];\n      nextBottomEventAdj = events[windowEndPtr[event] + 1];\n    }\n  });\n\n  // watching bottom freeze arrow\n  let nextBottomFreeze = freezes[windowEndPtr.freeze];\n  let nextBottomFreezeAdj = freezes[windowEndPtr.freeze + 1];\n  while (nextBottomFreezeAdj && nextBottomFreezeAdj[timestamp] <= windowEnd) {\n    windowEndPtr.freeze++;\n    nextBottomFreeze = freezes[windowEndPtr.freeze];\n    nextBottomFreezeAdj = freezes[windowEndPtr.freeze + 1];\n  }\n\n  // extend the freeze window to reach the latest hold end\n  if (nextBottomFreeze) {\n    const holdEnds = mods.speed === \"cmod\" ? \"holdEndTimes\" : \"holdEndBeats\";\n    const latestHoldEnd = Math.max(...nextBottomFreeze[holdEnds].filter((a) => a));\n    while (freezes[windowEndPtr.freeze][timestamp] < latestHoldEnd) {\n      windowEndPtr.freeze++;\n    }\n  }\n\n  // ^ because a freeze tail happening simultaneously as the head of a different freeze\n  // are counted as the same note, if the end pointer falls on such a note, the above code cannot\n  // tell whether it is referring to the former's tail or the latter's head.\n  // therefore, it will result in the beat window being extended all the way down to the end of\n  // any \"freeze chain\", including any freezes that are not yet visible on the screen in any form.\n  // this makes the engine loop over slightly more arrows than necessary, but this is fine for now\n\n  // const allArrowsInWindow = [];\n  // for (\n  //   let i = globalParams.windowStartPtr.freeze;\n  //   i <= globalParams.windowEndPtr.freeze;\n  //   i++\n  // ) {\n  //   allArrowsInWindow.push(i);\n  // }\n  // console.log(allArrowsInWindow);\n\n  if (mods.speed === \"cmod\") {\n    globalParams.timeWindowStartPtr = windowStartPtr;\n    globalParams.timeWindowEndPtr = windowEndPtr;\n  } else {\n    globalParams.beatWindowStartPtr = windowStartPtr;\n    globalParams.beatWindowEndPtr = windowEndPtr;\n  }\n};\n","import {\n  DIRECTIONS,\n  ARROW_WIDTH,\n  ARROW_HEIGHT,\n  STATIC_ARROW_WIDTH,\n  STATIC_ARROW_HEIGHT,\n  FREEZE_BODY_HEIGHT,\n} from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst arrowImages = {};\nDIRECTIONS.forEach((direction) => {\n  arrowImages[`rainbow_${direction}`] = new Image();\n  arrowImages[`rainbow_${direction}`].src = getAssetPath(\n    `rainbow_${direction}.png`\n  );\n  arrowImages[`note_${direction}`] = new Image();\n  arrowImages[`note_${direction}`].src = getAssetPath(`note_${direction}.png`);\n  arrowImages[`vivid_${direction}`] = new Image();\n  arrowImages[`vivid_${direction}`].src = getAssetPath(\n    `vivid_${direction}.png`\n  );\n  arrowImages[`flat_${direction}`] = new Image();\n  arrowImages[`flat_${direction}`].src = getAssetPath(`vivid_${direction}.png`);\n});\n\nconst freezeImages = [\n  \"freeze_head\",\n  \"tap_explosion\",\n  \"freeze_tail_active\",\n  \"freeze_tail_inactive\",\n  \"freeze_body_active\",\n  \"freeze_body_inactive\",\n];\nfreezeImages.forEach((imageName) => {\n  arrowImages[imageName] = new Image();\n  arrowImages[imageName].src = getAssetPath(`${imageName}.png`);\n});\n\nclass Arrow {\n  constructor(attrs) {\n    const { key } = attrs;\n\n    this.key = key; // arrow index\n    this.note = attrs.note;\n    this.measureIdx = attrs.measureIdx;\n    this.measureN = attrs.measureN;\n    this.measureD = attrs.measureD;\n\n    this.beatstamp = attrs.beatstamp;\n  }\n\n  currentBeatPosition(beatTick) {\n    return this.beatstamp - beatTick;\n  }\n  currentTimePosition(timeTick) {\n    return this.timestamp - timeTick;\n  }\n\n  renderFreezeBody(canvas, { beatTick, timeTick }, directionIdx, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods, staticAttrs } = attrs;\n    const { speed, cmod, scroll, appearance } = mods;\n\n    const topBoundary = 0;\n    const bottomBoundary = canvas.height;\n\n    let arrowImg;\n    let frameX, frameY, destX, destY;\n    const direction = DIRECTIONS[directionIdx % 4];\n\n    const arrowWidth = staticAttrs ? STATIC_ARROW_WIDTH : ARROW_WIDTH;\n    const arrowHeight = staticAttrs ? STATIC_ARROW_HEIGHT : ARROW_HEIGHT;\n    const freezeBodyHeight = FREEZE_BODY_HEIGHT;\n\n    // freeze body and tail\n    if (this.note[directionIdx] === \"3\") {\n      arrowImg = arrowImages[`freeze_tail_inactive`];\n\n      frameX =\n        ((directionIdx % 4) + (scroll === \"reverse\" ? 4 : 0)) * arrowWidth;\n      frameY = 0;\n\n      destX = directionIdx * arrowWidth;\n\n      if (speed === \"cmod\") {\n        destY = this.currentTimePosition(timeTick) * arrowHeight * (cmod / 60);\n      } else {\n        destY = this.currentBeatPosition(beatTick) * arrowHeight * speed;\n      }\n\n      // Bottom of freeze body must be the bottom of the body image (yellow part of gradient)\n      // and line up with the top of the freeze tail.\n      // Extend the freeze body upwards using as many repetitions of the 128px height image as needed.\n      // Top of freeze body is cut off at the midpoint of the freeze head.\n      let arrowBodyImg = arrowImages[`freeze_body_inactive`];\n\n      let totalBodyHeight;\n      if (speed === \"cmod\") {\n        totalBodyHeight =\n          (this.holdEndTimes[directionIdx] -\n            this.holdStartTimes[directionIdx]) *\n            arrowHeight *\n            (cmod / 60) -\n          arrowHeight / 2;\n      } else {\n        totalBodyHeight =\n          (this.holdEndBeats[directionIdx] -\n            this.holdStartBeats[directionIdx]) *\n            arrowHeight *\n            speed -\n          arrowHeight / 2;\n      }\n      const repetitions = Math.floor(totalBodyHeight / freezeBodyHeight);\n      let partialHeight = totalBodyHeight % freezeBodyHeight;\n      const originalPartialHeight = partialHeight;\n\n      let partialDestY = destY - (totalBodyHeight + arrowHeight / 2);\n      let freezeBeingHeld = false;\n\n      // shrink in size once it reaches the target\n      // this is also where the freeze starts to be held down\n      if (partialDestY <= 0) {\n        partialHeight += partialDestY;\n        partialDestY = 0;\n        arrowImg = arrowImages[`freeze_tail_active`];\n        arrowBodyImg = arrowImages[`freeze_body_active`];\n\n        if (destY > 0) {\n          freezeBeingHeld = true;\n        }\n      }\n\n      // draw partial\n      if (\n        partialDestY > -partialHeight &&\n        partialDestY < bottomBoundary &&\n        appearance !== \"stealth\"\n      ) {\n        c.drawImage(\n          arrowBodyImg,\n          frameX,\n          scroll === \"reverse\" ? 0 : freezeBodyHeight - partialHeight,\n          arrowWidth,\n          partialHeight,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(\n                partialDestY + arrowHeight / 2,\n                partialHeight,\n                canvas\n              )\n            : partialDestY + arrowHeight / 2,\n          arrowWidth,\n          partialHeight\n        );\n      }\n\n      // draw repetitions of freeze body\n      for (let i = 1; i <= repetitions; i++) {\n        let bodyHeight = freezeBodyHeight;\n        let bodyFrameY = 0;\n        let bodyDestY =\n          destY -\n          (totalBodyHeight +\n            arrowHeight / 2 -\n            originalPartialHeight -\n            freezeBodyHeight * (i - 1));\n        if (bodyDestY < 0 && bodyDestY > -freezeBodyHeight) {\n          bodyHeight += bodyDestY;\n          bodyFrameY -= bodyDestY;\n          bodyDestY = 0;\n        }\n        if (\n          bodyDestY > -bodyHeight &&\n          bodyDestY < bottomBoundary &&\n          appearance !== \"stealth\"\n        ) {\n          c.drawImage(\n            arrowBodyImg,\n            frameX,\n            scroll === \"reverse\" ? 0 : bodyFrameY,\n            arrowWidth,\n            bodyHeight,\n            destX,\n            scroll === \"reverse\"\n              ? getReverseCoord(bodyDestY + arrowHeight / 2, bodyHeight, canvas)\n              : bodyDestY + arrowHeight / 2,\n            arrowWidth,\n            bodyHeight\n          );\n        }\n      }\n\n      let tailHeight = arrowHeight;\n\n      // if the freeze is shorter than the height of the tail sprite,\n      // cut off the top of the sprite such that it starts at the midpoint of the freeze head\n\n      // Because we need to overwrite destY for proper sprite placement in the event that the\n      // top of the sprite needs to be cut off, store the actual Y position of the arrow\n      // in a separate variable\n      let actualDestY = destY;\n\n      let bodyDistance;\n      if (speed === \"cmod\") {\n        bodyDistance =\n          (this.holdEndTimes[directionIdx] -\n            this.holdStartTimes[directionIdx]) *\n          arrowHeight *\n          (cmod / 60);\n      } else {\n        bodyDistance =\n          (this.holdEndBeats[directionIdx] -\n            this.holdStartBeats[directionIdx]) *\n          arrowHeight *\n          speed;\n      }\n\n      if (bodyDistance < arrowHeight / 2) {\n        const tailPartialHeight = bodyDistance; // distance between head note and tail note, less than half arrow height\n        frameY += arrowHeight / 2 - tailPartialHeight;\n        destY += arrowHeight / 2 - tailPartialHeight;\n        tailHeight = tailPartialHeight + arrowHeight / 2;\n      }\n\n      // shrink in size once it reaches the target\n      if (destY < arrowHeight / 2 && destY > topBoundary) {\n        frameY += arrowHeight / 2 - destY;\n        destY = arrowHeight / 2;\n      }\n\n      if (\n        actualDestY > topBoundary &&\n        actualDestY < bottomBoundary &&\n        appearance !== \"stealth\"\n      ) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          scroll === \"reverse\" ? 0 : frameY,\n          arrowWidth,\n          scroll === \"reverse\" ? arrowHeight - frameY : tailHeight,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(actualDestY, arrowHeight, canvas)\n            : destY,\n          arrowWidth,\n          scroll === \"reverse\" ? arrowHeight - frameY : tailHeight\n        );\n      }\n\n      // render head of held freeze arrow on top of the arrow body\n      if (freezeBeingHeld) {\n        const arrowHeadImg = arrowImages.freeze_head;\n        c.drawImage(\n          arrowHeadImg,\n          DIRECTIONS.indexOf(direction) * arrowWidth,\n          arrowHeight * 2,\n          arrowWidth,\n          arrowHeight,\n          directionIdx * arrowWidth,\n          scroll === \"reverse\" ? getReverseCoord(0, arrowHeight, canvas) : 0,\n          arrowWidth,\n          arrowHeight\n        );\n      }\n    }\n  }\n\n  renderArrow(canvas, { beatTick, timeTick }, directionIdx, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods, staticAttrs } = attrs;\n    const { speed, cmod, noteskin, colorFreezes, scroll, appearance } = mods;\n\n    let topBoundary = 0; // used to simulate the arrows being hit and disappearing\n    if (staticAttrs) topBoundary = -1; // if rendering on static chart, arrow on the first measure should be visible\n\n    const bottomBoundary = canvas.height; // can be adjusted with SUDDEN+\n\n    // nothing\n    if (this.note[directionIdx] === \"0\") return;\n\n    // stealth\n    if (appearance === \"stealth\") return;\n\n    let arrowImg;\n    let frameX, frameY, destX, destY;\n    const direction = DIRECTIONS[directionIdx % 4];\n\n    const arrowWidth = staticAttrs ? STATIC_ARROW_WIDTH : ARROW_WIDTH;\n    const arrowHeight = staticAttrs ? STATIC_ARROW_HEIGHT : ARROW_HEIGHT;\n\n    // regular note\n    if (\n      this.note[directionIdx] === \"1\" ||\n      (this.note[directionIdx] === \"2\" && colorFreezes)\n    ) {\n      arrowImg = arrowImages[`${noteskin}_${direction}`];\n\n      // color as freeze head if it is hit simultaneously with a freeze arrow\n      if (this.note.includes(\"2\") && !colorFreezes) {\n        arrowImg = arrowImages.freeze_head;\n        frameX = DIRECTIONS.indexOf(direction) * arrowWidth;\n        frameY = 0;\n      } else {\n        if (noteskin === \"rainbow\") {\n          frameX = ((Math.floor(beatTick * 4) + 3) % 8) * arrowWidth;\n\n          const beatD = this.measureD / 4;\n          const beatN = this.measureN % beatD;\n          if (beatN === 0) {\n            frameY = 0;\n          } else if (0 < beatN && beatN <= beatD / 4) {\n            frameY = 1;\n          } else if (beatD / 4 < beatN && beatN <= beatD / 2) {\n            frameY = 2;\n          } else if (beatD / 2 < beatN && beatN <= (3 * beatD) / 4) {\n            frameY = 3;\n          } else if ((3 * beatD) / 4 < beatN && beatN < beatD) {\n            frameY = 0;\n          }\n          frameY *= arrowHeight;\n        } else if (noteskin === \"note\") {\n          frameX = ((Math.floor(beatTick * 4) + 3) % 8) * arrowWidth;\n\n          /* \n              NOTE: In the future, if we want to support color codes for 12ths, 24ths, etc.\n              We need to use more precise math to avoid rounding errors.\n              Planned approach: Reduce the measure fraction by dividing both numerator and denominator\n              by their greatest common factor.\n              If GCF == 1, 2, or 4, use 4th note quantization.\n              Otherwise, the resulting denominator is used for the quantization (3 and 6 may be treated as 12ths)\n            */\n          const measureFraction = this.measureN / this.measureD;\n          if ([0, 1 / 4, 2 / 4, 3 / 4].includes(measureFraction)) {\n            frameY = 0;\n          } else if ([1 / 8, 3 / 8, 5 / 8, 7 / 8].includes(measureFraction)) {\n            frameY = 1;\n          } else if (\n            [\n              1 / 16,\n              3 / 16,\n              5 / 16,\n              7 / 16,\n              9 / 16,\n              11 / 16,\n              13 / 16,\n              15 / 16,\n            ].includes(measureFraction)\n          ) {\n            frameY = 3;\n          } else {\n            frameY = 2;\n          }\n          frameY *= arrowHeight;\n        } else if (noteskin === \"vivid\") {\n          frameX = (Math.floor(beatTick * 4) % 4) * arrowWidth;\n\n          const beatD = this.measureD / 4;\n          const beatN = this.measureN % beatD;\n          const noteOffset = Math.floor(beatTick) % 4;\n\n          if (beatN === 0) {\n            frameY = 0;\n          } else if (0 < beatN && beatN <= beatD / 4) {\n            frameY = 1;\n          } else if (beatD / 4 < beatN && beatN <= beatD / 2) {\n            frameY = 2;\n          } else if (beatD / 2 < beatN && beatN <= (3 * beatD) / 4) {\n            frameY = 3;\n          } else if ((3 * beatD) / 4 < beatN && beatN < beatD) {\n            frameY = 0;\n          }\n          frameY = ((frameY + noteOffset) % 4) * arrowHeight;\n        } else if (noteskin === \"flat\") {\n          arrowImg = arrowImages[`vivid_${direction}`];\n\n          frameX = (Math.floor(beatTick * 4) % 4) * arrowWidth;\n          frameY = (Math.floor(beatTick) % 4) * arrowHeight;\n        }\n      }\n\n      destX = directionIdx * arrowWidth;\n      if (staticAttrs) {\n        destX += staticAttrs.columnIdx * (arrowWidth * 4 * 2) + arrowWidth * 2;\n      }\n\n      if (speed === \"cmod\") {\n        destY = this.currentTimePosition(timeTick) * arrowHeight * (cmod / 60);\n      } else {\n        destY = this.currentBeatPosition(beatTick) * arrowHeight * speed;\n\n        if (staticAttrs) {\n          destY = destY % staticAttrs.columnHeight;\n        }\n      }\n\n      destY = (destY + 0.5) | 0;\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          frameY,\n          arrowWidth,\n          arrowHeight,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(destY, arrowHeight, canvas)\n            : destY,\n          arrowWidth,\n          arrowHeight\n        );\n      }\n    }\n\n    // freeze note\n    else if (this.note[directionIdx] === \"2\") {\n      arrowImg = arrowImages.freeze_head;\n      frameX = DIRECTIONS.indexOf(direction) * arrowWidth;\n      frameY = 0;\n\n      destX = directionIdx * arrowWidth;\n      if (speed === \"cmod\") {\n        destY = this.currentTimePosition(timeTick) * arrowHeight * (cmod / 60);\n      } else {\n        destY = this.currentBeatPosition(beatTick) * arrowHeight * speed;\n      }\n      destY = (destY + 0.5) | 0;\n\n      // draw freeze head\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          frameY,\n          arrowWidth,\n          arrowHeight,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(destY, arrowHeight, canvas)\n            : destY,\n          arrowWidth,\n          arrowHeight\n        );\n      }\n    }\n  }\n}\n\nexport default Arrow;\n","import { DIRECTIONS, ARROW_WIDTH, ARROW_HEIGHT } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst arrowImages = {};\nDIRECTIONS.forEach((direction) => {\n  arrowImages[`shock_${direction}`] = new Image();\n  arrowImages[`shock_${direction}`].src = getAssetPath(\n    `shock_${direction}.png`\n  );\n});\n\nclass ShockArrow {\n  constructor(attrs) {\n    const { key } = attrs;\n\n    this.key = key;\n    this.note = attrs.note;\n\n    this.beatstamp = attrs.beatstamp;\n  }\n\n  currentBeatPosition(beatTick) {\n    return this.beatstamp - beatTick;\n  }\n  currentTimePosition(timeTick) {\n    return this.timestamp - timeTick;\n  }\n\n  render(canvas, frame, { beatTick, timeTick }, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods } = attrs;\n    const { speed, cmod, scroll, appearance } = mods;\n\n    if (appearance === \"stealth\") return;\n\n    const topBoundary = -ARROW_HEIGHT; // used to simulate the arrows being hit and disappearing\n    const bottomBoundary = canvas.height;\n    frame = Math.floor(frame / 3) % 8; // each sprite frame lasts 3 canvas animation frames\n\n    for (let i = 0; i < this.note.length; i++) {\n      if (this.note[i] !== \"M\") continue;\n      const direction = DIRECTIONS[i % 4];\n      const arrowImg = arrowImages[`shock_${direction}`];\n      const frameX = (frame % 4) * ARROW_WIDTH;\n      const frameY = Math.floor(frame / 4) * ARROW_HEIGHT;\n      const destX = i * ARROW_WIDTH;\n      let destY;\n      if (speed === \"cmod\") {\n        destY = this.currentTimePosition(timeTick) * ARROW_HEIGHT * (cmod / 60);\n      } else {\n        destY = this.currentBeatPosition(beatTick) * ARROW_HEIGHT * speed;\n      }\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          frameY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(destY, ARROW_HEIGHT, canvas)\n            : destY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT\n        );\n      }\n    }\n  }\n}\n\nexport default ShockArrow;\n","import { DIRECTIONS, ARROW_HEIGHT, ARROW_WIDTH } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst flashImages = {};\nDIRECTIONS.forEach((direction) => {\n  flashImages[direction] = new Image();\n  flashImages[direction].src = getAssetPath(`${direction}_tap_flash.png`);\n  flashImages[direction] = new Image();\n  flashImages[direction].src = getAssetPath(`${direction}_tap_flash.png`);\n});\n\nconst receptorImages = {};\nDIRECTIONS.forEach((direction) => {\n  receptorImages[direction] = new Image();\n  receptorImages[direction].src = getAssetPath(`${direction}_tap_receptor.png`);\n  receptorImages[direction] = new Image();\n  receptorImages[direction].src = getAssetPath(`${direction}_tap_receptor.png`);\n});\n\nclass StepZone {\n  constructor(attrs) {}\n\n  render(canvas, { beatTick }, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mode, mods } = attrs;\n    const { scroll } = mods;\n\n    // flash starts at the beginning of the quarter beat and lasts for 1/16 beat\n    const isFlash = beatTick % 1 > 0 && beatTick % 1 < 0.25;\n\n    DIRECTIONS.forEach((direction, i) => {\n      c.drawImage(\n        isFlash ? flashImages[direction] : receptorImages[direction],\n        0,\n        0,\n        ARROW_WIDTH,\n        ARROW_HEIGHT,\n        i * ARROW_WIDTH,\n        scroll === \"reverse\" ? getReverseCoord(0, ARROW_HEIGHT, canvas) : 0,\n        ARROW_WIDTH,\n        ARROW_HEIGHT\n      );\n\n      if (mode === \"double\") {\n        c.drawImage(\n          isFlash ? flashImages[direction] : receptorImages[direction],\n          0,\n          0,\n          ARROW_WIDTH,\n          ARROW_HEIGHT,\n          (i + 4) * ARROW_WIDTH,\n          scroll === \"reverse\" ? getReverseCoord(0, ARROW_HEIGHT, canvas) : 0,\n          ARROW_WIDTH,\n          ARROW_HEIGHT\n        );\n      }\n    });\n  }\n}\n\nexport default StepZone;\n","import { ARROW_HEIGHT } from \"../../../constants\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nclass Guidelines {\n  constructor(finalBeat) {\n    this.finalBeat = finalBeat;\n  }\n\n  render(canvas, { beatTick, timeTick }, attrs) {\n    const { mods } = attrs;\n    const { speed, scroll, cmod } = mods;\n\n    const showGuidelines = mods.guidelines;\n    if (!showGuidelines) return;\n\n    // FIXME: do an actual spacing calculation for cmod\n    if (speed === \"cmod\") return;\n\n    const c = canvas.getContext(\"2d\");\n    c.strokeStyle = \"#fff\";\n\n    const topBoundary = 0;\n    const bottomBoundary = canvas.height;\n\n    for (let beat = 0; beat <= this.finalBeat; beat++) {\n      let destY = (beat - beatTick) * ARROW_HEIGHT * speed + ARROW_HEIGHT / 2;\n      // let destY = (beat - beatTick) * ARROW_HEIGHT * speed;\n\n      destY = (destY + 0.5) | 0;\n\n      // Render a thick line if the beat falls on the beginning of the measure.\n      // Render a thin line otherwise\n      const lineWidth = beat % 4 === 0 ? 2 : 1;\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        if (scroll === \"reverse\") {\n          destY = getReverseCoord(destY, 0, canvas);\n        }\n        c.beginPath();\n        c.moveTo(0, destY);\n        c.lineTo(canvas.width, destY);\n        c.lineWidth = lineWidth;\n        c.stroke();\n      }\n    }\n  }\n}\n\nexport default Guidelines;\n","import {\n  DIRECTIONS,\n  ARROW_WIDTH,\n  ARROW_HEIGHT,\n  MARVELOUS_FLASH_FRAMES,\n} from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst image = new Image();\nimage.src = getAssetPath(\"tap_explosion.png\");\n\nclass TargetFlash {\n  constructor(arrow) {\n    this.frame = -1;\n\n    this.directions = [];\n    arrow.note.forEach((note, directionIdx) => {\n      if (note === \"1\" || note === \"2\" || note === \"3\") {\n        this.directions.push(directionIdx);\n      }\n    });\n  }\n\n  render(canvas, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods } = attrs;\n    const { scroll } = mods;\n\n    this.directions.forEach((directionIdx) => {\n      if (this.frame < 0 || this.frame >= MARVELOUS_FLASH_FRAMES) return;\n      const destX = directionIdx * ARROW_WIDTH;\n\n      c.save();\n      c.globalAlpha = 1 - Math.pow(this.frame / MARVELOUS_FLASH_FRAMES, 3);\n      c.drawImage(\n        image,\n        0,\n        0,\n        ARROW_WIDTH,\n        ARROW_HEIGHT,\n        destX - this.frame,\n        scroll === \"reverse\"\n          ? getReverseCoord(0 + this.frame, ARROW_HEIGHT, canvas)\n          : 0 - this.frame,\n        ARROW_WIDTH + this.frame * 2,\n        ARROW_HEIGHT + this.frame * 2\n      );\n      c.restore();\n    });\n  }\n}\n\nexport default TargetFlash;\n","import { getAssetPath } from \"../../../utils\";\n\nconst comboImages = {};\n\n[\"A20\", \"A\"].forEach((type) => {\n  comboImages[type] = {\n    num: new Image(),\n    combo: new Image(),\n  };\n  comboImages[type].num.src = getAssetPath(`combo_numbers_${type}.png`);\n  comboImages[type].combo.src = getAssetPath(`combo_${type}.png`);\n});\n\ncomboImages[\"A20\"].coords = {\n  1: {\n    combo: { destX: 104, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [51], destY: 170, width: 63, height: 70 },\n  },\n  2: {\n    combo: { destX: 114, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [17, 61], destY: 170, width: 63, height: 70 },\n  },\n  3: {\n    combo: { destX: 134, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [-7, 37, 81], destY: 170, width: 63, height: 70 },\n  },\n  4: {\n    combo: { destX: 134, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [-51, -7, 37, 81], destY: 170, width: 63, height: 70 },\n  },\n};\n\ncomboImages[\"A\"].coords = {\n  1: {\n    combo: { destX: 104, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [51], destY: 170, width: 63, height: 70 },\n  },\n  2: {\n    combo: { destX: 114, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [17, 61], destY: 170, width: 63, height: 70 },\n  },\n  3: {\n    combo: { destX: 134, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [-7, 37, 81], destY: 170, width: 63, height: 70 },\n  },\n  4: {\n    combo: { destX: 134, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [-51, -7, 37, 81], destY: 170, width: 63, height: 70 },\n  },\n};\n\nconst doubleXOffset = 128;\n\nclass ComboDisplay {\n  constructor(attrs) {}\n\n  render(canvas, comboNum = 0, attrs) {\n    const c = canvas.getContext(\"2d\");\n    if (comboNum < 4) return;\n\n    const { mods, mode } = attrs;\n    const { comboFont } = mods;\n\n    let type = comboFont;\n\n    comboNum = comboNum.toString();\n    const numDigits = comboNum.length;\n    // console.log(\"comboNum\", comboNum, \"numDigits\", numDigits);\n\n    const comboImg = comboImages[type].combo;\n    const numImg = comboImages[type].num;\n\n    const comboDestX =\n      comboImages[type].coords[numDigits].combo.destX +\n      (mode === \"double\" ? doubleXOffset : 0);\n    const comboDestY = comboImages[type].coords[numDigits].combo.destY;\n    const comboWidth = comboImages[type].coords[numDigits].combo.width;\n    const comboHeight = comboImages[type].coords[numDigits].combo.height;\n\n    // draw combo word\n    c.drawImage(\n      comboImg,\n      0,\n      0,\n      comboImg.width,\n      comboImg.height,\n      comboDestX,\n      comboDestY,\n      comboWidth,\n      comboHeight\n    );\n\n    // draw combo number\n    for (let i = 0; i < numDigits; i++) {\n      const digit = comboNum[i];\n\n      const digitWidth = numImg.width / 4;\n      const digitHeight = numImg.height / 4;\n      const imageCol = digit % 4;\n      const imageRow = Math.floor(digit / 4);\n      const imageX = imageCol * digitWidth;\n      const imageY = imageRow * digitHeight;\n\n      const numDestX =\n        comboImages[type].coords[numDigits].num.destX[i] +\n        (mode === \"double\" ? doubleXOffset : 0);\n      const numDestY = comboImages[type].coords[numDigits].num.destY;\n      const numWidth = comboImages[type].coords[numDigits].num.width;\n      const numHeight = comboImages[type].coords[numDigits].num.height;\n\n      // console.log(\n      //   `digit ${digit}, i ${i}, imageX ${imageX}, imageY ${imageY}, numDestX ${numDestX}, numDestY ${numDestY}, numWidth ${numWidth}, numHeight ${numHeight}`\n      // );\n\n      c.drawImage(\n        numImg,\n        imageX,\n        imageY,\n        digitWidth,\n        digitHeight,\n        numDestX,\n        numDestY,\n        numWidth,\n        numHeight\n      );\n    }\n  }\n}\n\nexport default ComboDisplay;\n","import { ARROW_HEIGHT } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst image = new Image();\nimage.src = getAssetPath(\"bpm_stop_values.png\");\n\nconst DIGIT_WIDTH = 9;\nconst DOT_WIDTH = 3;\nconst DIGIT_HEIGHT = 19;\n\nclass BpmAndStopDisplay {\n  renderBpm(bpmReel, bpm, { beatTick, timeTick }, { mods }) {\n    const c = bpmReel.getContext(\"2d\");\n    const pxPosition = getPxPosition(\n      bpm,\n      { beatTick, timeTick },\n      mods,\n      bpmReel\n    );\n\n    const topBoundary = -DIGIT_HEIGHT;\n    const bottomBoundary = bpmReel.height;\n\n    let destY = pxPosition - 10;\n    destY = (destY + 0.5) | 0;\n    const imageHeight = DIGIT_HEIGHT;\n\n    const digits = bpm.value.toString();\n    const numDigits = digits.length;\n    const imageY = 0;\n\n    if (destY > topBoundary && destY < bottomBoundary) {\n      let destX = bpmReel.width - 2;\n      for (let i = numDigits - 1; i >= 0; i--) {\n        const digit = digits[i];\n        let imageX, imageWidth;\n        if (digit === \".\") {\n          imageX = DIGIT_WIDTH * 10 + (DIGIT_WIDTH - DOT_WIDTH) / 2;\n          imageWidth = DOT_WIDTH;\n          destX -= DOT_WIDTH;\n        } else {\n          imageX = DIGIT_WIDTH * parseInt(digit);\n          imageWidth = DIGIT_WIDTH;\n          destX -= DIGIT_WIDTH;\n        }\n        // console.log(\n        //   `digit ${digit}: imageX ${imageX}, imageY ${imageY}, imageWidth ${imageWidth}, imageHeight ${imageHeight}`\n        // );\n        c.drawImage(\n          image,\n          imageX,\n          imageY,\n          imageWidth,\n          imageHeight,\n          destX,\n          destY,\n          imageWidth,\n          imageHeight\n        );\n      }\n    }\n  }\n\n  renderStop(stopReel, stop, { beatTick, timeTick }, { mods }) {\n    const c = stopReel.getContext(\"2d\");\n    const pxPosition = getPxPosition(\n      stop,\n      { beatTick, timeTick },\n      mods,\n      stopReel\n    );\n\n    const topBoundary = -DIGIT_HEIGHT;\n    const bottomBoundary = stopReel.height;\n\n    const destY = pxPosition - 10;\n    const imageHeight = DIGIT_HEIGHT;\n\n    const digits = stop.value.toString();\n    const numDigits = digits.length;\n    const imageY = DIGIT_HEIGHT;\n\n    if (destY > topBoundary && destY < bottomBoundary) {\n      let destX = 2;\n      for (let i = 0; i < numDigits; i++) {\n        const digit = digits[i];\n        let imageX, imageWidth;\n        if (digit === \".\") {\n          imageX = DIGIT_WIDTH * 10 + (DIGIT_WIDTH - DOT_WIDTH) / 2;\n          imageWidth = DOT_WIDTH;\n        } else {\n          imageX = DIGIT_WIDTH * parseInt(digit);\n          imageWidth = DIGIT_WIDTH;\n        }\n        // console.log(\n        //   `digit ${digit}: imageX ${imageX}, imageY ${imageY}, imageWidth ${imageWidth}, imageHeight ${imageHeight}, destX ${destX}`\n        // );\n        c.drawImage(\n          image,\n          imageX,\n          imageY,\n          imageWidth,\n          imageHeight,\n          destX,\n          destY,\n          imageWidth,\n          imageHeight\n        );\n\n        destX += digit === \".\" ? DOT_WIDTH : DIGIT_WIDTH;\n      }\n    }\n  }\n}\n\nconst getPxPosition = (event, { beatTick, timeTick }, mods, reel) => {\n  let pxPosition;\n  if (mods.speed === \"cmod\") {\n    const timeDiff = event.timestamp - timeTick;\n    pxPosition = timeDiff * ARROW_HEIGHT * (mods.cmod / 60);\n  } else {\n    const beatDiff = event.beat - beatTick;\n    pxPosition = beatDiff * ARROW_HEIGHT * mods.speed;\n  }\n  pxPosition += ARROW_HEIGHT / 2;\n\n  if (mods.scroll === \"reverse\") {\n    pxPosition = getReverseCoord(pxPosition, 0, { height: reel.clientHeight });\n  }\n  return pxPosition;\n};\n\nexport default BpmAndStopDisplay;\n","import { ARROW_WIDTH } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst images = {};\n\nimages.upper = new Image();\nimages.upper.src = getAssetPath(\"upper_lanecover.png\");\nimages.lower = new Image();\nimages.lower.src = getAssetPath(\"lower_lanecover.png\");\n\nconst appearanceIdx = [\"hidden\", \"sudden\", \"hiddensudden\"];\n\nclass LaneCover {\n  constructor(attrs) {}\n\n  render(canvas, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods, mode } = attrs;\n    const { appearance, scroll } = mods;\n    const laneCoverHeight =\n      mods.laneCoverHeight[appearanceIdx.indexOf(appearance)];\n\n    if (\n      (appearance.includes(\"hidden\") && scroll === \"normal\") ||\n      (appearance.includes(\"sudden\") && scroll === \"reverse\")\n    ) {\n      let img = images.upper;\n      c.drawImage(\n        img,\n        0,\n        getReverseCoord(laneCoverHeight, 0, canvas),\n        img.width,\n        laneCoverHeight,\n        0,\n        0,\n        img.width,\n        laneCoverHeight\n      );\n\n      if (mode === \"double\") {\n        c.drawImage(\n          img,\n          0,\n          getReverseCoord(laneCoverHeight, 0, canvas),\n          img.width,\n          laneCoverHeight,\n          ARROW_WIDTH * 4,\n          0,\n          img.width,\n          laneCoverHeight\n        );\n      }\n    }\n    if (\n      (appearance.includes(\"sudden\") && scroll === \"normal\") ||\n      (appearance.includes(\"hidden\") && scroll === \"reverse\")\n    ) {\n      let img = images.lower;\n      c.drawImage(\n        img,\n        0,\n        0,\n        img.width,\n        laneCoverHeight,\n        0,\n        getReverseCoord(laneCoverHeight, 0, canvas),\n        img.width,\n        laneCoverHeight\n      );\n\n      if (mode === \"double\") {\n        c.drawImage(\n          img,\n          0,\n          0,\n          img.width,\n          laneCoverHeight,\n          ARROW_WIDTH * 4,\n          getReverseCoord(laneCoverHeight, 0, canvas),\n          img.width,\n          laneCoverHeight\n        );\n      }\n    }\n  }\n}\n\nexport default LaneCover;\n","export const PLAY_CHART_AUDIO = \"PLAY_CHART_AUDIO\";\nexport const PAUSE_CHART_AUDIO = \"PAUSE_CHART_AUDIO\";\nexport const STOP_CHART_AUDIO = \"STOP_CHART_AUDIO\";\nexport const SET_CHART_AUDIO_STATUS = \"SET_CHART_AUDIO_STATUS\";\n\nexport const PLAY_PREVIEW_AUDIO = \"PLAY_PREVIEW_AUDIO\";\nexport const STOP_PREVIEW_AUDIO = \"STOP_PREVIEW_AUDIO\";\nexport const SET_PREVIEW_AUDIO_STATUS = \"SET_PREVIEW_AUDIO_STATUS\";\n\nexport const SET_CHART_PROGRESS = \"SET_CHART_PROGRESS\";\n\nexport const setChartAudioStatus = (status) => (dispatch) => {\n  dispatch({\n    type: SET_CHART_AUDIO_STATUS,\n    payload: status,\n  });\n};\n\nexport const playChartAudio = () => (dispatch) => {\n  dispatch({\n    type: PLAY_CHART_AUDIO,\n  });\n};\n\nexport const pauseChartAudio = () => (dispatch) => {\n  dispatch({\n    type: PAUSE_CHART_AUDIO,\n  });\n};\n\nexport const stopChartAudio = () => (dispatch) => {\n  dispatch({\n    type: STOP_CHART_AUDIO,\n  });\n};\n\nexport const setPreviewAudioStatus = (status) => (dispatch) => {\n  dispatch({\n    type: SET_PREVIEW_AUDIO_STATUS,\n    payload: status,\n  });\n};\nexport const playPreviewAudio = () => (dispatch) => {\n  dispatch({\n    type: PLAY_PREVIEW_AUDIO,\n  });\n};\nexport const stopPreviewAudio = () => (dispatch) => {\n  dispatch({\n    type: STOP_PREVIEW_AUDIO,\n  });\n};\n\nexport const setChartProgress = (progress) => (dispatch) => {\n  dispatch({\n    type: SET_CHART_PROGRESS,\n    payload: progress,\n  });\n};\n","import * as actions from \"../actions/AudioActions\";\n\nconst initialState = {\n  chartAudio: {\n    status: \"stopped\",\n    progress: 0,\n  },\n  previewAudio: {\n    status: \"stopped\",\n  },\n};\n\nexport const audio = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_CHART_AUDIO_STATUS: {\n      const chartAudio = { ...state.chartAudio, status: action.payload };\n      return { ...state, chartAudio };\n    }\n    case actions.PLAY_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"playing\" };\n      return { ...state, chartAudio };\n    }\n    case actions.PAUSE_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"paused\" };\n      return { ...state, chartAudio };\n    }\n    case actions.STOP_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"stopped\" };\n      return { ...state, chartAudio };\n    }\n    case actions.SET_PREVIEW_AUDIO_STATUS: {\n      const previewAudio = { ...state.previewAudio, status: action.payload };\n      return { ...state, previewAudio };\n    }\n    case actions.PLAY_PREVIEW_AUDIO: {\n      const previewAudio = { ...state.previewAudio, status: \"playing\" };\n      return { ...state, previewAudio };\n    }\n    case actions.STOP_PREVIEW_AUDIO: {\n      const previewAudio = { ...state.previewAudio, status: \"stopped\" };\n      return { ...state, previewAudio };\n    }\n    case actions.SET_CHART_PROGRESS: {\n      const chartAudio = { ...state.chartAudio, progress: action.payload };\n      return { ...state, chartAudio };\n    }\n    default:\n      return state;\n  }\n};\n","import * as actions from \"../actions/ChartActions\";\n\nconst initialState = {\n  activeBpm: null,\n  combo: 0,\n};\n\nexport const chart = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.CHANGE_ACTIVE_BPM_DISPLAY: {\n      // const activeBpm = action.payload;\n      const activeBpm = Math.round(action.payload);\n      return { ...state, activeBpm };\n    }\n    case actions.SET_COMBO: {\n      return { ...state, combo: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n","export const UPDATE_MODS = \"UPDATE_MODS\";\nexport const UPDATE_LANE_COVER_HEIGHT = \"UPDATE_LANE_COVER_HEIGHT\";\n\nexport const updateMods = (mods) => (dispatch) => {\n  dispatch({\n    type: UPDATE_MODS,\n    payload: mods,\n  });\n};\n\nexport const updateLaneCoverHeight = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_LANE_COVER_HEIGHT,\n    payload,\n  });\n};\n","export const getUserSettings = () => {\n  try {\n    const settings = window.localStorage.getItem(\"userSettings\");\n    if (settings) {\n      return JSON.parse(settings);\n    }\n    return {};\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport const updateUserSettings = (newSettings) => {\n  let settings = window.localStorage.getItem(\"userSettings\");\n  try {\n    if (settings) {\n      settings = JSON.parse(settings);\n    } else {\n      settings = {};\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  Object.keys(newSettings).forEach((key) => {\n    settings[key] = newSettings[key];\n  });\n  window.localStorage.setItem(\"userSettings\", JSON.stringify(settings));\n};\n\nexport const getSavedSongProgress = () => {\n  return window.localStorage.getItem(\"progress\") || 0;\n};\n\nexport const saveSongProgress = (progress) => {\n  window.localStorage.setItem(\"progress\", progress);\n};\n","import { presetParams } from \"../../utils\";\nimport { DEFAULT_CMOD, DEFAULT_OFFSET } from \"../../constants\";\nimport { getUserSettings } from \"../../utils/userSettings\";\n\nexport const options = {\n  difficulty: [\"Beginner\", \"Basic\", \"Difficult\", \"Expert\", \"Challenge\"],\n  mode: [\"single\", \"double\"],\n  mods: {\n    speed: [\n      0.25,\n      0.5,\n      0.75,\n      1,\n      1.25,\n      1.5,\n      1.75,\n      2,\n      2.25,\n      2.5,\n      2.75,\n      3,\n      3.25,\n      3.5,\n      3.75,\n      4,\n      4.5,\n      5,\n      5.5,\n      6,\n      6.5,\n      7,\n      7.5,\n      8,\n    ],\n    appearance: [\"visible\", \"hidden\", \"sudden\", \"hiddensudden\", \"stealth\"],\n    turn: [\"off\", \"mirror\", \"left\", \"right\", \"shuffle\"],\n    shuffle: [1, 2, 3, 4, 5, 6, 7, 8],\n    stepZone: [\"on\", \"off\"],\n    scroll: [\"normal\", \"reverse\"],\n    noteskin: [\"rainbow\", \"note\", \"vivid\", \"flat\"],\n    comboDisplay: [\"behind\", \"inFront\", \"hidden\"],\n    comboFont: [\"A20\", \"A\"],\n  },\n};\n\n// Default values when user opens app for the first time\nconst optionDefaultValues = {\n  difficulty: \"Expert\",\n  mode: \"single\",\n  mods: {\n    speed: 2.5,\n    cmod: DEFAULT_CMOD,\n    appearance: \"visible\",\n    laneCoverHeight: [8, 8, 8],\n    laneCoverVisible: true,\n    turn: \"off\",\n    shuffle: 1,\n    stepZone: \"on\",\n    scroll: \"normal\",\n    noteskin: \"note\",\n    guidelines: true,\n    comboDisplay: \"behind\",\n    comboFont: \"A20\",\n    colorFreezes: false,\n    globalOffset: DEFAULT_OFFSET,\n    bpmStopDisplay: false,\n  },\n};\n\nexport const generateInitialValues = (params = presetParams) => {\n  // Values stored in localStorage user settings override default values\n  const userSettings = getUserSettings();\n  [\"song\", \"difficulty\", \"mode\"].forEach((key) => {\n    if (userSettings[key]) {\n      optionDefaultValues[key] = userSettings[key];\n    }\n  });\n\n  if (userSettings.mods) {\n    Object.keys(optionDefaultValues.mods).forEach((mod) => {\n      if (typeof userSettings.mods[mod] !== \"undefined\") {\n        optionDefaultValues.mods[mod] = userSettings.mods[mod];\n      }\n    });\n  }\n\n  // Preset params in the url override default values AND user settings\n  if (params.difficulty) {\n    const difficulties = {\n      b: \"Beginner\",\n      B: \"Basic\",\n      D: \"Difficult\",\n      E: \"Expert\",\n      C: \"Challenge\",\n    };\n    if (Object.keys(difficulties).includes(params.difficulty[0])) {\n      optionDefaultValues.difficulty = difficulties[params.difficulty[0]];\n    }\n    if (params.difficulty[1] === \"S\") {\n      optionDefaultValues.mode = \"single\";\n    } else if (params.difficulty[1] === \"D\") {\n      optionDefaultValues.mode = \"double\";\n    }\n  }\n  if (params.speed) {\n    const value = parseFloat(`${params.speed[0]}.${params.speed.slice(1)}`);\n    if (options.mods.speed.includes(value)) {\n      optionDefaultValues.mods.speed = value;\n    }\n  }\n  if (params.turn) {\n    const turnValue = params.turn.toLowerCase();\n    if (options.mods.turn.includes(turnValue)) {\n      optionDefaultValues.mods.turn = turnValue;\n    }\n  }\n\n  return optionDefaultValues;\n};\ngenerateInitialValues(presetParams);\n\nexport { optionDefaultValues };\n","import * as actions from \"../actions/ModsActions\";\nimport { optionDefaultValues } from \"../components/form/options\";\nimport { updateUserSettings } from \"../utils/userSettings\";\n\nconst initialState = optionDefaultValues.mods;\n\nexport const mods = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.UPDATE_MODS: {\n      const updatedMods = action.payload;\n      const updatedState = { ...state, ...updatedMods };\n      updateUserSettings({ mods: updatedState });\n      return updatedState;\n    }\n    case actions.UPDATE_LANE_COVER_HEIGHT: {\n      const { diff, canvasHeight } = action.payload;\n      const laneCoverHeight = [...state.laneCoverHeight];\n\n      // don't let lane covers go beyond the chart area boundary\n      let lowerBoundary = 0;\n      let upperBoundary = canvasHeight;\n      if (state.appearance === \"hiddensudden\") upperBoundary /= 2;\n      for (let i = 0; i < laneCoverHeight.length; i++) {\n        laneCoverHeight[i] += diff[i];\n        const height = laneCoverHeight[i];\n        if (height < lowerBoundary) laneCoverHeight[i] = lowerBoundary;\n        else if (height > upperBoundary) laneCoverHeight[i] = upperBoundary;\n      }\n\n      const updatedState = { ...state, laneCoverHeight };\n      updateUserSettings({ mods: updatedState });\n      return updatedState;\n    }\n    default:\n      return state;\n  }\n};\n","import * as actions from \"../actions/ScreenActions\";\nimport { getUserSettings, updateUserSettings } from \"../utils/userSettings\";\n\nconst userSettings = getUserSettings();\nconst initialState = {\n  innerWidth: window.innerWidth,\n  innerHeight: window.innerHeight,\n  activeView: userSettings.activeView || \"song\",\n};\n\nexport const screen = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.RESIZE_SCREEN: {\n      const { target } = action.payload;\n      const { innerWidth, innerHeight } = target;\n\n      const values = { innerWidth, innerHeight };\n\n      return { ...state, ...values };\n    }\n    case actions.SET_ACTIVE_VIEW: {\n      const activeView = action.payload;\n      updateUserSettings({ activeView });\n      return { ...state, activeView };\n    }\n    default:\n      return state;\n  }\n};\n","const loadStore = {\n  lastRequestedSong: null, // storing song title rn for easier debugging, change to hash\n  lastRequestedSongLoaded: false,\n};\nexport default loadStore;\n","import { tsv } from \"d3-fetch\";\n\nimport { getOriginPath, fetchDocument } from \"../utils\";\nimport loadStore from \"../utils/loadStore\";\n\nexport const GET_SIMFILE_LIST = \"GET_SIMFILE_LIST\";\nexport const LOAD_SIMFILE = \"LOAD_SIMFILE\";\n\nexport const getSimfileList = () => async (dispatch) => {\n  try {\n    const parsedTsv = await tsv(getOriginPath() + \"data/simfiles.tsv\");\n\n    parsedTsv.forEach((row) => {\n      row.levels = row.levels\n        .split(\",\")\n        .map((level) => (level ? parseInt(level) : null));\n      if (row.missingDifficulties) {\n        row.missingDifficulties = row.missingDifficulties\n          .split(\",\")\n          .map((level) => parseInt(level));\n      } else {\n        row.missingDifficulties = [];\n      }\n    });\n\n    dispatch({\n      type: GET_SIMFILE_LIST,\n      payload: parsedTsv,\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const loadSimfile = (song) => async (dispatch) => {\n  let smName = song.smName;\n\n  // special case for tohoku evolved: pick one of its types at random\n  if (song.hash === \"OddDoQ6dqi0QdQDDOO6qlO08d8bPbli1\") {\n    smName = smName.replace(\"1\", Math.floor(Math.random() * 4) + 1);\n  }\n\n  try {\n    // Immediately update the value of \"last requested song\"\n    // Any pending requests that finish before the last song is loaded will be ignored\n    loadStore.lastRequestedSong = song.title;\n    const sm = await fetchDocument(\n      `${getOriginPath()}simfiles/${encodeURIComponent(smName)}.${\n        song.useSsc ? \"ssc\" : \"sm\"\n      }`\n    );\n\n    // User might try to select a new song before the simfile is fetched.\n    // Only process simfile if this is the last song that was selected\n    if (loadStore.lastRequestedSong === song.title) {\n      dispatch({\n        type: LOAD_SIMFILE,\n        payload: sm,\n      });\n    }\n  } catch (error) {\n    alert(`Song ${song.title} failed to load`, error);\n    throw error;\n  }\n};\n","import * as actions from \"../actions/SimfileActions\";\n\nconst initialState = {\n  simfileList: [],\n  sm: null,\n};\n\nexport const simfiles = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.GET_SIMFILE_LIST: {\n      const simfileList = action.payload;\n      return { ...state, simfileList };\n    }\n    case actions.LOAD_SIMFILE: {\n      const sm = action.payload;\n      return { ...state, sm };\n    }\n\n    default:\n      return state;\n  }\n};\n","export const SELECT_SONG = \"SELECT_SONG\";\nexport const SELECT_DIFFICULTY = \"SELECT_DIFFICULTY\";\nexport const SELECT_MODE = \"SELECT_MODE\";\n\nexport const selectSong = (song) => (dispatch) => {\n  dispatch({\n    type: SELECT_SONG,\n    payload: song,\n  });\n};\n\nexport const selectDifficulty = (difficulty) => (dispatch) => {\n  dispatch({\n    type: SELECT_DIFFICULTY,\n    payload: difficulty,\n  });\n};\n\nexport const selectMode = (mode) => (dispatch) => {\n  dispatch({\n    type: SELECT_MODE,\n    payload: mode,\n  });\n};\n","import * as actions from \"../actions/SongSelectActions\";\nimport { optionDefaultValues } from \"../components/form/options\";\nimport { updateUserSettings } from \"../utils/userSettings\";\n\nconst initialState = {\n  difficulty: optionDefaultValues.difficulty,\n  mode: optionDefaultValues.mode,\n};\n\nexport const songSelect = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SELECT_SONG: {\n      const song = action.payload;\n      updateUserSettings({ song: song.hash });\n      return { ...state, song };\n    }\n    case actions.SELECT_DIFFICULTY: {\n      const difficulty = action.payload;\n      updateUserSettings({ difficulty });\n      return { ...state, difficulty };\n    }\n    case actions.SELECT_MODE: {\n      const mode = action.payload;\n      updateUserSettings({ mode });\n      return { ...state, mode };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport { audio } from \"./AudioReducer\";\nimport { chart } from \"./ChartReducer\";\nimport { mods } from \"./ModsReducer\";\nimport { screen } from \"./ScreenReducer\";\nimport { simfiles } from \"./SimfileReducer\";\nimport { songSelect } from \"./SongSelectReducer\";\n\nexport default combineReducers({\n  audio,\n  chart,\n  mods,\n  screen,\n  simfiles,\n  songSelect\n});\n","export const SET_BPM_CHANGE_QUEUE = \"SET_BPM_CHANGE_QUEUE\";\nexport const CHANGE_ACTIVE_BPM_DISPLAY = \"CHANGE_ACTIVE_BPM_DISPLAY\";\nexport const SET_COMBO = \"SET_COMBO\";\n\nexport const changeActiveBpm = (bpm) => (dispatch) => {\n  dispatch({\n    type: CHANGE_ACTIVE_BPM_DISPLAY,\n    payload: bpm,\n  });\n};\n\nexport const setCombo = (combo) => (dispatch) => {\n  dispatch({\n    type: SET_COMBO,\n    payload: combo,\n  });\n};\n","export const RESIZE_SCREEN = \"RESIZE_SCREEN\";\nexport const SET_ACTIVE_VIEW = \"SET_ACTIVE_VIEW\";\n\nexport const resizeScreen = (e) => (dispatch) => {\n  dispatch({\n    type: RESIZE_SCREEN,\n    payload: e,\n  });\n};\n\nexport const setActiveView = (view) => (dispatch) => {\n  dispatch({\n    type: SET_ACTIVE_VIEW,\n    payload: view,\n  });\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nexport default store;\n","import { presetParams } from \"../../../utils\";\nimport AudioPlayer from \"../../../core/AudioPlayer\";\n\nclass Progress {\n  constructor() {\n    this.mouseDown = false;\n    this.currentProgress = 0;\n\n    this.presetStart = 0;\n    if (presetParams.progress) {\n      this.presetStart = presetParams.progress / 100000;\n      this.currentProgress = this.presetStart;\n    }\n  }\n\n  initCanvas() {\n    this.canvas = document.querySelector(\"#progress\");\n    this.presetMarker = document.querySelector(\n      \"#progress + .preset-marker-wrapper\"\n    );\n\n    this.drawBackground();\n\n    // mobile scrub behavior\n    this.canvas.addEventListener(\"touchstart\", (e) => {\n      e.preventDefault();\n      this.jumpToProgress(e.touches[0]);\n    });\n    this.canvas.addEventListener(\"touchmove\", (e) => {\n      e.preventDefault();\n      this.jumpToProgress(e.touches[0]);\n    });\n\n    // desktop scrub behavior\n    this.canvas.addEventListener(\"mousedown\", (e) => {\n      e.preventDefault();\n      this.jumpToProgress(e);\n      this.mouseDown = true;\n    });\n    this.canvas.addEventListener(\"mousemove\", (e) => {\n      e.preventDefault();\n      if (this.mouseDown) {\n        this.jumpToProgress(e);\n      }\n    });\n    this.canvas.addEventListener(\"mouseup\", (e) => {\n      e.preventDefault();\n      this.mouseDown = false;\n    });\n\n    this.setPresetMarker();\n    window.addEventListener(\"resize\", (e) => {\n      this.setPresetMarker();\n    });\n  }\n\n  setPresetMarker() {\n    if (!this.presetStart || !this.presetMarker) return;\n    const totalWidth = this.canvas.offsetWidth;\n    this.presetPosition = totalWidth * this.presetStart;\n    this.presetMarker.style.left = `${this.presetPosition}px`;\n  }\n\n  setProgress(progress) {\n    this.currentProgress = progress;\n  }\n  getProgress() {\n    return this.currentProgress;\n  }\n\n  jumpToProgress(event, presetProgress) {\n    let progressPercent;\n\n    if (presetProgress) {\n      progressPercent = presetProgress;\n    } else {\n      const domRect = this.canvas.getBoundingClientRect();\n      const totalWidth = domRect.width;\n      const x = event.clientX - domRect.x;\n      progressPercent = x / totalWidth;\n    }\n\n    if (progressPercent < 0 || progressPercent > 1) return;\n\n    this.setProgress(progressPercent);\n    AudioPlayer.seekProgress(progressPercent);\n  }\n\n  jumpToPresetStart(e) {\n    this.jumpToProgress(e, this.presetStart);\n    e.stopPropagation();\n  }\n\n  drawBackground() {\n    const c = this.canvas.getContext(\"2d\");\n    c.fillStyle = \"#d7e2ed\";\n    c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  render(progress) {\n    if (isNaN(progress)) return;\n\n    this.setProgress(progress);\n\n    this.drawBackground();\n    const c = this.canvas.getContext(\"2d\");\n    c.fillStyle = \"#627c92\";\n    c.fillRect(0, 0, this.canvas.width * progress, this.canvas.height);\n  }\n}\n\nexport default new Progress();\n","import { Howl } from \"howler\";\nimport { gsap } from \"gsap\";\n\nimport store from \"../store\";\nimport * as actions from \"../actions/AudioActions\";\nimport Progress from \"../components/chart/canvas/Progress\";\n// import { changeActiveBpm, setCombo } from \"../actions/ChartActions\";\nimport { getAssetPath } from \"../utils\";\nimport { saveSongProgress } from \"../utils/userSettings\";\nimport {\n  getCurrentBpm,\n  changeActiveBpm,\n  getCurrentCombo,\n  getFullCombo,\n  initializeBeatWindow\n} from \"../utils/engineUtils\";\nimport { DEFAULT_OFFSET } from \"../constants\";\nimport { debugLog } from \"../utils/debugUtils\";\n\nclass AudioPlayer {\n  constructor() {\n    /*\n      Trying to share the same audio source for both song and preview was causing too many\n      issues. Sticking to keeping separate Howl objects for each even if means loading\n      duplicate copies of the same mp3\n    */\n    this.sources = {\n      song: {},\n      preview: {}\n      // assistTick: {\n      //   audio: new Howl({\n      //     src: getAssetPath(\"sounds/assist_tick.wav\"),\n      //     // format: [\"wav\"],\n      //     // html5: true,\n      //   }),\n      // },\n    }; // map of song hash to associated Howl object\n\n    this.currentSong = null; // hash of current song\n    this.currentPreview = null; // hash of current preview\n\n    this.currentSongId = null; // Howler soundID of current song\n    this.currentPreviewId = null; // Howler soundId of current preview\n\n    // this.updateTimeline = this.updateTimeline.bind(this);\n\n    this.previewFadeTimeout = null; // reference to preview fade setTimeout so it can be cleared\n\n    this.updateTimeline = this.updateTimeline.bind(this);\n    this.updateProgress = this.updateProgress.bind(this);\n    this.audioResyncFrames = 0;\n  }\n\n  getCurrentSong() {\n    const currentSong = this.sources.song[this.currentSong];\n    return currentSong;\n  }\n  getCurrentPreview() {\n    return this.sources.preview[this.currentPreview];\n  }\n\n  getCurrentTime() {\n    return this.getCurrentSong().audio.seek();\n  }\n\n  // when loading a song file for the first time, save it as two separate Howls:\n  // one for the full song and one for the preview sample\n  storeAudioSource(song, initialProgress = 0) {\n    if (!this.sources.song[song.hash]) {\n      this.setLoadingAudio(true);\n\n      const thisSong = (this.sources.song[song.hash] = { title: song.title });\n\n      thisSong.audio = new Howl({\n        src: `https://dl.dropboxusercontent.com/s/${song.dAudioUrl}`,\n        format: [\"mp3\"],\n        html5: true,\n        onload: () => {\n          // console.log(`AudioPlayer song loaded: ${song.title}`);\n          this.setLoadingAudio(false);\n          this.seekProgress(initialProgress);\n        },\n        onloaderror: (id, error, blah) => {\n          alert(`${id};;; ${error};;; ${blah}`);\n        },\n        onplay: () => {\n          thisSong.tl.play();\n          this.resync();\n          gsap.ticker.add(this.updateProgress);\n          this.startAnimationLoop();\n          store.dispatch(actions.playChartAudio());\n        },\n        onpause: () => {\n          thisSong.tl.pause();\n          gsap.ticker.remove(this.updateTimeline);\n          gsap.ticker.remove(this.updateProgress);\n          this.stopAnimationLoop();\n          store.dispatch(actions.pauseChartAudio());\n        },\n        onseek: () => {},\n        onstop: () => {\n          if (thisSong.tl) {\n            thisSong.tl.restart().pause();\n          }\n          gsap.ticker.remove(this.updateTimeline);\n          gsap.ticker.remove(this.updateProgress);\n          this.stopAnimationLoop();\n          store.dispatch(actions.stopChartAudio());\n        },\n        onend: spriteId => {\n          if (thisSong.tl) {\n            thisSong.tl.pause();\n          }\n          gsap.ticker.remove(this.updateTimeline);\n          gsap.ticker.remove(this.updateProgress);\n          this.stopAnimationLoop();\n          store.dispatch(actions.stopChartAudio());\n        }\n      });\n\n      // const thisPreview = (this.sources.preview[song.hash] = {\n      //   title: song.title,\n      // });\n      // thisPreview.audio = new Howl({\n      //   src: `https://dl.dropboxusercontent.com/s/${song.dAudioUrl}`,\n      //   format: [\"mp3\"],\n      //   html5: true,\n      //   sprite: {\n      //     sample: [\n      //       parseFloat((song.sampleStart - DEFAULT_OFFSET) * 1000),\n      //       parseFloat((song.sampleLength - DEFAULT_OFFSET) * 1000),\n      //     ],\n      //   },\n      //   onload: () => {\n      //     // thisPreview.audio.volume(0);\n      //   },\n      //   onplay: () => {\n      //     // const preview = this.getCurrentPreview().audio;\n      //     thisPreview.audio.volume(1);\n\n      //     const fadeinTime = 0;\n      //     const fadeoutTime = 2000;\n      //     // thisPreview.audio.fade(0, 1, fadeinTime);\n\n      //     this.previewFadeTimeout = setTimeout(() => {\n      //       thisPreview.audio.fade(1, 0, fadeoutTime);\n      //     }, song.sampleLength * 1000 - fadeoutTime);\n\n      //     store.dispatch(actions.playPreviewAudio());\n      //   },\n      //   onstop: () => {\n      //     clearTimeout(this.previewFadeTimeout);\n      //     // thisPreview.audio.volume(0);\n      //     this.currentPreviewId = null;\n      //     store.dispatch(actions.stopPreviewAudio());\n      //   },\n      //   onend: () => {\n      //     clearTimeout(this.previewFadeTimeout);\n      //     // thisPreview.audio.volume(0);\n      //     this.currentPreviewId = null;\n      //     store.dispatch(actions.stopPreviewAudio());\n      //   },\n      // });\n\n      // console.log(`Added ${song.title} to AudioPlayer.sources`, this.sources);\n    }\n  }\n\n  storePreviewSource(song, simfile) {\n    const thisPreview = (this.sources.preview[song.hash] = {\n      title: song.title\n    });\n    thisPreview.audio = new Howl({\n      src: `https://dl.dropboxusercontent.com/s/${song.dAudioUrl}`,\n      format: [\"mp3\"],\n      html5: true,\n      sprite: {\n        sample: [\n          parseFloat((simfile.sampleStart - DEFAULT_OFFSET) * 1000),\n          parseFloat((simfile.sampleLength - DEFAULT_OFFSET) * 1000)\n        ]\n      },\n      onload: () => {\n        // thisPreview.audio.volume(0);\n      },\n      onplay: () => {\n        // const preview = this.getCurrentPreview().audio;\n        thisPreview.audio.volume(1);\n\n        const fadeinTime = 0;\n        const fadeoutTime = 2000;\n        // thisPreview.audio.fade(0, 1, fadeinTime);\n\n        this.previewFadeTimeout = setTimeout(() => {\n          thisPreview.audio.fade(1, 0, fadeoutTime);\n        }, simfile.sampleLength * 1000 - fadeoutTime);\n\n        store.dispatch(actions.playPreviewAudio());\n      },\n      onstop: () => {\n        clearTimeout(this.previewFadeTimeout);\n        // thisPreview.audio.volume(0);\n        this.currentPreviewId = null;\n        store.dispatch(actions.stopPreviewAudio());\n      },\n      onend: () => {\n        clearTimeout(this.previewFadeTimeout);\n        // thisPreview.audio.volume(0);\n        this.currentPreviewId = null;\n        store.dispatch(actions.stopPreviewAudio());\n      }\n    });\n  }\n\n  selectSong(song, initialProgress = 0) {\n    if (this.currentSong) {\n      this.getCurrentSong().audio.stop(this.currentSongId);\n    }\n\n    this.storeAudioSource(song, initialProgress);\n    this.currentSong = song.hash;\n  }\n\n  resync() {\n    // number of frames it takes for audio to reload/restabilize\n    // this.getCurrentTime() (i.e. Howler .seek()) will return an object instead of a number\n    // if audio is not loaded yet\n    this.audioReloadFrames = 0;\n\n    // arbitrary number of frames chosen to tell timeline to resync with the audio\n    // this needs to be done after (/in addition to) the audio restabilizing\n    this.audioResyncFrames = 10;\n\n    gsap.ticker.add(this.updateTimeline);\n    // this.updateProgressOnce();\n  }\n\n  // when audio is played, resync timeline with audio a few times until audio playback\n  // stabilizes, then remove this method from the ticker\n  updateTimeline() {\n    // // for reducing debugging headaches; don't remove\n    const currentSong = this.getCurrentSong();\n    if (!currentSong.tl || !currentSong.globalParams) return;\n\n    let isAudioStable = false;\n\n    // NOTE: the following block will run 10 times on every resync\n    try {\n      const currentTime = this.getCurrentTime();\n      // console.log(\"currentTime\", currentTime);\n      if (typeof currentTime === \"number\") {\n        isAudioStable = true;\n        // console.log(\n        //   \"seek timeline to\",\n        //   currentTime,\n        //   \"after\",\n        //   this.audioReloadFrames,\n        //   \"frames\"\n        // );\n        // console.log(\"stabilized to\", currentTime);\n\n        const globalOffset = store.getState().mods.globalOffset;\n\n        currentSong.tl.seek(\n          // currentTime + DEFAULT_OFFSET + currentSong.globalParams.offset\n          currentTime + globalOffset + currentSong.globalParams.offset\n        );\n        this.updateProgressOnce();\n\n        if (this.getChartAudioStatus() === \"playing\") {\n          currentSong.tl.play();\n        }\n        this.audioResyncFrames--;\n      } else {\n        // console.log(\"audio restabilizing\");\n        currentSong.tl.pause();\n        this.audioReloadFrames++;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    // This block will only run once on every resync\n    if (isAudioStable && this.audioResyncFrames <= 0) {\n      // recalculate current bpm (necessary if skipping progress)\n      const currentBpm = getCurrentBpm(currentSong.globalParams);\n      changeActiveBpm(currentBpm, currentSong.globalParams);\n      // document.querySelector(\".bpm-value\").textContent = Math.round(currentBpm);\n\n      const currentCombo = getCurrentCombo(currentSong);\n      // currentSong.globalParams.combo = currentCombo;\n\n      // store.dispatch(setCombo(currentCombo));\n      const comboTemp = document.querySelector(\"#combo-temp .combo-num\");\n      if (comboTemp) comboTemp.textContent = currentCombo;\n\n      // console.log(\"doOnce\");\n\n      gsap.ticker.remove(this.updateTimeline);\n    }\n  }\n\n  seekTime(timestamp) {\n    this.getCurrentSong().audio.seek(timestamp);\n    this.resync();\n  }\n  goBack(ms) {\n    this.seekTime(this.getCurrentTime() - ms * 0.001);\n  }\n  goForward(ms) {\n    this.seekTime(this.getCurrentTime() + ms * 0.001);\n  }\n\n  seekProgress(value) {\n    const audioDuration = this.getCurrentSong().audio.duration();\n    this.seekTime(value * audioDuration);\n  }\n\n  // gsap ticker method for regularly updating progress bar, not called manually\n  updateProgress(time, deltaTime, frame) {\n    const currentSong = this.getCurrentSong();\n    if (!currentSong || !currentSong.tl) return;\n\n    // console.log(currentSong.tl);\n\n    // detect significant frame skips and resync when it happens\n    if (deltaTime > 60) {\n      // console.log(deltaTime);\n      const currentTime = this.getCurrentTime();\n      console.log(\n        \"frame skip\",\n        \"deltaTime:\",\n        deltaTime,\n        \"currentTime:\",\n        currentTime\n      );\n      if (typeof currentTime === \"number\") {\n        const globalOffset = store.getState().mods.globalOffset;\n\n        currentSong.tl.seek(\n          currentTime + globalOffset + currentSong.globalParams.offset\n        );\n      } else {\n        console.log(\"audio unstable after frame skip, resyncing\");\n        this.resync();\n      }\n    }\n    if (frame % 15 === 0) {\n      let t0 = performance.now();\n      const audio = currentSong.audio;\n      const progress = audio.seek() / audio.duration();\n      let t1 = performance.now();\n      const audioSeekPerf = t1 - t0;\n      // console.log(`audio seek/duration progress: ${(t1 - t0).toFixed(3)} ms`);\n      // store.dispatch(actions.setChartProgress(progress));\n\n      t0 = performance.now();\n      let tlProgress = currentSong.tl.progress();\n      t1 = performance.now();\n      const tlSeekPerf = t1 - t0;\n\n      // console.log(\n      //   `audioSeekPerf - tlSeekPerf = ${(audioSeekPerf - tlSeekPerf).toFixed(\n      //     3\n      //   )} ms`\n      // );\n      // console.log(`tl progress: ${(t1 - t0).toFixed(3)} ms`);\n\n      t0 = performance.now();\n      saveSongProgress(progress);\n      Progress.render(progress);\n      t1 = performance.now();\n      // console.log(`renderProgress ${(t1 - t0).toFixed(3)} ms`);\n    }\n  }\n\n  updateProgressOnce() {\n    this.updateProgress(null, null, 0);\n\n    const currentSong = this.getCurrentSong();\n    const currentCombo = getCurrentCombo(currentSong);\n\n    // const comboDebug = document.querySelector(\"#combo-debug .combo-debug-num\");\n    // if (comboDebug) {\n    //   comboDebug.textContent = currentCombo;\n    // }\n\n    debugLog(`FC: ${getFullCombo(currentSong)}`);\n\n    currentSong.globalParams.combo = currentCombo;\n\n    initializeBeatWindow(currentSong.globalParams);\n\n    this.updateAnimationLoopOnce();\n  }\n\n  setTimeline(tl) {\n    this.getCurrentSong().tl = tl;\n  }\n  setGlobalParams(params) {\n    this.getCurrentSong().globalParams = params;\n  }\n\n  play() {\n    if (this.getChartAudioStatus() === \"pending\") {\n      return;\n    }\n    const currentSong = this.getCurrentSong();\n    this.currentSongId = currentSong.audio.play();\n\n    debugLog(`last played: ${currentSong.title}`, 2);\n    store.dispatch(actions.setChartAudioStatus(\"pending\"));\n  }\n\n  pause() {\n    this.getCurrentSong().audio.pause(this.currentSongId);\n\n    const audio = this.getCurrentSong().audio;\n    const progress = audio.seek() / audio.duration();\n    saveSongProgress(progress);\n  }\n\n  stop() {\n    if (!this.getCurrentSong()) {\n      return;\n    }\n    this.getCurrentSong().audio.stop(this.currentSongId);\n    this.stopAnimationLoop();\n    setTimeout(() => this.seekTime(0));\n    this.currentSongId = null;\n  }\n\n  killImmediately(songId) {\n    const currentSong = this.sources.song[songId];\n    if (currentSong) {\n      if (currentSong.tl) {\n        this.sources.song[songId].tl.kill();\n      }\n      this.stop();\n    }\n    store.dispatch(actions.setChartAudioStatus(\"stopped\"));\n  }\n\n  isPlaying() {\n    return (\n      this.getCurrentSong() &&\n      this.getCurrentSong().audio.playing(this.currentSongId)\n    );\n  }\n  isPaused() {\n    return (\n      this.getCurrentSong() &&\n      !this.getCurrentSong().audio.playing(this.currentSongId)\n    );\n  }\n\n  playAssistTick() {\n    this.sources.assistTick.audio.play();\n  }\n\n  playSongPreview(song) {\n    if (this.getPreviewAudioStatus() === \"pending\") {\n      return;\n    }\n    if (this.currentPreview) {\n      this.getCurrentPreview().audio.stop(this.currentPreviewId);\n    }\n\n    // this.storeAudioSource(song);\n    this.currentPreview = song.hash;\n\n    const preview = this.getCurrentPreview().audio;\n\n    this.currentPreviewId = preview.play(\"sample\");\n    store.dispatch(actions.setPreviewAudioStatus(\"pending\"));\n  }\n\n  stopSongPreview() {\n    if (!this.currentPreview) return;\n    const preview = this.getCurrentPreview().audio;\n\n    preview.stop(this.currentPreviewId);\n\n    // clearTimeout(this.previewFadeTimeout);\n  }\n\n  isPreviewPlaying() {\n    return (\n      this.getCurrentPreview() &&\n      this.getCurrentPreview().audio.playing(this.currentPreviewId)\n    );\n  }\n\n  getChartAudioStatus() {\n    return store.getState().audio.chartAudio.status;\n  }\n  getPreviewAudioStatus() {\n    return store.getState().audio.previewAudio.status;\n  }\n}\n\nexport default new AudioPlayer();\n","import { gsap } from \"gsap\";\n\nimport Arrow from \"../components/chart/canvas/Arrow\";\nimport ShockArrow from \"../components/chart/canvas/ShockArrow\";\nimport StepZone from \"../components/chart/canvas/StepZone\";\nimport Guidelines from \"../components/chart/canvas/Guidelines\";\nimport TargetFlash from \"../components/chart/canvas/TargetFlash\";\nimport ComboDisplay from \"../components/chart/canvas/ComboDisplay\";\nimport BpmAndStopDisplay from \"../components/chart/canvas/BpmAndStopDisplay\";\nimport LaneCover from \"../components/chart/canvas/LaneCover\";\nimport { applyTurnMods, initializeBeatWindow, updateBeatWindow, changeActiveBpm } from \"../utils/engineUtils\";\nimport { END_EXTRA_BEATS, MARVELOUS_FLASH_FRAMES, DEFAULT_CMOD } from \"../constants\";\nimport AudioPlayer from \"./AudioPlayer\";\nimport store from \"../store\";\nimport { debugLogView, debugSimfileChart } from \"../utils/debugUtils\";\n\nclass GameEngine {\n  constructor(canvas, simfiles, chartParams) {\n    this.canvas = canvas;\n    this.c = canvas.getContext(\"2d\");\n    // this.sm = sm;\n    this.simfiles = simfiles;\n\n    this.tl = gsap.timeline();\n    this.eventList = [];\n    this.arrows = [];\n    this.shocks = [];\n    this.freezes = [];\n    this.allArrows = [];\n\n    this.mainLoopRequestRef = null;\n\n    this.bpmReel = document.getElementById(\"bpmReel\");\n    this.stopReel = document.getElementById(\"stopReel\");\n\n    this.drawBackground();\n\n    this.globalParams = {\n      /*\n        Use this parameter to keep track of which beat the chart is on at any given point.\n        Animate this one property in the timeline, then reference its value to calculate frames\n        for step zone and arrow animations without having to create separate tweens for them.\n      */\n      beatTick: 0,\n\n      /*\n        Use this parameter to animate values that can be tracked as a continuous function of time,\n        e.g. position of arrows/guidelines on a cmod.\n        Not intended to be used for events that happen at discrete timestamps, such as combo updates and target flashes\n      */\n      timeTick: 0,\n\n      /*\n        Use this parameter for animations based on absolute frame and not a function of the beat.\n      */\n      frame: 0,\n\n      combo: 0,\n      bpmQueue: [], // this is the one that is used\n\n      targetFlashes: {},\n\n      // \"global\" variables for creating the timeline\n      /*\n        lol for lack of a better word. Refers to the last arrow or last bpm change/stop event,\n        whichever comes later\n      */\n      lastEntity: null,\n\n      /*\n        The beat that the timeline ends on. Will be defined as the beat of the lastEntity\n      */\n      finalBeat: 0,\n\n      /*\n        Miscellaneous constant parameters for ease of access\n      */\n      chartAreaHeight: canvas.height,\n    };\n\n    AudioPlayer.startAnimationLoop = this.startLoop.bind(this);\n    AudioPlayer.stopAnimationLoop = this.stopLoop.bind(this);\n    AudioPlayer.updateAnimationLoopOnce = this.updateLoopOnce.bind(this);\n\n    // if (!this.sm) return;\n\n    // init logic\n    // this.simfiles = parseSimfile(this.sm, simfileType);\n    // console.log(\"this.simfiles\", this.simfiles);\n\n    this.resetChart(chartParams);\n  }\n\n  resetChart({ mode, difficulty, mods }) {\n    const { audio, songSelect } = store.getState();\n\n    // kill the previous gsap timeline before creating a new one\n    if (this.tl) {\n      this.tl.kill();\n    }\n    this.tl = gsap.timeline();\n\n    // reinitialize all chart-specific values\n    this.eventList.length = 0;\n    this.arrows.length = 0;\n    this.freezes.length = 0;\n    this.shocks.length = 0;\n    this.allArrows.length = 0;\n\n    this.globalParams.beatTick = 0;\n    this.globalParams.timeTick = 0;\n    this.globalParams.frame = 0;\n    this.globalParams.combo = 0;\n    this.globalParams.bpmQueue = [];\n    this.globalParams.stopQueue = [];\n    // this.globalParams.arrows = self.allArrows;\n    this.globalParams.arrows = this.arrows;\n    this.globalParams.freezes = this.freezes;\n    this.globalParams.shocks = this.shocks;\n    this.globalParams.allArrows = this.allArrows;\n\n    this.globalParams.beatWindowStartPtr = {};\n    this.globalParams.beatWindowEndPtr = {};\n    this.globalParams.timeWindowStartPtr = {};\n    this.globalParams.timeWindowEndPtr = {};\n\n    this.globalParams.targetFlashes = {};\n    this.globalParams.mods = mods;\n    AudioPlayer.setGlobalParams(this.globalParams);\n\n    // debugging\n    window.globalParams = this.globalParams;\n\n    // recreate the chart with the new given parameters\n    // then immediately seek to where the chart's progress was before it was recreated\n    const simfile = this.simfiles[`${mode}_${difficulty}`];\n    if (simfile) {\n      debugSimfileChart(simfile);\n\n      this.globalParams.offset = simfile.offset;\n\n      this.generateEventList(simfile);\n      this.generateArrows(simfile, mods);\n      this.generateTimestamps();\n      this.initTimeline(mods);\n      this.restartTl();\n      if (audio.chartAudio.status !== \"playing\") {\n        this.pauseTl();\n      }\n      AudioPlayer.storePreviewSource(songSelect.song, simfile);\n\n      AudioPlayer.resync();\n    }\n  }\n\n  startLoop() {\n    this.mainLoopRequestRef = window.requestAnimationFrame(this.mainLoop.bind(this));\n  }\n  stopLoop() {\n    window.cancelAnimationFrame(this.mainLoopRequestRef);\n  }\n  updateLoopOnce() {\n    this.clearBpmAndStopDisplay();\n    window.requestAnimationFrame(this.mainLoop.bind(this, false));\n  }\n\n  updateExternalGlobalParams(params) {\n    for (let param in params) {\n      this.globalParams[param] = params[param];\n    }\n    initializeBeatWindow(this.globalParams);\n  }\n\n  // bpm changes and stops converted to timestamps\n  generateEventList(simfile) {\n    const { bpms, stops } = simfile;\n    const eventList = [];\n    let bpmPtr = 0,\n      stopPtr = 0;\n    let currentBpm = bpms[0].value;\n\n    // console.log(\"generateEventList bpms\", bpms);\n    // console.log(\"generateEventList stops\", stops);\n\n    while (bpmPtr < bpms.length && stopPtr < stops.length) {\n      const bpm = bpms[bpmPtr];\n      const stop = stops[stopPtr];\n\n      // stops before bpm changes when they fall on the same beat\n      // add stop event, keeping track of the bpm at this point\n      if (stop.beat <= bpm.beat) {\n        eventList.push({ ...stop, bpm: currentBpm, type: \"stop\" });\n        stopPtr++;\n      }\n      // add bpm event, replacing the currently tracked bpm\n      else {\n        eventList.push({ ...bpm, type: \"bpm\" });\n        currentBpm = bpm.value;\n        bpmPtr++;\n      }\n    }\n    while (bpmPtr < bpms.length) {\n      eventList.push({ ...bpms[bpmPtr], type: \"bpm\" });\n      bpmPtr++;\n    }\n    while (stopPtr < stops.length) {\n      eventList.push({ ...stops[stopPtr], bpm: currentBpm, type: \"stop\" });\n      stopPtr++;\n    }\n\n    eventList[0].timestamp = 0;\n\n    this.globalParams.bpmQueue = [eventList[0]];\n\n    for (let i = 1; i < eventList.length; i++) {\n      const prevEvent = eventList[i - 1];\n      const currentEvent = eventList[i];\n      const prevTimestamp = eventList[i - 1].timestamp;\n\n      // Find the number of beats elapsed between the current and previous event,\n      // then convert this into seconds using the bpm at the previous event.\n      // If the previous event was a stop, add the length of the stop.\n      // The timestamp of the current event is this number of seconds after the\n      // timestamp of the previous event.\n      const beatDiff = currentEvent.beat - prevEvent.beat;\n      const prevBpm = prevEvent.type === \"bpm\" ? prevEvent.value : prevEvent.bpm;\n      let timestampDiff = (beatDiff / prevBpm) * 60;\n      if (prevEvent.type === \"stop\") timestampDiff += prevEvent.value;\n      const currentTimestamp = prevTimestamp + timestampDiff;\n\n      currentEvent.timestamp = currentTimestamp;\n\n      if (currentEvent.type === \"bpm\") {\n        this.globalParams.bpmQueue.push(currentEvent);\n      } else if (currentEvent.type === \"stop\") {\n        this.globalParams.stopQueue.push(currentEvent);\n      }\n    }\n\n    this.eventList = eventList;\n    return eventList;\n  }\n\n  generateArrows(simfile, mods) {\n    let { chart } = simfile;\n    const mode = store.getState().songSelect.mode;\n\n    if (Array.isArray(chart[0])) {\n      const newChart = [];\n      chart.forEach((measure) => {\n        newChart.push(...measure);\n      });\n      chart = newChart;\n    }\n\n    chart = applyTurnMods(chart, mods, mode);\n\n    // calculate beat positions for each arrow\n    chart.forEach((note, key) => {\n      // calculate starting position currentBeatPosition\n      const { measureIdx, measureN, measureD } = note;\n      note.beatstamp = (measureIdx + measureN / measureD) * 4;\n\n      // truncate to 3 decimal places in a consistent manner as stop beatstamps\n      note.beatstamp = Math.floor(note.beatstamp * 1000) / 1000;\n    });\n\n    // generate arrays of arrows by category\n    chart.forEach((note, key) => {\n      if (note.note[0] === \"M\" || note.note[4] === \"M\") {\n        const shockArrow = new ShockArrow({ key, ...note });\n        this.shocks.push(shockArrow);\n        this.allArrows.push(shockArrow);\n      }\n      if (note.note.includes(\"1\") || note.note.includes(\"2\") || note.note.includes(\"3\")) {\n        const arrow = new Arrow({ key, ...note });\n        this.arrows.push(arrow);\n        this.allArrows.push(arrow);\n\n        if (note.note.includes(\"2\") || note.note.includes(\"3\")) {\n          this.freezes.push(arrow);\n        }\n      }\n    });\n\n    this.stepZone = new StepZone();\n    this.comboDisplay = new ComboDisplay();\n    this.laneCover = new LaneCover();\n\n    // console.log(\"all arrows\", this.allArrows);\n    // console.log(`chart for ${simfile.difficulty}`, chart);\n  }\n\n  generateTimestamps() {\n    // Designate the \"end\" of the chart as an arbitrary number of beats (8?) after either the last arrow\n    // or the last event in the chart, whichever comes later\n    const lastArrow = this.arrows[this.arrows.length - 1];\n    const lastEvent = this.eventList[this.eventList.length - 1];\n\n    if (lastArrow && lastEvent) {\n      const lastArrowBeat = lastArrow.beatstamp;\n      const lastEventBeat = lastEvent.beat;\n      if (lastEventBeat > lastArrowBeat) {\n        this.globalParams.finalBeat = lastEventBeat;\n        this.globalParams.lastEntity = lastEvent;\n      } else {\n        this.globalParams.finalBeat = lastArrowBeat;\n        this.globalParams.lastEntity = lastArrow;\n      }\n    } else if (lastArrow) {\n      this.globalParams.finalBeat = lastArrow.beatstamp;\n      this.globalParams.lastEntity = lastArrow;\n    } else if (lastEvent) {\n      this.globalParams.finalBeat = lastEvent.beat;\n      this.globalParams.lastEntity = lastEvent;\n    }\n    this.globalParams.finalBeat += END_EXTRA_BEATS;\n\n    // note events (combo, assist tick, target flash)\n    // console.log(\"eventList\", this.eventList);\n    const bpmQueue = this.globalParams.bpmQueue;\n    // console.log(\"bpmQueue\", bpmQueue);\n\n    // subset of arrows that specifically count for combo (e.g. excluding ends of freeze arrows)\n    this.comboArrows = [];\n\n    let currentBpmPtr = -1,\n      currentEventPtr = 0,\n      pendingStopPtr = -1,\n      currentBpm = null,\n      pendingStop = null,\n      currentStopOffset = 0,\n      currentCombo = 0;\n    this.allArrows.forEach((arrow, idx) => {\n      // Find the latest bpm section that starts before this note\n      while (currentBpmPtr < bpmQueue.length - 1 && bpmQueue[currentBpmPtr + 1].beat < arrow.beatstamp) {\n        // if this block was entered, a new bpm section was entered\n        currentBpmPtr++;\n        const bpmSection = bpmQueue[currentBpmPtr];\n        currentBpm = bpmSection.value;\n\n        // reset the accumulated stop time\n        currentStopOffset = 0;\n\n        // find the index of this bpm section in the eventList and use it as a starting point\n        // for keeping track of stops\n        for (let i = currentEventPtr; i < this.eventList.length; i++) {\n          const event = this.eventList[i];\n          if (event.beat === bpmSection.beat && event.type === \"bpm\") {\n            currentEventPtr = i;\n            const nextEvent = this.eventList[i + 1];\n            if (nextEvent && nextEvent.type === \"stop\") {\n              pendingStopPtr = i + 1;\n              pendingStop = this.eventList[pendingStopPtr];\n            } else {\n              pendingStop = null;\n            }\n            break;\n          }\n        }\n      }\n\n      // Accumulate total time of any stops that exist in this bpm section before this note.\n      // Keep track of the next pending stop so it can be added to the total stop time as soon as\n      // the first arrow following it is reached\n      while (pendingStop && pendingStop.beat < arrow.beatstamp) {\n        currentStopOffset += pendingStop.value;\n        const nextEvent = this.eventList[pendingStopPtr + 1];\n        if (nextEvent && nextEvent.type === \"stop\") {\n          pendingStopPtr++;\n        } else {\n          pendingStopPtr = -1;\n        }\n        pendingStop = this.eventList[pendingStopPtr];\n      }\n\n      const bpmSectionStartBeat = bpmQueue[currentBpmPtr].beat;\n      const bpmSectionStartTime = bpmQueue[currentBpmPtr].timestamp;\n\n      const beatDiff = arrow.beatstamp - bpmSectionStartBeat;\n      const timeDiff = beatDiff * (60 / currentBpm);\n      const arrowTimestamp = bpmSectionStartTime + timeDiff + currentStopOffset;\n      arrow.timestamp = arrowTimestamp;\n\n      // combo arrows (includes regular notes and freeze heads)\n      if (arrow.note.includes(\"1\") || arrow.note.includes(\"2\") || arrow.note.includes(\"M\")) {\n        currentCombo++;\n        arrow.combo = currentCombo;\n\n        this.comboArrows.push(arrow);\n      }\n      // freeze ends that are not simultaneous with combo arrows\n      else if (arrow.note.includes(\"3\")) {\n      }\n    });\n\n    this.allArrows.forEach((arrow) => {\n      // If the note is the tail of a freeze arrow, calculate the number of beats\n      // from the head of the freeze arrow\n      for (let i = 0; i < arrow.note.length; i++) {\n        if (arrow.note[i] !== \"3\") continue;\n\n        // Find the most recent freeze head on the same direction as the tail\n        // and retroactively fill in the beats of the head and tail\n        // Also apply this to every regular note that occurs during the freeze\n\n        const arrowsDuringFreeze = [];\n\n        for (let j = arrow.key - 1; j >= 0; j--) {\n          if (!this.allArrows[j].holdStartBeats) {\n            this.allArrows[j].holdStartBeats = [];\n            this.allArrows[j].holdEndBeats = [];\n            this.allArrows[j].holdStartTimes = [];\n            this.allArrows[j].holdEndTimes = [];\n          }\n          arrowsDuringFreeze.push(this.allArrows[j]);\n\n          if (this.allArrows[j].note[i] === \"2\") {\n            const freezeHead = this.allArrows[j];\n            const freezeTail = arrow;\n\n            if (!freezeTail.holdStartBeats) {\n              freezeTail.holdStartBeats = [];\n              freezeTail.holdEndBeats = [];\n              freezeTail.holdStartTimes = [];\n              freezeTail.holdEndTimes = [];\n            }\n            arrowsDuringFreeze.push(freezeTail);\n\n            arrowsDuringFreeze.forEach((arrowDuringFreeze) => {\n              arrowDuringFreeze.holdStartBeats[i] = freezeHead.beatstamp;\n              arrowDuringFreeze.holdEndBeats[i] = freezeTail.beatstamp;\n              arrowDuringFreeze.holdStartTimes[i] = freezeHead.timestamp;\n              arrowDuringFreeze.holdEndTimes[i] = freezeTail.timestamp;\n            });\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  // Calculate the gsap tweens before playing the chart\n  initTimeline(mods) {\n    /* Timestamp-based arrow events timeline */\n\n    this.allArrows.forEach((arrow) => {\n      // combo arrows (includes regular notes and freeze heads)\n      if (arrow.note.includes(\"1\") || arrow.note.includes(\"2\") || arrow.note.includes(\"M\")) {\n        this.tl.set(\n          this.globalParams,\n          {\n            onStart: () => {\n              this.globalParams.combo = arrow.combo;\n\n              if (arrow instanceof Arrow) {\n                // AudioPlayer.playAssistTick();\n                // console.log(arrow);\n                this.globalParams.targetFlashes[arrow.beatstamp] = new TargetFlash(arrow);\n              }\n            },\n          },\n          arrow.timestamp - 0.008\n        );\n      }\n\n      // freeze ends that are not simultaneous with combo arrows\n      else if (arrow.note.includes(\"3\")) {\n        this.tl.set(\n          this.globalParams,\n          {\n            onStart: () => {\n              this.globalParams.targetFlashes[arrow.beatstamp] = new TargetFlash(arrow);\n            },\n          },\n          arrow.timestamp - 0.008\n        );\n      }\n    });\n\n    /* Arrows timeline */\n\n    // set tween starting point back to 0\n    this.tl = this.tl.set({}, {}, 0);\n\n    // time tick timeline for cmod\n    // extend duration by an arbitrarily long buffer so rounding error does not cause the\n    // last arrow to stop a tiny decimal before reaching 0\n    this.tl = this.tl.to(\n      this.globalParams,\n      {\n        timeTick: this.globalParams.lastEntity.timestamp + 1,\n        duration: this.globalParams.lastEntity.timestamp + 1,\n        ease: \"none\",\n      },\n      \">\"\n    );\n\n    // set tween starting point back to 0\n    this.tl = this.tl.set({}, {}, 0);\n\n    /*\n      The space in between each event (i.e. a bpm change or stop) denotes a continous section of constant bpm.\n      Create a tween to animate the global beat tick for each of these sections and chain them together.\n      The position and/or frame animation of each canvas object (e.g. arrows, step zone, guidelines) can be\n      determined as a function of the beat tick value at any given point.\n    */\n    let accumulatedBeatTick = 0;\n    let bpm;\n\n    // beat tick timeline for normal speed mods\n    for (let i = 0; i < this.eventList.length; i++) {\n      let startEvent = this.eventList[i],\n        endEvent = this.eventList[i + 1];\n\n      // delay the animations by the length of the stop, if applicable\n      let delay = startEvent.type === \"stop\" ? startEvent.value : 0;\n\n      // the bpm of this section\n      if (startEvent.type === \"bpm\") bpm = startEvent.value;\n      else if (startEvent.type === \"stop\") bpm = startEvent.bpm;\n\n      // if there is a bpm change or stop event somewhere ahead of this one\n      if (endEvent) {\n        // number of beats between startEvent and endEvent, i.e. how long this constant bpm section is\n        const sectionBeatLength = endEvent.beat - startEvent.beat;\n\n        // the duration of this constant bpm section in seconds\n        const sectionDuration = (sectionBeatLength / bpm) * 60;\n\n        this.tl = this.tl.to(\n          this.globalParams,\n          {\n            beatTick: accumulatedBeatTick + sectionBeatLength,\n            duration: sectionDuration,\n            ease: \"none\",\n            onStart: () => {\n              if (startEvent.type === \"bpm\") {\n                changeActiveBpm(startEvent.value, this.globalParams);\n              }\n            },\n          },\n          `>${delay}`\n        );\n        accumulatedBeatTick += sectionBeatLength;\n      }\n      // if this is the last bpm change/stop event, animate remaining objects to end\n      else {\n        this.tl = this.tl.to(\n          this.globalParams,\n          {\n            beatTick: this.globalParams.finalBeat,\n            duration: ((this.globalParams.finalBeat - accumulatedBeatTick) / bpm) * 60,\n            ease: \"none\",\n            onStart: () => {\n              if (startEvent.type === \"bpm\") {\n                changeActiveBpm(startEvent.value, this.globalParams);\n              }\n            },\n          },\n          `>${delay}`\n        );\n      }\n    }\n\n    this.guidelines = new Guidelines(this.globalParams.finalBeat);\n    this.bpmAndStopDisplay = new BpmAndStopDisplay();\n\n    AudioPlayer.setTimeline(this.tl);\n\n    this.updateLoopOnce();\n  }\n\n  mainLoop(loop = true) {\n    // if this gameEngine is replaced and flagged for garbage deletion, squash any residual\n    // attempts to invoke its mainLoop\n    if (this.killed) {\n      // console.log(\"old mainLoop squashed\");\n      return;\n    }\n\n    // console.log(\"mainLoop running\");\n    // console.log(\"\\n\\n\\n\");\n    let t0, t1;\n\n    // console.log(this.globalParams.timeTick);\n\n    t0 = performance.now();\n    this.drawBackground();\n    t1 = performance.now();\n    // console.log(`drawBackground: ${(t1 - t0).toFixed(3)} ms`);\n\n    const { songSelect, mods } = store.getState();\n    const { mode } = songSelect;\n\n    if (mods.cmod < 100 || mods.cmod > 1000) {\n      mods.cmod = DEFAULT_CMOD;\n    }\n\n    const { beatTick, timeTick } = this.globalParams;\n\n    if (this.stepZone && mods.stepZone !== \"off\") {\n      t0 = performance.now();\n      this.stepZone.render(\n        this.canvas,\n        { beatTick },\n        {\n          mode,\n          mods,\n        }\n      );\n      t1 = performance.now();\n      // console.log(`stepZone.render: ${(t1 - t0).toFixed(3)} ms`);\n    }\n    if (this.guidelines) {\n      t0 = performance.now();\n      this.guidelines.render(this.canvas, { beatTick, timeTick }, { mods });\n      t1 = performance.now();\n      // console.log(`guidelines.render: ${(t1 - t0).toFixed(3)} ms`);\n    }\n\n    /* Combo display, if behind arrows */\n    if (mods.comboDisplay === \"behind\") {\n      this.comboDisplay.render(this.canvas, this.globalParams.combo, {\n        mode,\n        mods,\n      });\n    }\n\n    updateBeatWindow(this.globalParams);\n\n    let windowStartPtr, windowEndPtr;\n    if (mods.speed === \"cmod\") {\n      windowStartPtr = this.globalParams.timeWindowStartPtr;\n      windowEndPtr = this.globalParams.timeWindowEndPtr;\n    } else {\n      windowStartPtr = this.globalParams.beatWindowStartPtr;\n      windowEndPtr = this.globalParams.beatWindowEndPtr;\n    }\n\n    /* Bpm and stop display */\n    if (!this.bpmReel) {\n      this.bpmReel = document.getElementById(\"bpmReel\");\n      this.bpmReel.height = this.canvas.height;\n      this.bpmReel.width = this.bpmReel.clientWidth;\n    }\n    if (!this.stopReel) {\n      this.stopReel = document.getElementById(\"stopReel\");\n      this.stopReel.height = this.canvas.height;\n      this.stopReel.width = this.stopReel.clientWidth;\n    }\n\n    if (mods.bpmStopDisplay) {\n      if (windowStartPtr.bpm <= windowEndPtr.bpm || windowStartPtr.stop <= windowEndPtr.stop) {\n        this.clearBpmAndStopDisplay();\n      }\n\n      for (let i = windowStartPtr.bpm; i <= windowEndPtr.bpm; i++) {\n        const bpm = this.globalParams.bpmQueue[i];\n        this.bpmAndStopDisplay.renderBpm(this.bpmReel, bpm, { beatTick, timeTick }, { mods });\n      }\n      for (let i = windowStartPtr.stop; i <= windowEndPtr.stop; i++) {\n        const stop = this.globalParams.stopQueue[i];\n        this.bpmAndStopDisplay.renderStop(this.stopReel, stop, { beatTick, timeTick }, { mods });\n      }\n      // window.bpmAndStopDisplay = this.bpmAndStopDisplay;\n    }\n\n    /* Arrows */\n\n    const upArrows = mode === \"double\" ? [2, 6] : [2];\n    const notUpArrows = mode === \"double\" ? [0, 1, 3, 4, 5, 7] : [0, 1, 3];\n    // console.log(`GameEngine`, [\n    //   windowStartPtr.arrow,\n    //   windowEndPtr.arrow,\n    // ]);\n    for (let i = windowEndPtr.shock; i >= windowStartPtr.shock; i--) {\n      const shockArrow = this.globalParams.shocks[i];\n      shockArrow.render(this.canvas, this.globalParams.frame, { beatTick, timeTick }, { mods });\n    }\n\n    for (let i = windowEndPtr.freeze; i >= windowStartPtr.freeze; i--) {\n      const freeze = this.globalParams.freezes[i];\n      notUpArrows.forEach((directionIdx) => {\n        freeze.renderFreezeBody(this.canvas, { beatTick, timeTick }, directionIdx, { mods });\n      });\n    }\n    for (let i = windowStartPtr.freeze; i <= windowEndPtr.freeze; i++) {\n      const freeze = this.globalParams.freezes[i];\n      upArrows.forEach((directionIdx) => {\n        freeze.renderFreezeBody(this.canvas, { beatTick, timeTick }, directionIdx, { mods });\n      });\n    }\n\n    for (let i = windowEndPtr.arrow; i >= windowStartPtr.arrow; i--) {\n      const arrow = this.globalParams.arrows[i];\n      notUpArrows.forEach((directionIdx) => {\n        arrow.renderArrow(this.canvas, { beatTick, timeTick }, directionIdx, {\n          mods,\n        });\n      });\n    }\n\n    // t0 = performance.now();\n    for (let i = windowStartPtr.arrow; i <= windowEndPtr.arrow; i++) {\n      const arrow = this.globalParams.arrows[i];\n      upArrows.forEach((directionIdx) => {\n        arrow.renderArrow(this.canvas, { beatTick, timeTick }, directionIdx, {\n          mods,\n        });\n      });\n    }\n    // t1 = performance.now();\n\n    // console.log(`arrows renderArrow: ${(t1 - t0).toFixed(3)} ms`);\n\n    // /* End arrows */\n\n    /* Combo display, if in front of arrows */\n    if (mods.comboDisplay === \"inFront\") {\n      this.comboDisplay.render(this.canvas, this.globalParams.combo, {\n        mode,\n        mods,\n      });\n    }\n\n    /* Hidden+ and/or Sudden+ lane cover */\n    if ([\"hidden\", \"sudden\", \"hiddensudden\"].includes(mods.appearance) && mods.laneCoverVisible) {\n      this.laneCover.render(this.canvas, { mode, mods });\n    }\n\n    /* Target flashes */\n    t0 = performance.now();\n    for (let beatstamp in this.globalParams.targetFlashes) {\n      const targetFlash = this.globalParams.targetFlashes[beatstamp];\n      targetFlash.frame++;\n      if (targetFlash.frame > MARVELOUS_FLASH_FRAMES) {\n        delete this.globalParams.targetFlashes[beatstamp];\n      } else {\n        targetFlash.render(this.canvas, { mods });\n      }\n    }\n    t1 = performance.now();\n    // console.log(`targetFlash render: ${(t1 - t0).toFixed(3)} ms`);\n\n    /* Manual css property updates for DOM-based components */\n\n    // if (!this.bpmReel) {\n    //   this.bpmReel = document.getElementById(\"bpmReel\");\n    // }\n    // if (!this.stopReel) {\n    //   this.stopReel = document.getElementById(\"stopReel\");\n    // }\n    // if (mods.speed !== \"cmod\" && mods.bpmStopDisplay) {\n    //   [this.bpmReel, this.stopReel].forEach((reel) => {\n    //     reel.style.height =\n    //       this.globalParams.finalBeat * ARROW_HEIGHT * mods.speed;\n    //     reel.style.transform = `translateY(-${\n    //       this.globalParams.beatTick * ARROW_HEIGHT * mods.speed\n    //     }px)`;\n    //   });\n    // }\n\n    // if (this.globalParams.beatTick) {\n    //   console.log(this.globalParams.beatTick);\n    // }\n    this.globalParams.frame++;\n\n    if (loop) {\n      this.mainLoopRequestRef = window.requestAnimationFrame(this.mainLoop.bind(this));\n    }\n  }\n\n  drawBackground() {\n    this.c.fillStyle = \"black\";\n    this.c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n  clearBpmAndStopDisplay() {\n    if (this.bpmReel) {\n      const c = this.bpmReel.getContext(\"2d\");\n      c.fillStyle = \"black\";\n      c.fillRect(0, 0, this.bpmReel.width, this.bpmReel.height);\n    }\n    if (this.stopReel) {\n      const c = this.stopReel.getContext(\"2d\");\n      c.fillStyle = \"black\";\n      c.fillRect(0, 0, this.stopReel.width, this.stopReel.height);\n    }\n  }\n\n  restartTl() {\n    // console.log(\"call restart\");\n    this.tl.restart();\n  }\n  pauseTl() {\n    this.tl.pause();\n  }\n  isTlPaused() {\n    return this.tl.paused();\n  }\n}\n\nexport default GameEngine;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Modal, Button, Input } from \"semantic-ui-react\";\nimport copy from \"copy-to-clipboard\";\n\nimport { getOriginPath } from \"../../utils\";\nimport Progress from \"./canvas/Progress\";\n\nconst difficulties = {\n  Beginner: \"b\",\n  Basic: \"B\",\n  Difficult: \"D\",\n  Expert: \"E\",\n  Challenge: \"C\",\n};\n\nconst modes = {\n  single: \"S\",\n  double: \"D\",\n};\n\nconst ShareModal = (props) => {\n  const { modalOpen, setModalOpen, data } = props;\n  const { song, difficulty, mode, mods } = data;\n\n  const shareUrl = useRef();\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (modalOpen === false) {\n      setMessage(\"\");\n    }\n  }, [modalOpen]);\n\n  if (!song) return null;\n\n  // console.log(\"ShareModal data\", data);\n\n  const generateShareUrl = () => {\n    const progress = Progress.getProgress();\n\n    const params = {\n      song: song.hash,\n      difficulty: difficulties[difficulty] + modes[mode] + \"P\",\n      turn: mods.turn !== \"off\" ? mods.turn : \"\",\n      speed: mods.speed.toString().replace(\".\", \"\"),\n      progress: parseInt(progress * 100000),\n    };\n\n    const queryStr = Object.keys(params)\n      .map((param) => {\n        if (params[param] === null || typeof params[param] === \"undefined\") {\n          return null;\n        }\n        return `${param}=${params[param]}`;\n      })\n      .filter((param) => param !== null)\n      .join(\"&\");\n\n    return getOriginPath() + \"?\" + queryStr;\n  };\n  shareUrl.current = generateShareUrl();\n\n  const copyShareUrl = () => {\n    copy(shareUrl.current);\n    setMessage(\"Copied link to clipboard\");\n  };\n\n  return (\n    <Modal\n      className=\"shareModal\"\n      size=\"fullscreen\"\n      open={modalOpen}\n      onClose={() => setModalOpen(false)}\n    >\n      <Modal.Header>Share link to chart</Modal.Header>\n      <Modal.Content>\n        <Input\n          type=\"text\"\n          className=\"share-url-input\"\n          value={shareUrl.current}\n          action\n        >\n          <input />\n          <Button onClick={copyShareUrl}>Copy</Button>\n        </Input>\n        <p>{message}</p>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","import React, { useEffect, useRef } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nconst HoldButton = (props) => {\n  const button = useRef();\n  const requestRef = useRef();\n\n  const pressingDownRef = useRef();\n  const notPressingDownRef = useRef();\n\n  const buttonProps = { ...props };\n  delete buttonProps.onClick; // to avoid having the button invoke onClick an extra time\n\n  // Component needs to constantly refresh its event listeners to use the\n  // most up-to-date version of props.onClick.\n  // Unfortunately, this current implementation is not able to update state in between\n  // consecutive onClick invocations while held.\n  // Try to limit logic to those that do not depend on changing state while being held\n  useEffect(() => {\n    const el = button.current.ref.current;\n    el.removeEventListener(\"mousedown\", pressingDownRef.current, false);\n    el.removeEventListener(\"mouseup\", notPressingDownRef.current, false);\n    el.removeEventListener(\"mouseleave\", notPressingDownRef.current, false);\n\n    el.removeEventListener(\"touchstart\", pressingDownRef.current, false);\n    el.removeEventListener(\"touchend\", notPressingDownRef.current, false);\n\n    pressingDownRef.current = pressingDown;\n    notPressingDownRef.current = notPressingDown;\n\n    el.addEventListener(\"mousedown\", pressingDownRef.current, false);\n    el.addEventListener(\"mouseup\", notPressingDownRef.current, false);\n    el.addEventListener(\"mouseleave\", notPressingDownRef.current, false);\n\n    el.addEventListener(\"touchstart\", pressingDownRef.current, false);\n    el.addEventListener(\"touchend\", notPressingDownRef.current, false);\n  }, [props.onClick]);\n\n  const pressingDown = (e) => {\n    e.preventDefault();\n    if (props.onClick) {\n      props.onClick(e);\n    }\n    requestRef.current = requestAnimationFrame(handleHold.bind(null, e));\n  };\n\n  const notPressingDown = (e) => {\n    e.preventDefault();\n    cancelAnimationFrame(requestRef.current);\n  };\n\n  const handleHold = (e) => {\n    if (props.onClick) {\n      props.onClick(e);\n    }\n    requestRef.current = requestAnimationFrame(handleHold.bind(null, e));\n  };\n\n  return (\n    <Button {...buttonProps} ref={button}>\n      {props.children}\n    </Button>\n  );\n};\n\nexport default HoldButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport HoldButton from \"../ui/HoldButton\";\n\nconst PlayControls = (props) => {\n  const { audio, controlsDisabled, setShareModalOpen } = props;\n\n  const togglePlay = () => {\n    if (controlsDisabled) return;\n    if (props.audio.status === \"playing\") {\n      AudioPlayer.pause();\n    } else {\n      AudioPlayer.play();\n    }\n  };\n\n  const restart = () => {\n    if (controlsDisabled) return;\n    AudioPlayer.stop();\n  };\n\n  return (\n    <div className=\"play-controls\">\n      <HoldButton\n        onClick={() => AudioPlayer.goBack(20)}\n        className=\"play-control\"\n      >\n        <Icon name=\"backward\" />\n      </HoldButton>\n      <Button\n        onClick={togglePlay}\n        disabled={controlsDisabled}\n        className=\"play-control\"\n      >\n        <Icon name={audio.status === \"playing\" ? \"pause\" : \"play\"} />\n      </Button>\n      <Button onClick={restart} className=\"play-control\">\n        <Icon name=\"stop\" />\n      </Button>\n      <HoldButton\n        onClick={() => AudioPlayer.goForward(20)}\n        className=\"play-control\"\n      >\n        <Icon name=\"forward\" />\n      </HoldButton>\n\n      <Button\n        onClick={() => setShareModalOpen(true)}\n        className=\"play-control share-btn\"\n        disabled={audio.status === \"playing\"}\n      >\n        <Icon name=\"share square\" />\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio } = state;\n  return { audio: audio.chartAudio };\n};\n\nexport default connect(mapStateToProps, null)(PlayControls);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { SP_DIFFICULTIES, DP_DIFFICULTIES } from \"../../constants\";\n\n// displays song information on the chart view\nconst SongInfo = props => {\n  const { selectedSong, selectedDifficulty, selectedMode } = props;\n  return (\n    <>\n      <div className=\"song-info-row\">\n        <div className=\"song-information\">\n          {selectedSong && (\n            <>\n              <div className=\"song-title\">{selectedSong.title}</div>\n              <div className=\"song-artist\">{selectedSong.artist}</div>\n            </>\n          )}\n        </div>\n        <div className=\"level-information\">\n          {selectedSong && (\n            <>\n              <div className=\"song-difficulty\">{selectedDifficulty}</div>\n              <div className=\"song-level\">\n                {\n                  selectedSong.levels[\n                    selectedMode === \"double\"\n                      ? DP_DIFFICULTIES.indexOf(selectedDifficulty) + 5\n                      : SP_DIFFICULTIES.indexOf(selectedDifficulty)\n                  ]\n                }\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { songSelect } = state;\n  return {\n    selectedSong: songSelect.song,\n    selectedDifficulty: songSelect.difficulty,\n    selectedMode: songSelect.mode\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(SongInfo);\n","const tempCanvas = document.createElement(\"canvas\");\nconst tctx = tempCanvas.getContext(\"2d\");\n\nexport const scaleCanvas = (canvas, scaleFactor) => {\n  const cw = canvas.width;\n  const ch = canvas.height;\n  tempCanvas.width = cw;\n  tempCanvas.height = ch;\n  tctx.drawImage(canvas, 0, 0);\n  canvas.width *= scaleFactor;\n  canvas.height *= scaleFactor;\n  const c = canvas.getContext(\"2d\");\n  c.drawImage(\n    tempCanvas,\n    0,\n    0,\n    cw,\n    ch,\n    0,\n    0,\n    cw * scaleFactor,\n    ch * scaleFactor\n  );\n};\n","import {\n  DIRECTIONS,\n  STATIC_ARROW_WIDTH,\n  STATIC_ARROW_HEIGHT,\n  STATIC_FREEZE_BODY_HEIGHT,\n} from \"../../../constants\";\n\nimport { getAssetPath } from \"../../../utils\";\n\nconst arrowImg = new Image();\narrowImg.src = getAssetPath(\"static_arrows.png\");\n\nconst freezeTailImg = new Image();\nfreezeTailImg.src = getAssetPath(\"static_freeze_tails_1.png\");\nconst freezeBodyImg = new Image();\nfreezeBodyImg.src = getAssetPath(\"static_freeze_body_1.png\");\n\nclass StaticArrow {\n  constructor(arrow) {\n    this.key = arrow.key; // arrow index\n    this.note = arrow.note;\n    this.measureIdx = arrow.measureIdx;\n    this.measureN = arrow.measureN;\n    this.measureD = arrow.measureD;\n    this.beatstamp = arrow.beatstamp;\n    this.holdStartBeats = arrow.holdStartBeats;\n    this.holdEndBeats = arrow.holdEndBeats;\n    this.combo = arrow.combo;\n  }\n\n  currentBeatPosition(beatTick) {\n    return this.beatstamp - beatTick;\n  }\n\n  renderFreezeBody(canvas, { beatTick }, directionIdx, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods, columnIdx, columnHeight } = attrs;\n    const { speed } = mods;\n\n    const topBoundary = -1;\n    const bottomBoundary = canvas.height;\n\n    if (this.note[directionIdx] !== \"3\") return;\n\n    let frameX, frameY, destX, destY;\n    const direction = DIRECTIONS[directionIdx % 4];\n\n    const arrowWidth = STATIC_ARROW_WIDTH;\n    const arrowHeight = STATIC_ARROW_HEIGHT;\n    const freezeBodyHeight = STATIC_FREEZE_BODY_HEIGHT;\n\n    frameX = (directionIdx % 4) * arrowWidth;\n    frameY = 0;\n\n    destX = directionIdx * arrowWidth;\n    // calculate column offset\n    destX += columnIdx * (arrowWidth * 4 * 2) + arrowWidth * 2;\n\n    destY = this.currentBeatPosition(beatTick) * arrowHeight * speed;\n\n    const totalBodyHeight =\n      (this.holdEndBeats[directionIdx] - this.holdStartBeats[directionIdx]) *\n        arrowHeight *\n        speed -\n      arrowHeight / 2;\n\n    const repetitions = Math.floor(totalBodyHeight / freezeBodyHeight);\n    let partialHeight = totalBodyHeight % freezeBodyHeight;\n    const originalPartialHeight = partialHeight;\n\n    let partialDestY = destY - (totalBodyHeight + arrowHeight / 2);\n\n    // shrink in size once it reaches the top\n    if (partialDestY <= 0) {\n      partialHeight += partialDestY;\n      partialDestY = 0;\n    }\n\n    // // calculate column offset\n    // destX += columnIdx * (arrowWidth * 4 * 2) + arrowWidth * 2;\n\n    // draw partial\n    // if (partialDestY > -partialHeight && partialDestY < bottomBoundary) {\n    c.drawImage(\n      freezeBodyImg,\n      0,\n      freezeBodyHeight - partialHeight,\n      arrowWidth,\n      partialHeight,\n      destX,\n      // partialDestY + arrowHeight / 2,\n      (partialDestY + arrowHeight / 2) % columnHeight,\n      arrowWidth,\n      partialHeight\n    );\n    // }\n\n    // draw repetitions of freeze body\n    for (let i = 1; i <= repetitions; i++) {\n      let bodyHeight = freezeBodyHeight;\n      let bodyFrameY = 0;\n      let bodyDestY =\n        destY -\n        (totalBodyHeight +\n          arrowHeight / 2 -\n          originalPartialHeight -\n          freezeBodyHeight * (i - 1));\n      if (bodyDestY < 0 && bodyDestY > -freezeBodyHeight) {\n        bodyHeight += bodyDestY;\n        bodyFrameY -= bodyDestY;\n        bodyDestY = 0;\n      }\n      // if (bodyDestY > -bodyHeight && bodyDestY < bottomBoundary) {\n      c.drawImage(\n        freezeBodyImg,\n        0,\n        bodyFrameY,\n        arrowWidth,\n        bodyHeight,\n        destX,\n        // bodyDestY + arrowHeight / 2,\n        (bodyDestY + arrowHeight / 2) % columnHeight,\n        arrowWidth,\n        bodyHeight\n      );\n      // }\n    }\n\n    let tailHeight = arrowHeight;\n\n    // if the freeze is shorter than the height of the tail sprite,\n    // cut off the top of the sprite such that it starts at the midpoint of the freeze head\n\n    // Because we need to overwrite destY for proper sprite placement in the event that the\n    // top of the sprite needs to be cut off, store the actual Y position of the arrow\n    // in a separate variable\n    let actualDestY = destY;\n\n    const bodyDistance =\n      (this.holdEndBeats[directionIdx] - this.holdStartBeats[directionIdx]) *\n      arrowHeight *\n      speed;\n\n    if (bodyDistance < arrowHeight / 2) {\n      const tailPartialHeight = bodyDistance; // distance between head note and tail note, less than half arrow height\n      frameY += arrowHeight / 2 - tailPartialHeight;\n      destY += arrowHeight / 2 - tailPartialHeight;\n      tailHeight = tailPartialHeight + arrowHeight / 2;\n    }\n\n    // shrink in size once it reaches the top\n    if (destY < arrowHeight / 2 && destY > topBoundary) {\n      frameY += arrowHeight / 2 - destY;\n      destY = arrowHeight / 2;\n    }\n\n    // if (actualDestY > topBoundary && actualDestY < bottomBoundary) {\n    c.drawImage(\n      freezeTailImg,\n      frameX,\n      frameY,\n      arrowWidth,\n      tailHeight,\n      destX,\n      // destY,\n      destY % columnHeight,\n      arrowWidth,\n      tailHeight\n    );\n    // }\n  }\n\n  renderArrow(canvas, { beatTick }, directionIdx, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods, columnIdx, columnHeight } = attrs;\n    const { speed } = mods;\n\n    const topBoundary = -1;\n    const bottomBoundary = canvas.height;\n\n    if (this.note[directionIdx] !== \"1\" && this.note[directionIdx] !== \"2\")\n      return;\n\n    let frameX, frameY, destX, destY;\n    const direction = DIRECTIONS[directionIdx % 4];\n    const arrowWidth = STATIC_ARROW_WIDTH;\n    const arrowHeight = STATIC_ARROW_HEIGHT;\n\n    frameX = DIRECTIONS.indexOf(direction) * arrowWidth;\n\n    // only support Note colors for now\n    const measureFraction = this.measureN / this.measureD;\n    if ([0, 1 / 4, 2 / 4, 3 / 4].includes(measureFraction)) {\n      frameY = 0;\n    } else if ([1 / 8, 3 / 8, 5 / 8, 7 / 8].includes(measureFraction)) {\n      frameY = 1;\n    } else if (\n      [\n        1 / 16,\n        3 / 16,\n        5 / 16,\n        7 / 16,\n        9 / 16,\n        11 / 16,\n        13 / 16,\n        15 / 16,\n      ].includes(measureFraction)\n    ) {\n      frameY = 3;\n    } else {\n      frameY = 2;\n    }\n    frameY *= arrowHeight;\n\n    destX = directionIdx * arrowWidth;\n    // calculate column offset\n    destX += columnIdx * (arrowWidth * 4 * 2) + arrowWidth * 2;\n\n    destY = this.currentBeatPosition(beatTick) * arrowHeight * speed;\n    // calculate row wraparound\n    destY = destY % columnHeight;\n\n    // if (destY > topBoundary && destY < bottomBoundary) {\n    c.drawImage(\n      arrowImg,\n      frameX,\n      frameY,\n      arrowWidth,\n      arrowHeight,\n      destX,\n      destY,\n      arrowWidth,\n      arrowHeight\n    );\n    // }\n  }\n}\n\nexport default StaticArrow;\n","import { STATIC_ARROW_HEIGHT, STATIC_ARROW_WIDTH } from \"../../../constants\";\n\nclass StaticGuidelines {\n  constructor(finalBeat) {\n    this.finalBeat = finalBeat;\n  }\n\n  render(canvas, { beatTick }, attrs) {\n    const { mods, columnIdx, columnWidth, measuresPerColumn } = attrs;\n    const { speed } = mods;\n\n    const showGuidelines = mods.guidelines;\n    if (!showGuidelines) return;\n\n    const c = canvas.getContext(\"2d\");\n    c.strokeStyle = \"#fff\";\n\n    const topBoundary = 0;\n    const bottomBoundary = canvas.height;\n\n    const columnStart = columnIdx * columnWidth + STATIC_ARROW_WIDTH * 2;\n\n    for (let beat = 0; beat <= 4 * measuresPerColumn; beat++) {\n      const overallBeat = measuresPerColumn * 4 * columnIdx + beat;\n      if (overallBeat >= this.finalBeat) return;\n\n      let destY =\n        (beat - beatTick) * STATIC_ARROW_HEIGHT * speed +\n        STATIC_ARROW_HEIGHT / 2;\n      destY = (destY + 0.5) | 0;\n\n      // Render a thick line if the beat falls on the beginning of the measure.\n      // Render a thin line otherwise\n      const lineWidth = beat % 4 === 0 ? 2 : 1;\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.beginPath();\n        c.moveTo(columnStart, destY);\n        c.lineTo(columnStart + columnWidth / 2, destY);\n        c.lineWidth = lineWidth;\n        c.stroke();\n      }\n    }\n  }\n}\n\nexport default StaticGuidelines;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button } from \"semantic-ui-react\";\n\nimport { scaleCanvas } from \"../../utils/canvasUtils\";\nimport { STATIC_ARROW_HEIGHT, STATIC_ARROW_WIDTH } from \"../../constants\";\nimport StaticArrow from \"./staticCanvas/StaticArrow\";\nimport StaticGuidelines from \"./staticCanvas/StaticGuidelines\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\n\nconst canvasScaleFactor = 0.5;\n\n// temp hardcode\nconst measuresPerColumn = 8;\n\nconst columnWidth = STATIC_ARROW_WIDTH * 4 * 2;\n\nconst StaticModal = (props) => {\n  const { modalOpen, setModalOpen, gameEngine } = props;\n\n  const canvasRef = useRef(null);\n\n  const [canvasHeight, setCanvasHeight] = useState(1);\n  const [canvasWidth, setCanvasWidth] = useState(1);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const c = canvas.getContext(\"2d\");\n\n    console.log(gameEngine.globalParams);\n\n    const { shocks, frame } = gameEngine.globalParams;\n\n    const arrows = gameEngine.globalParams.arrows.map((arrow) => {\n      return new StaticArrow(arrow);\n    });\n\n    const freezes = gameEngine.globalParams.freezes.map((freeze) => {\n      return new StaticArrow(freeze);\n    });\n\n    let mods = gameEngine.globalParams.mods;\n    mods = JSON.parse(JSON.stringify(mods));\n\n    const tick = { beatTick: 0, timeTick: 0 };\n\n    mods.speed = 1;\n\n    const speedMod = mods.speed;\n\n    /*\n      Use a temporarily hardcoded number of measures per column to figure out the\n      height of the canvas. (1 measure @ 1x = 256px)\n      Then calculate the number of columns required to draw every measure to figure out\n      the width of the canvas. (The arrows take up 256px width for each column, and the\n      space between each column takes up another 256px. So every column effectively takes\n      up 512px width)\n    */\n\n    const finalBeat = gameEngine.globalParams.finalBeat;\n    const numMeasures = finalBeat / 4;\n\n    let calcCanvasHeight =\n      STATIC_ARROW_HEIGHT * 4 * speedMod * measuresPerColumn;\n    calcCanvasHeight += STATIC_ARROW_HEIGHT; // one arrow height worth of padding on bottom\n    setCanvasHeight(calcCanvasHeight);\n\n    const numColumns = Math.ceil(numMeasures / measuresPerColumn);\n\n    const calcCanvasWidth = columnWidth * numColumns;\n    setCanvasWidth(calcCanvasWidth);\n\n    // black background\n    c.fillStyle = \"black\";\n    c.fillRect(0, 0, calcCanvasWidth, calcCanvasHeight);\n\n    // draw each column\n    for (let i = 0; i < numColumns; i++) {\n      const columnStart = i * columnWidth + STATIC_ARROW_WIDTH * 2;\n      c.fillStyle = \"black\";\n      c.fillRect(columnStart, 0, STATIC_ARROW_WIDTH * 4, calcCanvasHeight);\n      const guidelines = new StaticGuidelines(\n        gameEngine.globalParams.finalBeat\n      );\n      guidelines.render(canvas, tick, {\n        mods,\n        columnIdx: i,\n        columnWidth,\n        measuresPerColumn,\n      });\n    }\n\n    for (let i = 0; i < shocks.length; i++) {\n      const shock = shocks[i];\n      shock.render(canvas, frame, tick, {\n        mods,\n        staticAttrs: {\n          columnIdx: Math.floor(shock.measureIdx / measuresPerColumn),\n          columnHeight: STATIC_ARROW_HEIGHT * 4 * speedMod * measuresPerColumn,\n        },\n      });\n    }\n\n    for (let i = 0; i < freezes.length; i++) {\n      const freeze = freezes[i];\n      [0, 1, 2, 3].forEach((directionIdx) => {\n        freeze.renderFreezeBody(canvas, tick, directionIdx, {\n          mods,\n          columnIdx: Math.floor(freeze.measureIdx / measuresPerColumn),\n          columnHeight: STATIC_ARROW_HEIGHT * 4 * speedMod * measuresPerColumn,\n        });\n      });\n    }\n\n    for (let i = 0; i < arrows.length; i++) {\n      const arrow = arrows[i];\n      [0, 1, 2, 3].forEach((directionIdx) => {\n        arrow.renderArrow(canvas, tick, directionIdx, {\n          mods,\n          columnIdx: Math.floor(arrow.measureIdx / measuresPerColumn),\n          columnHeight: STATIC_ARROW_HEIGHT * 4 * speedMod * measuresPerColumn,\n        });\n      });\n    }\n\n    scaleCanvas(canvas, canvasScaleFactor);\n  }, [modalOpen, canvasHeight, canvasWidth]);\n\n  const onCanvasClick = (e) => {\n    const canvasRect = canvasRef.current.getBoundingClientRect();\n\n    const leftEdge = STATIC_ARROW_WIDTH * 2 * canvasScaleFactor + canvasRect.x;\n\n    if (e.clientX < leftEdge) return;\n\n    const scaledColumnWidth = columnWidth * canvasScaleFactor;\n\n    const cx = (e.clientX - leftEdge) % scaledColumnWidth;\n    if (cx > scaledColumnWidth / 2) return;\n\n    const columnIdx = Math.floor((e.clientX - leftEdge) / scaledColumnWidth);\n\n    const topEdge =\n      (STATIC_ARROW_HEIGHT / 2) * canvasScaleFactor + canvasRect.y;\n    if (e.clientY < topEdge) return;\n\n    const cy = e.clientY - topEdge;\n\n    const beatIdx = Math.floor(cy / (STATIC_ARROW_HEIGHT * canvasScaleFactor));\n\n    if (beatIdx >= measuresPerColumn * 4) return;\n\n    const beatNum = columnIdx * measuresPerColumn * 4 + beatIdx;\n\n    // Figure out how to use the beat number to skip to the corresponding chart progress.\n    const progressTs = seekProgress(beatNum);\n    AudioPlayer.seekTime(progressTs);\n\n    handleClose();\n  };\n\n  // Given a beat index, iterate through the arrows until the last arrow with a beatstamp earlier or\n  // equal to the beat number is found. Then use that arrow's timestamp to skip to some chart\n  // progress based on that timestamp.\n  const seekProgress = (beatNum) => {\n    const arrows = gameEngine.globalParams.allArrows;\n    for (let i = 0; i < arrows.length; i++) {\n      const arrow = arrows[i];\n      if (arrow.beatstamp > beatNum) {\n        if (i - 1 >= 0) {\n          return arrows[i - 1].timestamp;\n        } else {\n          return arrow.timestamp;\n        }\n      }\n    }\n    return arrows[arrows.length - 1].timestamp;\n  };\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  return (\n    <Modal\n      className=\"staticModal\"\n      open={modalOpen}\n      onOpen={handleOpen}\n      onClose={handleClose}\n    >\n      <div className=\"staticChart-container\">\n        <canvas\n          id=\"staticChart\"\n          ref={canvasRef}\n          height={canvasHeight}\n          width={canvasWidth}\n          onClick={onCanvasClick}\n        ></canvas>\n      </div>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { mods, songSelect, screen, simfiles } = state;\n  const { song, difficulty, mode } = songSelect;\n  return {\n    mods,\n    sm: simfiles.sm,\n    song,\n    difficulty,\n    mode,\n    screen,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StaticModal);\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\n\nimport { LANE_COVER_INCREMENT } from \"../../constants\";\nimport HoldButton from \"../ui/HoldButton\";\nimport { updateMods, updateLaneCoverHeight } from \"../../actions/ModsActions\";\nimport { getAssetPath } from \"../../utils\";\n\nconst CabButtons = (props) => {\n  const { canvas, mods, updateMods, updateLaneCoverHeight } = props;\n\n  const laneCoverFn = useRef();\n\n  const adjustLaneCoverHeight = (e) => {\n    // if key pressed is up or down, prevent default behavior\n    // ignore if key pressed is not up or down\n    if (e.keyCode !== 38 && e.keyCode !== 40) return;\n    else {\n      e.preventDefault();\n    }\n\n    // after preventing default behavior, ignore if no lane cover mod is being used\n    if (![\"hidden\", \"sudden\", \"hiddensudden\"].includes(mods.appearance)) {\n      return;\n    }\n\n    // the following code will only run if a lane cover mod is being used\n    // and if the key pressed was either up or down\n\n    const { scroll } = mods;\n\n    const laneCoverHeightDiff = [0, 0, 0];\n\n    const reverseFactor = scroll === \"reverse\" ? -1 : 1;\n\n    // up key\n    if (e.keyCode === 38) {\n      switch (mods.appearance) {\n        case \"hidden\":\n          laneCoverHeightDiff[0] -= LANE_COVER_INCREMENT * reverseFactor;\n          break;\n        case \"sudden\":\n          laneCoverHeightDiff[1] += LANE_COVER_INCREMENT * reverseFactor;\n          break;\n        case \"hiddensudden\":\n          laneCoverHeightDiff[2] += LANE_COVER_INCREMENT;\n          break;\n        default:\n          break;\n      }\n    }\n    // down key\n    else if (e.keyCode === 40) {\n      switch (mods.appearance) {\n        case \"hidden\":\n          laneCoverHeightDiff[0] += LANE_COVER_INCREMENT * reverseFactor;\n          break;\n        case \"sudden\":\n          laneCoverHeightDiff[1] -= LANE_COVER_INCREMENT * reverseFactor;\n          break;\n        case \"hiddensudden\":\n          laneCoverHeightDiff[2] -= LANE_COVER_INCREMENT;\n          break;\n        default:\n          break;\n      }\n    }\n\n    updateLaneCoverHeight({\n      diff: laneCoverHeightDiff,\n      canvasHeight: canvas.height,\n    });\n  };\n\n  const toggleLaneCover = (e) => {\n    e.preventDefault();\n    const { laneCoverVisible } = mods;\n    updateMods({ laneCoverVisible: !laneCoverVisible });\n  };\n\n  const updateLaneCoverFn = () => {\n    document.removeEventListener(\"keydown\", laneCoverFn.current);\n    laneCoverFn.current = adjustLaneCoverHeight;\n    document.addEventListener(\"keydown\", laneCoverFn.current);\n  };\n\n  useEffect(() => {\n    updateLaneCoverFn();\n  }, [mods.appearance, mods.scroll, mods.laneCoverHeight, canvas]);\n\n  return (\n    <div className=\"cab-buttons-container\">\n      <HoldButton\n        className=\"directional-button\"\n        onClick={(e) => {\n          e.keyCode = 38;\n          adjustLaneCoverHeight(e);\n        }}\n      >\n        <img src={getAssetPath(`directional_button.png`)} />\n      </HoldButton>\n      <Button\n        className=\"center-button\"\n        onClick={(e) => {\n          toggleLaneCover(e);\n        }}\n      >\n        <img src={getAssetPath(`center_button.png`)} />\n      </Button>\n      <HoldButton\n        className=\"directional-button\"\n        onClick={(e) => {\n          e.keyCode = 40;\n          adjustLaneCoverHeight(e);\n        }}\n      >\n        <img src={getAssetPath(`directional_button.png`)} />\n      </HoldButton>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateMods: (mods) => dispatch(updateMods(mods)),\n    updateLaneCoverHeight: (diff) => dispatch(updateLaneCoverHeight(diff)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CabButtons);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst BpmDisplay = (props) => {\n  const { mods, songSelect } = props;\n\n  return (\n    <div className={`bpm-display`}>\n      {/* {mods.bpmStopDisplay && <div id=\"bpmReel\"></div>} */}\n      <canvas id=\"bpmReel\"></canvas>\n      <div className={`current-bpm-container `}>\n        <div className=\"current-bpm-wrapper\">\n          <div className=\"current-bpm-header\">BPM</div>\n          <div className=\"current-bpm-value\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { mods, songSelect } = state;\n  return { mods, songSelect };\n};\n\nexport default connect(mapStateToProps, null)(BpmDisplay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst StopDisplay = (props) => {\n  const { mods, songSelect } = props;\n\n  return (\n    <div className={`stop-display`}>\n      {/* {mods.bpmStopDisplay && <div id=\"stopReel\"></div>} */}\n      <canvas id=\"stopReel\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { mods, songSelect } = state;\n  return { mods, songSelect };\n};\n\nexport default connect(mapStateToProps, null)(StopDisplay);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport \"inobounce\";\n\nimport { presetParams, getJacketPath } from \"../../utils\";\nimport parseSimfile from \"../../utils/parseSimfile\";\nimport { usePrevious } from \"../../hooks\";\nimport GameEngine from \"../../core/GameEngine\";\nimport ShareModal from \"./ShareModal\";\nimport Progress from \"./canvas/Progress\";\nimport PlayControls from \"./PlayControls\";\nimport SongInfo from \"./SongInfo\";\nimport StaticModal from \"./StaticModal\";\n\nimport CabButtons from \"./CabButtons\";\nimport BpmDisplay from \"./BpmDisplay\";\nimport StopDisplay from \"./StopDisplay\";\n\nconst ChartArea = (props) => {\n  const {\n    selectedDifficulty,\n    selectedMode,\n    selectedSong,\n    sm,\n    mods,\n    screen,\n    loadingAudio,\n    gameEngine,\n    setGameEngine,\n  } = props;\n\n  const [canvas, setCanvas] = useState(null);\n  const [shareModalOpen, setShareModalOpen] = useState(false);\n  const chartArea = useRef();\n  const canvasContainer = useRef();\n  const chartLoadingScreen = useRef();\n\n  const [staticModalOpen, setStaticModalOpen] = useState(false);\n\n  const prevState = usePrevious({\n    canvas,\n    sm,\n    selectedDifficulty,\n    selectedMode,\n    mods,\n  });\n\n  // define canvas and resize listener on mount\n  useEffect(() => {\n    chartArea.current = document.querySelector(\"#chartArea\");\n    setCanvas(chartArea.current);\n\n    Progress.initCanvas();\n  }, []);\n\n  // change chart dimensions depending on single or double\n  // Hardcoded heights for now. Variable heights may be possible in the future\n  useEffect(() => {\n    if (!canvas || !canvasContainer.current) return;\n    resizeChartArea();\n  }, [canvas, selectedMode, screen]);\n\n  const resizeChartArea = () => {\n    if (selectedMode === \"single\") {\n      chartArea.current.width = 256;\n      chartArea.current.style.transform = \"none\";\n      chartArea.current.style.left = 0;\n      chartArea.current.style.top = 0;\n\n      // hack to resolve positioning issues\n      chartArea.current.style.position = \"static\";\n      setTimeout(() => {\n        chartArea.current.style.position = \"relative\";\n      });\n    } else if (selectedMode === \"double\") {\n      chartArea.current.width = 512;\n\n      const wrapper = canvasContainer.current.getBoundingClientRect();\n\n      if (wrapper.width < 512) {\n        const scaleFactor = wrapper.width / chartArea.current.width;\n        const xOffset = (chartArea.current.width - wrapper.width) / 2;\n        const yOffset = xOffset * (7 / 8);\n        chartArea.current.style.transform = `scale(${scaleFactor}) translate(-50%)`;\n        chartArea.current.style.position = \"absolute\";\n        chartArea.current.style.left = `-${xOffset}px`;\n        chartArea.current.style.top = `-${yOffset}px`;\n      } else {\n        chartArea.current.style.transform = \"none\";\n        chartArea.current.style.left = 0;\n        chartArea.current.style.top = 0;\n\n        chartArea.current.style.position = \"static\";\n        setTimeout(() => {\n          chartArea.current.style.position = \"relative\";\n        });\n      }\n    }\n\n    if (gameEngine) {\n      gameEngine.updateLoopOnce();\n    }\n  };\n\n  // reset chart if mode, difficulty, or mods change\n  useEffect(() => {\n    const currentState = { canvas, sm, selectedDifficulty, selectedMode, mods };\n\n    if (!canvas) return;\n\n    const chartParams = {\n      mode: selectedMode,\n      difficulty: selectedDifficulty,\n      mods,\n    };\n\n    Object.keys(currentState).forEach((thing) => {\n      if (prevState[thing] !== currentState[thing]) {\n        // initial setup of game engine when canvas is mounted\n        if (thing === \"canvas\") {\n        } else if (thing === \"sm\") {\n          // console.log(\n          //   `${thing} changed from ${\n          //     prevState[thing]\n          //       ? prevState[thing].slice(0, 30)\n          //       : prevState[thing]\n          //   } \\n\\nto ${currentState[thing].slice(0, 30)}`\n          // );\n\n          // flag the old game engine as killed, so any residual invocations\n          // of its mainLoop can be squashed until it is garbage collected\n          if (gameEngine) {\n            gameEngine.killed = true;\n          }\n\n          if (!sm) return;\n\n          const simfileType = selectedSong.useSsc ? \"ssc\" : \"sm\";\n\n          // console.log(selectedSong);\n          const numSongLevels = selectedSong.levels.filter((a) => a).length;\n\n          // console.log(sm);\n          const simfiles = parseSimfile(sm, simfileType);\n\n          // console.log(\"available song levels:\", numSongLevels);\n          // console.log(\"num loaded charts\", simfiles.numLoadedCharts);\n\n          let ge = new GameEngine(canvas, simfiles, chartParams);\n          ge.pauseTl();\n          setGameEngine(ge);\n        } else if (thing === \"mods\") {\n          Object.keys(prevState.mods).forEach((mod) => {\n            const prev = JSON.stringify(prevState.mods[mod]);\n            const curr = JSON.stringify(currentState.mods[mod]);\n            const modChanged = prev !== curr;\n\n            if (gameEngine && modChanged) {\n              if (mod === \"bpmStopDisplay\") {\n                gameEngine.bpmReel = currentState.mods[mod]\n                  ? document.getElementById(\"bpmReel\")\n                  : null;\n                gameEngine.stopReel = currentState.mods[mod]\n                  ? document.getElementById(\"stopReel\")\n                  : null;\n              }\n\n              if ([\"turn\", \"shuffle\"].includes(mod)) {\n                gameEngine.resetChart(chartParams);\n              } else {\n                // console.log(prev, curr);\n                if (gameEngine.isTlPaused()) {\n                  gameEngine.updateLoopOnce();\n                }\n              }\n            }\n          });\n        }\n        // mode or difficulty\n        else {\n          // console.log(\n          //   `${thing} changed from ${prevState[thing]} to ${currentState[thing]}`\n          // );\n          if (gameEngine) {\n            gameEngine.resetChart(chartParams);\n          }\n        }\n      }\n    });\n\n    if (gameEngine) {\n      gameEngine.updateExternalGlobalParams({ mods });\n    }\n  }, [canvas, sm, selectedDifficulty, selectedMode, mods]);\n\n  const shareParams = {\n    song: selectedSong,\n    difficulty: selectedDifficulty,\n    mode: selectedMode,\n    mods,\n  };\n\n  return (\n    <div\n      className={`view-section chartView ${\n        screen.activeView === \"chart\" ? \"active\" : \"\"\n      }`}\n    >\n      <div className=\"view-wrapper chartArea-container\">\n        <div\n          className={`canvas-container ${selectedMode} ${mods.scroll}`}\n          ref={canvasContainer}\n        >\n          <div className=\"chartArea-wrapper\">\n            {gameEngine && (\n              <BpmDisplay bpmQueue={gameEngine.globalParams.bpmQueue} />\n            )}\n            {gameEngine && (\n              <StopDisplay stopQueue={gameEngine.globalParams.stopQueue} />\n            )}\n            <div className=\"canvas-wrapper\">\n              <canvas id=\"chartArea\" width=\"256\" height=\"448\" />\n              <div\n                className={`chart-loading-screen ${selectedMode} ${\n                  loadingAudio ? \"loading\" : \"\"\n                } `}\n                ref={chartLoadingScreen}\n              >\n                {selectedSong && (\n                  <img\n                    className=\"chart-loading-jacket\"\n                    src={getJacketPath(`${selectedSong.hash}.png`)}\n                  />\n                )}\n                <div className=\"chart-loading-message\">Loading chart...</div>\n              </div>\n              {selectedSong &&\n                !loadingAudio &&\n                [\"hidden\", \"sudden\", \"hiddensudden\"].includes(\n                  mods.appearance\n                ) && <CabButtons mods={mods} canvas={canvas} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"progress-container\">\n          <div className=\"progress-wrapper\">\n            <canvas id=\"progress\" />\n            {presetParams.progress ? (\n              <div\n                className=\"preset-marker-wrapper\"\n                onClick={Progress.jumpToPresetStart.bind(Progress)}\n                onTouchStart={Progress.jumpToPresetStart.bind(Progress)}\n              >\n                <div className=\"preset-marker\" />\n              </div>\n            ) : null}\n          </div>\n        </div>\n        {/* <canvas id=\"chartArea\" width=\"256\" height=\"18000\" /> */}\n        <div className=\"row\">\n          <PlayControls\n            controlsDisabled={!gameEngine || loadingAudio}\n            setShareModalOpen={setShareModalOpen}\n          />\n        </div>\n        <div className=\"row song-info-area\">\n          <SongInfo />\n          {selectedSong && (\n            <div>\n              <Button\n                className=\"view-static-btn\"\n                onClick={() => setStaticModalOpen(true)}\n              >\n                View static chart\n              </Button>\n            </div>\n          )}\n        </div>\n        <ShareModal\n          modalOpen={shareModalOpen}\n          setModalOpen={setShareModalOpen}\n          data={shareParams}\n        />\n        {gameEngine && (\n          <StaticModal\n            modalOpen={staticModalOpen}\n            setModalOpen={setStaticModalOpen}\n            gameEngine={gameEngine}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { mods, songSelect, screen, simfiles } = state;\n  return {\n    mods,\n    selectedSong: songSelect.song,\n    selectedDifficulty: songSelect.difficulty,\n    selectedMode: songSelect.mode,\n    screen,\n    sm: simfiles.sm,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartArea);\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current || value;\n};\n","import React from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\n\nconst SongSearch = (props) => {\n  const { selectedSongOption, onSongSelect, simfileOptions } = props;\n\n  const handleSearch = (options, searchQuery) => {\n    const re = new RegExp(escapeRegExp(searchQuery), \"i\");\n\n    return options.filter((song) => {\n      return re.test(song.text) || re.test(song.description);\n    });\n  };\n\n  return (\n    <Dropdown\n      placeholder=\"Choose a song\"\n      className=\"song-title-search\"\n      search={handleSearch}\n      selection\n      value={selectedSongOption}\n      onChange={(_, data) => onSongSelect(data.value)}\n      options={simfileOptions}\n      selectOnBlur={false}\n      selectOnNavigation={false}\n    />\n  );\n};\n\nexport default SongSearch;\n","import { SP_DIFFICULTIES, DP_DIFFICULTIES, BPM_RANGES } from \"../constants\";\n\n/*\n  If the song does not have a chart corresponding to the chosen difficulty option,\n  pick whatever is *closest*\n  - If Difficult, Expert, or Challenge is the chosen option, start from Challenge and\n    work your way down until the first available difficulty is reached.\n  - If Beginner or Basic is the chosen option, start from Beginner and work up.\n  The closest available difficulty will be chosen for the song without affecting the\n  difficulty option selected for the form, like the way it works in the real game\n*/\nexport const getClosestDifficulty = (song, difficulty, mode) => {\n  const difficulties = mode === \"double\" ? DP_DIFFICULTIES : SP_DIFFICULTIES;\n  const levels =\n    mode === \"double\" ? song.levels.slice(5, 9) : song.levels.slice(0, 5);\n\n  if ([\"Difficult\", \"Expert\", \"Challenge\"].includes(difficulty)) {\n    for (let i = difficulties.length - 1; i >= 0; i--) {\n      if (\n        levels[i] &&\n        !song.missingDifficulties.includes(mode === \"double\" ? i + 5 : i)\n      ) {\n        return difficulties[i];\n      }\n    }\n  } else if ([\"Beginner\", \"Basic\"].includes(difficulty)) {\n    for (let i = 0; i <= difficulties.length - 1; i++) {\n      if (\n        levels[i] &&\n        !song.missingDifficulties.includes(mode === \"double\" ? i + 5 : i)\n      ) {\n        return difficulties[i];\n      }\n    }\n  }\n};\n\nexport const isInBpmRange = (song, bpmRangeValue, difficulty) => {\n  const bpm = song.displayBpm;\n\n  // split bpm (this is the only case where difficulty matters)\n  if (bpm.includes(\",\")) {\n    return false;\n  } else {\n    const bpms = song.displayBpm.split(\"-\");\n    const maxBpm = parseInt(bpms[bpms.length - 1]);\n\n    const bpmIndex = BPM_RANGES.indexOf(bpmRangeValue);\n\n    let nextHighestBpm;\n    if (bpmIndex + 1 >= BPM_RANGES.length) {\n      nextHighestBpm = Infinity;\n    } else {\n      nextHighestBpm = BPM_RANGES[bpmIndex + 1];\n    }\n    return bpmRangeValue <= maxBpm && maxBpm < nextHighestBpm;\n  }\n};\n","import React from \"react\";\n\nimport { getJacketPath } from \"../../utils\";\nimport { SP_DIFFICULTIES } from \"../../constants\";\nimport { getClosestDifficulty } from \"../../utils/songUtils\";\n\nconst SongGrid = (props) => {\n  const {\n    displayedSongs,\n    onSongSelect,\n    selectedSongOption,\n    selectedMode,\n    selectedDifficultyOption,\n    selectedFilters,\n    isChartAvailable,\n  } = props;\n\n  let songs = displayedSongs;\n\n  let availableSimfiles = {};\n  if (props.gameEngine && props.gameEngine.simfiles) {\n    availableSimfiles = props.gameEngine.simfiles;\n  }\n\n  const selectSong = (song) => {\n    onSongSelect(song.hash);\n  };\n\n  const getDisplayedSongData = (song) => {\n    let levels = [];\n    if (selectedMode === \"single\") levels = song.levels.slice(0, 5);\n    else if (selectedMode === \"double\")\n      levels = [null, ...song.levels.slice(5, 9)];\n\n    const levelFilter = selectedFilters.level;\n    const difficultyFilter = selectedFilters.difficulty;\n\n    // If neither level nor difficulty are being filtered, show the chosen difficulty option or whatever is closest\n    if (difficultyFilter === \"all\" && levelFilter === \"all\") {\n      const displayedLevels = [null, null, null, null, null];\n      const difficultyIdx = SP_DIFFICULTIES.indexOf(selectedDifficultyOption);\n      if (levels[difficultyIdx]) {\n        displayedLevels[difficultyIdx] = levels[difficultyIdx];\n      } else {\n        const closestDiff = getClosestDifficulty(\n          song,\n          selectedDifficultyOption,\n          selectedMode\n        );\n        const closestDiffIdx = SP_DIFFICULTIES.indexOf(closestDiff);\n        displayedLevels[closestDiffIdx] = levels[closestDiffIdx];\n      }\n      levels = displayedLevels;\n    } else {\n      levels.forEach((level, i) => {\n        if (!level) return;\n        const difficulty = SP_DIFFICULTIES[i];\n        // If level is chosen but difficulty is not, show all difficulties that match the level\n        if (difficultyFilter === \"all\") {\n          if (level !== levelFilter) levels[i] = null;\n        }\n        // If level is not chosen but difficulty is, show the filtered difficulty only\n        // If both level and difficulty are chosen, show the filtered difficulty only\n        else {\n          if (difficulty !== difficultyFilter) levels[i] = null;\n        }\n      });\n    }\n    return levels;\n  };\n\n  const renderSongLevel = (song) => {\n    const levels = getDisplayedSongData(song);\n\n    return levels.map((level, i) => {\n      if (!level) return null;\n      const difficulty = SP_DIFFICULTIES[i];\n      return (\n        <div\n          key={`${song.hash}_${difficulty}`}\n          className={`song-level ${difficulty}`}\n        >\n          {level}\n        </div>\n      );\n    });\n  };\n\n  const renderSong = (song) => {\n    return (\n      <div\n        className={`songTile-wrapper ${\n          isChartAvailable(song) ? \"\" : \"unavailable\"\n        }`}\n        key={`songtile_${song.hash}`}\n        onClick={() => selectSong(song)}\n      >\n        <div\n          className={`songTile ${\n            selectedSongOption === song.hash ? \"selected\" : \"\"\n          } `}\n        >\n          <div className=\"song-jacket-wrapper\">\n            <img\n              className=\"song-jacket\"\n              src={getJacketPath(`${song.hash}.png`)}\n              title={song.title}\n              alt={song.title}\n            />\n          </div>\n          <div className=\"song-level-wrapper\">{renderSongLevel(song)}</div>\n          <div className=\"song-title-bar\">{song.title}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"songGrid\">\n      {songs.map((song) => {\n        return renderSong(song);\n      })}\n    </div>\n  );\n};\n\nexport default SongGrid;\n","import React from \"react\";\n\nconst ToggleSwitch = (props) => {\n  const { option1, option2, value, disabled } = props;\n\n  const toggleChange = () => {\n    if (disabled || !option1 || !option2) return;\n\n    if (value === option1.value) {\n      props.onChange(option2.value);\n    } else if (value === option2.value) {\n      props.onChange(option1.value);\n    }\n\n    // default to option 1 if uninitialized\n    else {\n      props.onChange(option1.value);\n    }\n  };\n\n  const selectOption = (option) => {\n    if (disabled || !option || typeof option.value === \"undefined\") return;\n    props.onChange(option.value);\n  };\n\n  const getSwitchClassName = () => {\n    let className = \"toggleSwitch\";\n    if (value === option1.value) className += ` left`;\n    else if (value === option2.value) className += ` right`;\n    return className;\n  };\n\n  return (\n    <div className={`toggleSwitch-wrapper ${disabled ? \"disabled\" : \"\"}`}>\n      <label\n        className={`toggleSwitch-option1 ${\n          value === option1.value ? \"selected\" : \"\"\n        }`}\n        onClick={() => selectOption(option1)}\n      >\n        {option1.text}\n      </label>\n      <div className={getSwitchClassName()} onClick={toggleChange}></div>\n      <label\n        className={`toggleSwitch-option2 ${\n          value === option2.value ? \"selected\" : \"\"\n        }`}\n        onClick={() => selectOption(option2)}\n      >\n        {option2.text}\n      </label>\n    </div>\n  );\n};\n\nexport default ToggleSwitch;\n","import {\n  SP_DIFFICULTIES,\n  TITLE_CATEGORIES,\n  LEVELS,\n  DDR_VERSIONS,\n  BPM_RANGES,\n  GENRES,\n} from \"../../constants\";\n\nexport const titleSortOptions = [\n  { key: \"title_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  TITLE_CATEGORIES.map((letter) => {\n    return { key: `title_${letter}`, value: letter, text: letter };\n  })\n);\n\nexport const versionSortOptions = [\n  { key: \"version_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  DDR_VERSIONS.map((versionName, idx) => {\n    return { key: `version_${idx}`, value: idx, text: versionName };\n  }).reverse()\n);\n\nexport const levelSortOptions = [\n  { key: \"level_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  LEVELS.map((level) => {\n    return { key: `level_${level}`, value: level, text: level };\n  })\n);\n\nexport const difficultySortOptions = [\n  { key: \"difficulty_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  SP_DIFFICULTIES.map((difficulty) => {\n    return {\n      key: `difficulty_${difficulty}`,\n      value: difficulty,\n      text: difficulty,\n    };\n  })\n);\n\nexport const bpmRangeOptions = [\n  { key: \"bpm_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  BPM_RANGES.map((minBpm) => {\n    return {\n      key: `bpm_${minBpm}`,\n      value: minBpm,\n      text: minBpm === 1 ? \"~ 100\" : `${minBpm} ~`,\n    };\n  })\n);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_1\",\n  \"data-name\": \"Line 1\",\n  d: \"M0.91,15L0.78,15A1,1,0,0,0,0,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H0.91Z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_2\",\n  \"data-name\": \"Line 2\",\n  d: \"M6.91,9L6.78,9A1,1,0,0,0,6,10V28a1,1,0,1,0,2,0s0,0,0,0V10A1,1,0,0,0,7,9H6.91Z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_3\",\n  \"data-name\": \"Line 3\",\n  d: \"M12.91,0L12.78,0A1,1,0,0,0,12,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H12.91Z\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_4\",\n  \"data-name\": \"Line 4\",\n  d: \"M18.91,10l-0.12,0A1,1,0,0,0,18,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H18.91Z\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_5\",\n  \"data-name\": \"Line 5\",\n  d: \"M24.91,15l-0.12,0A1,1,0,0,0,24,16v6a1,1,0,0,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H24.91Z\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_6\",\n  \"data-name\": \"Line 6\",\n  d: \"M30.91,10l-0.12,0A1,1,0,0,0,30,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H30.91Z\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_7\",\n  \"data-name\": \"Line 7\",\n  d: \"M36.91,0L36.78,0A1,1,0,0,0,36,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H36.91Z\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_8\",\n  \"data-name\": \"Line 8\",\n  d: \"M42.91,9L42.78,9A1,1,0,0,0,42,10V28a1,1,0,1,0,2,0s0,0,0,0V10a1,1,0,0,0-1-1H42.91Z\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_9\",\n  \"data-name\": \"Line 9\",\n  d: \"M48.91,15l-0.12,0A1,1,0,0,0,48,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H48.91Z\"\n});\n\nvar SvgAudiowave = function SvgAudiowave(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"audioWave\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 50 38.05\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgAudiowave, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/audiowave.e48c060f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../actions/SongSelectActions\";\nimport SongSearch from \"./SongSearch\";\nimport SongGrid from \"./SongGrid\";\nimport { getJacketPath, presetParams, parseUrlParams } from \"../../utils\";\nimport { getClosestDifficulty, isInBpmRange } from \"../../utils/songUtils\";\nimport { clearBpmAndStopDisplay } from \"../../utils/engineUtils\";\nimport {\n  getUserSettings,\n  updateUserSettings,\n  getSavedSongProgress,\n} from \"../../utils/userSettings\";\nimport loadStore from \"../../utils/loadStore\";\nimport ToggleSwitch from \"../ui/ToggleSwitch\";\nimport { SP_DIFFICULTIES, DP_DIFFICULTIES } from \"../../constants\";\nimport {\n  titleSortOptions,\n  versionSortOptions,\n  levelSortOptions,\n  difficultySortOptions,\n  bpmRangeOptions,\n} from \"./songFormOptions\";\nimport { generateInitialValues } from \"./options\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport { ReactComponent as AudioWave } from \"../../svg/audiowave.svg\";\n\nconst userSettings = getUserSettings();\n\nconst SongForm = (props) => {\n  const { simfileList, selectedDifficulty, selectedMode, previewAudio } = props;\n  // console.log(\"SongForm props\", props);\n  const songGridContainer = useRef();\n\n  const simfileOptions = simfileList.map((song) => {\n    return {\n      key: song.hash,\n      value: song.hash,\n      text: song.title,\n      description: song.smName,\n    };\n  });\n\n  const [selectedSongOption, setSelectedSongOption] = useState(\"\");\n  const [selectedDifficultyOption, setSelectedDifficultyOption] = useState(\n    selectedDifficulty\n  );\n  const [loadingFirstSong, setLoadingFirstSong] = useState(true);\n\n  const [selectedFilters, setSelectedFilters] = useState(\n    userSettings.filters || {\n      title: \"all\",\n      version: 16,\n      level: \"all\",\n      difficulty: \"all\",\n      bpm: \"all\",\n    }\n  );\n\n  const updateSelectedFilters = (newFilters) => {\n    const filters = { ...selectedFilters, ...newFilters };\n    updateUserSettings({ filters });\n    setSelectedFilters(filters);\n  };\n\n  const [displayedSongs, setDisplayedSongs] = useState([]);\n\n  // on filter or mode change\n  useEffect(() => {\n    const { title, version, level, difficulty, bpm } = selectedFilters;\n\n    const songs = simfileList\n      .filter((song) => {\n        const singleDiffs = song.levels.slice(0, 5);\n        const doubleDiffs = song.levels.slice(5, 9);\n        return (\n          // song matches title filter\n          (title === \"all\" || title === song.abcSort) &&\n          // song matches version filter\n          (version === \"all\" || version === parseInt(song.version)) &&\n          // song matches bpm range filter\n          (bpm === \"all\" || isInBpmRange(song, bpm, difficulty)) &&\n          // if a level filter is selected, song matches level filter\n          // if level is not being filtered, song has at least one chart on the chosen mode\n          ((level === \"all\" &&\n            selectedMode === \"single\" &&\n            singleDiffs.some((level) => !!level)) ||\n            (level === \"all\" &&\n              selectedMode === \"double\" &&\n              doubleDiffs.some((level) => !!level)) ||\n            (selectedMode === \"single\" &&\n              song.levels.slice(0, 5).includes(level)) ||\n            (selectedMode === \"double\" &&\n              song.levels.slice(5, 9).includes(level)))\n        );\n      })\n      .filter((song) => {\n        // if a difficulty is specified:\n        if (difficulty !== \"all\") {\n          // if level is not specified, simply check if that difficulty exists\n          if (level === \"all\") {\n            if (selectedMode === \"single\") {\n              return song.levels[SP_DIFFICULTIES.indexOf(difficulty)] !== null;\n            } else if (selectedMode === \"double\") {\n              return (\n                song.levels[DP_DIFFICULTIES.indexOf(difficulty) + 5] !== null\n              );\n            }\n          }\n          // if level is specified, only show if the difficulty is that level\n          else {\n            if (selectedMode === \"single\") {\n              return song.levels[SP_DIFFICULTIES.indexOf(difficulty)] === level;\n            } else if (selectedMode === \"double\") {\n              return (\n                song.levels[DP_DIFFICULTIES.indexOf(difficulty) + 5] === level\n              );\n            }\n          }\n        }\n        return song;\n      })\n      .sort((songA, songB) => {\n        // only do bpm sort for now. default is title game order\n        if (bpm !== \"all\") {\n          const aBpms = songA.displayBpm.split(\"-\");\n          const aMaxBpm = parseInt(aBpms[aBpms.length - 1]);\n          const bBpms = songB.displayBpm.split(\"-\");\n          const bMaxBpm = parseInt(bBpms[bBpms.length - 1]);\n          if (aMaxBpm > bMaxBpm) return 1;\n          if (aMaxBpm < bMaxBpm) return -1;\n          return 0;\n        }\n\n        // assume stable sort keeps the default order\n        return 0;\n      });\n\n    setDisplayedSongs(songs);\n    // console.log(songs);\n    songGridContainer.current.scrollTop = 0;\n  }, [selectedFilters, selectedMode]);\n\n  // object corresponding to the selected song option\n  // NOT the song currently playing in the main view\n  const [selectedSong, setSelectedSong] = useState(null);\n\n  // // respond to changes in share link url params\n  // useEffect(() => {\n  //   if (loadingFirstSong) return;\n  //   try {\n  //     console.log(\"share link params:\", props.location.search);\n  //     const parsedParams = parseUrlParams();\n  //     console.log(\"parsedParams\", parsedParams);\n  //     const initialValues = generateInitialValues(parsedParams);\n  //     console.log(\"initialValues\", initialValues);\n  //     onSongSelect(parsedParams.song, { preserveShareUrl: true });\n  //   } catch (error) {\n  //     console.log(\"error while trying to respond to url param change\");\n  //   }\n  // }, [props.location]);\n\n  // initialize song for testing\n  useEffect(() => {\n    /*\n      For some reason, the very first interaction with the dom will reset the Howler\n      audio seek time to 0 (a bug?). Force an interaction in the beginning to get this\n      out of the way and prevent overwriting of the preset time\n    */\n    document.body.click();\n\n    // Select a pre-selected song\n    // Highest priority: song contained in share url\n    if (presetParams.song) {\n      onSongSelect(presetParams.song, { preserveShareUrl: true });\n    }\n    // Second highest priority: song saved from user's previous session\n    else if (userSettings.song) {\n      onSongSelect(userSettings.song);\n    }\n    // Lowest priority: arbitrary song chosen to be the default\n    else {\n      onSongSelect(\"99OQb9b0IQ98P6IQdPOiqi8q16o16iqP\"); // ORCA\n    }\n    setLoadingFirstSong(false);\n  }, []);\n\n  useEffect(() => {\n    if (selectedSongOption) {\n      const song = simfileList.find((song) => song.hash === selectedSongOption);\n      setSelectedSong(song);\n      AudioPlayer.storeAudioSource(song);\n    }\n  }, [selectedSongOption]);\n\n  const selectClosestDifficulty = (song, mode = selectedMode) => {\n    let selectedDiffOptionIndex = SP_DIFFICULTIES.indexOf(\n      selectedDifficultyOption\n    );\n    if (mode === \"double\") selectedDiffOptionIndex += 4;\n    let difficultyToSelect;\n    if (\n      song.levels[selectedDiffOptionIndex] &&\n      !song.missingDifficulties.includes(selectedDiffOptionIndex)\n    ) {\n      difficultyToSelect = selectedDifficultyOption;\n    } else {\n      difficultyToSelect = getClosestDifficulty(\n        song,\n        selectedDifficultyOption,\n        mode\n      );\n    }\n    props.onDifficultySelect(difficultyToSelect);\n  };\n\n  const onSongSelect = async (songId, params = {}) => {\n    AudioPlayer.stopSongPreview();\n    if (selectedSong) {\n      AudioPlayer.killImmediately(selectedSong.hash);\n      clearBpmAndStopDisplay();\n    }\n\n    setSelectedSongOption(songId);\n\n    const song = simfileList.find((song) => song.hash === songId);\n\n    let initialProgress = 0;\n\n    // initialize progress only if this is the song being initialized on page load\n    if (!props.previousSong) {\n      initialProgress = getSavedSongProgress();\n    }\n\n    if (presetParams.song === songId && presetParams.progress) {\n      initialProgress = presetParams.progress / 100000;\n    } else {\n      // remove preset progress marker if it is no longer relevant to the new song\n      presetParams.progress = 0;\n    }\n\n    // automatically fetch simfile and update chart\n    await props.onSongSelect(song, initialProgress);\n\n    // short-circuit if this is not the last song that was selected\n    if (loadStore.lastRequestedSong !== song.title) {\n      return;\n    }\n\n    // Auto-select the selected song's chart based on the applied level/difficulty filters.\n    // 4 possible cases\n\n    // Neither level nor difficulty filter applied\n    if (\n      selectedFilters.level === \"all\" &&\n      selectedFilters.difficulty === \"all\"\n    ) {\n      // select the chart corresponding to the selected difficulty option.\n      // if the song does not have a chart for that difficulty, choose the closest difficulty.\n      selectClosestDifficulty(song);\n    }\n\n    // Level filter applied but not difficulty\n    else if (\n      selectedFilters.level !== \"all\" &&\n      selectedFilters.difficulty === \"all\"\n    ) {\n      const levels =\n        selectedMode === \"double\"\n          ? song.levels.slice(5, 9)\n          : song.levels.slice(0, 5);\n\n      // if the song has a chart that matches the level filter, choose that chart\n      if (levels.includes(selectedFilters.level)) {\n        for (let i = 0; i < levels.length; i++) {\n          const level = levels[i];\n          if (level === selectedFilters.level) {\n            const difficulties =\n              selectedMode === \"double\" ? DP_DIFFICULTIES : SP_DIFFICULTIES;\n            props.onDifficultySelect(difficulties[i]);\n            break;\n          }\n        }\n      }\n\n      // if the song does not have a chart that matches the level filter, go with the closest difficulty\n      else {\n        selectClosestDifficulty(song);\n      }\n    }\n\n    // Difficulty filter applied but not level\n    else if (\n      selectedFilters.difficulty !== \"all\" &&\n      selectedFilters.level === \"all\"\n    ) {\n      let difficultyIdx = SP_DIFFICULTIES.indexOf(selectedFilters.difficulty);\n      if (selectedMode === \"double\") difficultyIdx += 4;\n\n      // if the song has a chart that matches the difficulty filter, choose that chart\n      if (typeof song.levels[difficultyIdx] === \"number\") {\n        props.onDifficultySelect(selectedFilters.difficulty);\n      }\n\n      // if the song does not have a chart that matches the difficulty filter, go with the closest difficulty\n      else {\n        selectClosestDifficulty(song);\n      }\n    }\n\n    // Both level and difficulty filters applied\n    // equivalent to a regular else block but condition listed explicitly for clarity\n    else if (\n      selectedFilters.difficulty !== \"all\" &&\n      selectedFilters.level !== \"all\"\n    ) {\n      let difficultyIdx = SP_DIFFICULTIES.indexOf(selectedFilters.difficulty);\n      if (selectedMode === \"double\") difficultyIdx += 4;\n\n      if (song.levels[difficultyIdx] === selectedFilters.level) {\n        props.onDifficultySelect(selectedFilters.difficulty);\n      } else {\n        selectClosestDifficulty(song);\n      }\n    }\n\n    /* Miscellaneous side effects of selecting a song */\n\n    // if the user got here via a share url and changes the song/difficulty, remove the share params\n    if (!params.preserveShareUrl) {\n      window.history.pushState(null, null, \".\");\n    }\n  };\n\n  const handleDifficultySelect = (difficulty) => {\n    setSelectedDifficultyOption(difficulty);\n    props.onDifficultySelect(difficulty);\n  };\n\n  const handleModeSelect = (mode) => {\n    if (!isChartAvailable(selectedSong, mode)) {\n      selectClosestDifficulty(selectedSong, mode);\n    }\n    props.onModeSelect(mode);\n  };\n\n  const renderDifficulties = () => {\n    if (!selectedSong) return null;\n\n    // For newly released songs, not all difficulties may have their simfiles available at the time.\n    // Gray out all difficulties that are not available\n    let availableSimfiles = {};\n\n    if (props.gameEngine && props.gameEngine.simfiles) {\n      availableSimfiles = props.gameEngine.simfiles;\n    }\n    // console.log(\"renderDifficulties availableSimfiles\", availableSimfiles);\n\n    let levels;\n    if (selectedMode === \"single\") levels = selectedSong.levels.slice(0, 5);\n    else if (selectedMode === \"double\")\n      levels = selectedSong.levels.slice(5, 9);\n\n    return levels.map((level, idx) => {\n      if (!level) return null;\n      const difficulty =\n        selectedMode === \"double\" ? DP_DIFFICULTIES[idx] : SP_DIFFICULTIES[idx];\n\n      const isSimfileAvailable = availableSimfiles.hasOwnProperty(\n        `${selectedMode}_${difficulty}`\n      );\n\n      return (\n        <div\n          className={`song-difficulty ${difficulty} ${\n            selectedDifficulty === difficulty ? \"selected\" : \"\"\n          } ${isSimfileAvailable ? \"\" : \"unavailable\"}`}\n          key={`${selectedMode}-difficulty_${difficulty}`}\n          onClick={() => handleDifficultySelect(difficulty)}\n          title={isSimfileAvailable ? null : \"Chart currently unavailable.\"}\n        >\n          <div className=\"difficulty\">{difficulty}</div>\n          <div className=\"level\">{level}</div>\n        </div>\n      );\n    });\n  };\n\n  const getDisplayBpm = () => {\n    if (!selectedSong) return null;\n    let displayBpm = selectedSong.displayBpm;\n    if (displayBpm.includes(\",\")) {\n      let difficultyIdx = SP_DIFFICULTIES.indexOf(selectedDifficulty);\n      if (selectedMode === \"double\") difficultyIdx += 4;\n      displayBpm = displayBpm.split(\",\")[difficultyIdx];\n    }\n    return displayBpm;\n  };\n\n  const isModeToggleDisabled = () => {\n    if (!selectedSong || !selectedMode) return true;\n    if (selectedDifficulty === \"Beginner\") return true;\n    if (selectedMode === \"single\") {\n      return !selectedSong.levels.slice(5, 9).filter((a) => a).length;\n    } else if (selectedMode === \"double\") {\n      return !selectedSong.levels.slice(0, 5).filter((a) => a).length;\n    }\n    return true;\n  };\n\n  const isChartAvailable = (song, mode = selectedMode) => {\n    let difficultyIdx = SP_DIFFICULTIES.indexOf(selectedDifficultyOption);\n    if (mode === \"double\") difficultyIdx += 4;\n    return !song.missingDifficulties.includes(difficultyIdx);\n  };\n\n  const toggleSongPreview = () => {\n    const oldSongHash = AudioPlayer.currentPreview;\n\n    // toggle start/stop of the same song\n    if (oldSongHash === selectedSong.hash) {\n      if (previewAudio.status === \"playing\") {\n        AudioPlayer.stopSongPreview();\n      } else {\n        AudioPlayer.playSongPreview(selectedSong);\n      }\n    }\n\n    // play a new song and stop the current one (if applicable)\n    else {\n      if (previewAudio.status === \"playing\") {\n        AudioPlayer.stopSongPreview();\n      }\n      AudioPlayer.playSongPreview(selectedSong);\n    }\n  };\n\n  return (\n    <div\n      className={`view-section songView ${\n        props.activeView === \"song\" ? \"active\" : \"\"\n      }`}\n    >\n      <div className=\"view-wrapper\">\n        <form className=\"songForm\">\n          <div className=\"form-inner-wrapper\">\n            <div className=\"selectedSong\">\n              <div\n                className={`selectedSong-jacket-wrapper ${\n                  previewAudio.status === \"playing\" ? \"playing\" : \"\"\n                }`}\n              >\n                <div className=\"selectedSong-jacket-overlay\">\n                  <AudioWave />\n                </div>\n                <img\n                  className={`selectedSong-jacket`}\n                  src={getJacketPath(`${selectedSongOption}.png`)}\n                  alt=\"Selected song\"\n                  onClick={toggleSongPreview}\n                />\n              </div>\n              <div className=\"selectedSong-info\">\n                <SongSearch\n                  selectedSongOption={selectedSongOption}\n                  onSongSelect={onSongSelect}\n                  simfileOptions={simfileOptions}\n                />\n                <div className=\"song-artist\">\n                  {selectedSong && selectedSong.artist}\n                </div>\n\n                <div className=\"song-difficulties\">{renderDifficulties()}</div>\n\n                <div className=\"song-mode\">\n                  <ToggleSwitch\n                    option1={{ text: \"Single\", value: \"single\" }}\n                    option2={{ text: \"Double\", value: \"double\" }}\n                    onChange={handleModeSelect}\n                    value={selectedMode}\n                    disabled={isModeToggleDisabled()}\n                  />\n                </div>\n\n                <div className=\"bpm-display-container\">\n                  <div className=\"bpm-display-label\">BPM</div>\n                  <div className=\"bpm-display-value\">{getDisplayBpm()}</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"songForm-filters\">\n              <div className=\"songForm-filters-row\">\n                <div className=\"form-field\">\n                  <label>By Title</label>\n                  <Dropdown\n                    className=\"title-filter-dropdown\"\n                    selection\n                    value={selectedFilters.title}\n                    onChange={(e, data) =>\n                      updateSelectedFilters({\n                        title: data.value,\n                      })\n                    }\n                    options={titleSortOptions}\n                    upward={false}\n                  />\n                  <label>By BPM Range</label>\n                  <Dropdown\n                    className=\"bpm-filter-dropdown\"\n                    selection\n                    value={selectedFilters.bpm}\n                    onChange={(_, data) => {\n                      updateSelectedFilters({\n                        bpm: data.value,\n                      });\n                    }}\n                    options={bpmRangeOptions}\n                    upward={false}\n                  />\n                </div>\n                <div className=\"form-field\">\n                  <label>By Version</label>\n                  <Dropdown\n                    className=\"version-filter-dropdown\"\n                    selection\n                    value={selectedFilters.version}\n                    onChange={(e, data) =>\n                      updateSelectedFilters({\n                        version: data.value,\n                      })\n                    }\n                    options={versionSortOptions}\n                    upward={false}\n                  />\n                  {/* <label>By Genre</label> */}\n                </div>\n                <div className=\"form-field\">\n                  <label>By Level</label>\n                  <Dropdown\n                    className=\"level-filter-dropdown\"\n                    selection\n                    value={selectedFilters.level}\n                    onChange={(e, data) =>\n                      updateSelectedFilters({\n                        level: data.value,\n                      })\n                    }\n                    options={levelSortOptions}\n                    upward={false}\n                  />\n                  <label>By Difficulty</label>\n                  <Dropdown\n                    className=\"difficulty-filter-dropdown\"\n                    selection\n                    value={selectedFilters.difficulty}\n                    onChange={(e, data) =>\n                      updateSelectedFilters({\n                        difficulty: data.value,\n                      })\n                    }\n                    options={difficultySortOptions}\n                    upward={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"songGrid-container\" ref={songGridContainer}>\n          <SongGrid\n            displayedSongs={displayedSongs}\n            onSongSelect={onSongSelect}\n            selectedSongOption={selectedSongOption}\n            selectedMode={selectedMode}\n            selectedDifficultyOption={selectedDifficultyOption}\n            selectedFilters={selectedFilters}\n            isChartAvailable={isChartAvailable}\n            gameEngine={props.gameEngine}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio, songSelect, screen, simfiles } = state;\n  const { previewAudio } = audio;\n  const { simfileList } = simfiles;\n  return {\n    previewAudio,\n    simfileList,\n    selectedDifficulty: songSelect.difficulty,\n    selectedMode: songSelect.mode,\n    previousSong: songSelect.song,\n    activeView: screen.activeView,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectSong: (song) => dispatch(actions.selectSong(song)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongForm);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Radio, Checkbox, Input } from \"semantic-ui-react\";\n\nimport { options } from \"./options\";\nimport { SP_DIFFICULTIES, DEFAULT_CMOD } from \"../../constants\";\nimport { capitalize } from \"../../utils\";\nimport { updateMods } from \"../../actions/ModsActions\";\n\nconst ModsForm = (props) => {\n  const { mods, updateMods, mode, song, difficulty } = props;\n\n  // // when switching between single and double, any mod set to a value incompatible\n  // // with the new mode will be reset to its default value\n  // useEffect(() => {\n  //   if (mode === \"double\" && ![\"off\", \"mirror\"].includes(mods.turn)) {\n  //     updateMods({ turn: \"off\" });\n  //   }\n  // }, [mode]);\n\n  // temp UX improvement (?)\n  // revert any applied turn mods to normal turn when the chart is changed\n  useEffect(() => {\n    // console.log(\"mode, song, or difficulty changed\");\n    updateMods({ turn: \"off\" });\n  }, [mode, song, difficulty]);\n\n  const getEffectiveScrollSpeed = () => {\n    if (!song) return null;\n\n    let displayBpm;\n    if (mods.speed === \"cmod\") {\n      if (mods.cmod < 100 || mods.cmod > 1000) {\n        displayBpm = DEFAULT_CMOD;\n      } else displayBpm = mods.cmod;\n      return <strong>{displayBpm}</strong>;\n    }\n\n    displayBpm = song.displayBpm;\n    if (displayBpm.includes(\",\")) {\n      let difficultyIdx = SP_DIFFICULTIES.indexOf(difficulty);\n      if (mode === \"double\") difficultyIdx += 4;\n      displayBpm = displayBpm.split(\",\")[difficultyIdx];\n    }\n\n    const [lowBpm, highBpm] = displayBpm.split(\"-\");\n    if (!highBpm) {\n      return <strong>{Math.round(lowBpm * mods.speed)}</strong>;\n    } else {\n      return (\n        <strong>{`${Math.round(lowBpm * mods.speed)} - ${Math.round(\n          highBpm * mods.speed\n        )}`}</strong>\n      );\n    }\n  };\n\n  const resetCmodIfInvalid = (e) => {\n    const fieldValue = e.target.value;\n    if (\n      !fieldValue ||\n      parseInt(fieldValue) < 100 ||\n      parseInt(fieldValue) > 1000\n    ) {\n      updateMods({ cmod: DEFAULT_CMOD });\n    }\n  };\n\n  return (\n    <div\n      className={`view-section modsView ${\n        props.activeView === \"mods\" ? \"active\" : \"\"\n      }`}\n    >\n      <div className=\"view-wrapper\">\n        <form className=\"modsForm\">\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">\n              Speed\n              {song && (\n                <span className=\"form-sublabel\">\n                  (Effective scroll speed:{\" \"}\n                  <strong>{getEffectiveScrollSpeed()}</strong>)\n                </span>\n              )}\n            </h4>\n            {options.mods.speed.map((speed) => {\n              return (\n                <Radio\n                  key={`speed_${speed}`}\n                  label={`${speed}x`}\n                  name=\"speed\"\n                  value={speed}\n                  checked={mods.speed === speed}\n                  onChange={() => updateMods({ speed })}\n                />\n              );\n            })}\n            <div>\n              <Radio\n                key=\"speed_cmod\"\n                label=\"Cmod\"\n                name=\"speed\"\n                value=\"cmod\"\n                checked={mods.speed === \"cmod\"}\n                onChange={() => updateMods({ speed: \"cmod\" })}\n              />\n              <Input\n                type=\"number\"\n                disabled={mods.speed !== \"cmod\"}\n                min={100}\n                max={1000}\n                name=\"cmod\"\n                value={mods.cmod}\n                onChange={(_, data) => updateMods({ cmod: data.value })}\n                onBlur={resetCmodIfInvalid}\n              />\n            </div>\n            <small>(Valid range: 100-1000; default: {DEFAULT_CMOD})</small>\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Appearance</h4>\n            {options.mods.appearance.map((appearance, i) => {\n              return (\n                <Radio\n                  key={`appearance_${appearance}`}\n                  label={\n                    [\n                      \"Visible\",\n                      \"Hidden+\",\n                      \"Sudden+\",\n                      \"Hidden+ / Sudden+\",\n                      \"Stealth\",\n                    ][i]\n                  }\n                  name=\"appearance\"\n                  value={appearance}\n                  checked={mods.appearance === appearance}\n                  onChange={() => updateMods({ appearance })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Arrow color</h4>\n            {options.mods.noteskin.map((noteskin) => {\n              return (\n                <Radio\n                  key={`noteskin_${noteskin}`}\n                  label={capitalize(noteskin)}\n                  name=\"noteskin\"\n                  value={noteskin}\n                  checked={mods.noteskin === noteskin}\n                  onChange={() => updateMods({ noteskin })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Turn</h4>\n            {options.mods.turn\n              .filter((turn) => {\n                if (mode === \"double\")\n                  return turn === \"off\" || turn === \"mirror\";\n                return true;\n              })\n              .map((turn) => {\n                return (\n                  <Radio\n                    key={`turn_${turn}`}\n                    label={capitalize(turn)}\n                    name=\"turn\"\n                    value={turn}\n                    checked={mods.turn === turn}\n                    onChange={() => updateMods({ turn })}\n                  />\n                );\n              })}\n          </div>\n          {mods.turn === \"shuffle\" && (\n            <div className=\"form-field\">\n              <h4 className=\"form-label\">\n                Shuffle pattern\n                <span className=\"form-sublabel\">\n                  (compare to original LDUR)\n                </span>\n              </h4>\n              {options.mods.shuffle.map((shuffle, i) => {\n                return (\n                  <Radio\n                    key={`shuffle_${shuffle}`}\n                    label={\n                      [\n                        \"LRDU\",\n                        \"UDRL\",\n                        \"LRUD\",\n                        \"DURL\",\n                        \"DLUR\",\n                        \"DULR\",\n                        \"RLUD\",\n                        \"RULD\",\n                      ][i]\n                    }\n                    name=\"shuffle\"\n                    value={shuffle}\n                    checked={mods.shuffle === shuffle}\n                    onChange={() => updateMods({ shuffle })}\n                  />\n                );\n              })}\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Step zone</h4>\n            {options.mods.stepZone.map((stepZone) => {\n              return (\n                <Radio\n                  key={`stepZone_${stepZone}`}\n                  label={capitalize(stepZone)}\n                  name=\"stepZone\"\n                  value={stepZone}\n                  checked={mods.stepZone === stepZone}\n                  onChange={() => updateMods({ stepZone })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Scroll</h4>\n            {options.mods.scroll.map((scroll) => {\n              return (\n                <Radio\n                  key={`scroll_${scroll}`}\n                  label={capitalize(scroll)}\n                  name=\"scroll\"\n                  value={scroll}\n                  checked={mods.scroll === scroll}\n                  onChange={() => updateMods({ scroll })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Combo display</h4>\n            {options.mods.comboDisplay.map((comboDisplay, i) => {\n              return (\n                <Radio\n                  key={`comboDisplay_${comboDisplay}`}\n                  label={[\"Behind arrows\", \"In front of arrows\", \"Hidden\"][i]}\n                  name=\"comboDisplay\"\n                  value={comboDisplay}\n                  checked={mods.comboDisplay === comboDisplay}\n                  onChange={() => updateMods({ comboDisplay })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Combo font</h4>\n            {options.mods.comboFont.map((comboFont) => {\n              return (\n                <Radio\n                  key={`comboFont_${comboFont}`}\n                  label={comboFont}\n                  name=\"comboFont\"\n                  value={comboFont}\n                  checked={mods.comboFont === comboFont}\n                  onChange={() => updateMods({ comboFont })}\n                />\n              );\n            })}\n          </div>\n\n          <h4>Miscellaneous</h4>\n          <div className=\"form-field\">\n            <Checkbox\n              toggle\n              label=\"Guidelines\"\n              name=\"guidelines\"\n              checked={mods.guidelines}\n              onChange={() => updateMods({ guidelines: !mods.guidelines })}\n            />\n          </div>\n          <div className=\"form-field\">\n            <Checkbox\n              toggle\n              label=\"Color freeze heads\"\n              name=\"colorFreezes\"\n              checked={mods.colorFreezes}\n              onChange={() => updateMods({ colorFreezes: !mods.colorFreezes })}\n            />\n          </div>\n          <div className=\"form-field\">\n            <Checkbox\n              toggle\n              label=\"Scrolling BPM/stop values\"\n              name=\"bpmStopDisplay\"\n              checked={mods.bpmStopDisplay}\n              onChange={() =>\n                updateMods({ bpmStopDisplay: !mods.bpmStopDisplay })\n              }\n            />\n          </div>\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Global offset</h4>\n            <Input\n              type=\"range\"\n              name=\"globalOffset\"\n              min=\"-0.20\"\n              max=\"0.20\"\n              step=\"0.01\"\n              value={mods.globalOffset}\n              onChange={(_, data) =>\n                updateMods({ globalOffset: parseFloat(data.value) })\n              }\n            />\n            <span>{mods.globalOffset}</span>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { mods, songSelect, screen } = state;\n  return {\n    mods,\n    mode: songSelect.mode,\n    song: songSelect.song,\n    difficulty: songSelect.difficulty,\n    activeView: screen.activeView,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateMods: (mods) => dispatch(updateMods(mods)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModsForm);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n\\t\\ttspan { white-space:pre }\\n\\t\\t.shp0 { fill: #020202 } \\n\\t\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Path 0\",\n  className: \"shp0\",\n  d: \"M16.49 17L1.5 32C30.16 60.67 31.81 62.01 35 61.99C37.45 61.97 39.33 61.14 41.27 59.23C43.27 57.26 44.03 55.53 44.01 53C43.98 50.32 43.09 48.61 40.24 45.73L36.5 41.97L54.5 42.03C60.51 35.97 61.98 33.52 62 32C62.02 30.41 60.66 28.14 58.27 25.76L54.5 22.03L36.5 22.03C43.09 15.39 43.98 13.68 44.01 11C44.03 8.47 43.27 6.74 41.27 4.77C39.32 2.85 37.45 2.03 34.99 2.02C31.78 2 30.15 3.32 16.49 17ZM89.49 5.79L85.58 9.58L86.03 27.5C79.22 20.74 77.75 20.03 74.61 20.01C71.58 20 70.19 20.61 68.37 22.75C66.91 24.47 66.03 26.81 66.01 29C65.99 32.19 67.33 33.84 81 47.5L96 62.5C124.67 33.84 126.01 32.19 125.99 29C125.97 26.55 125.14 24.67 123.23 22.73C121.43 20.9 119.47 19.96 117.49 19.98C115.46 19.99 113.1 21.22 110.23 23.75L105.97 27.5L106.03 9.5C99.91 3.43 97.54 2.02 95.95 2.01C94.34 2.01 91.96 3.4 89.49 5.79ZM144.5 16.76C130.41 30.65 129.54 31.73 129.78 35.01C129.94 37.22 131.03 39.51 132.77 41.27C134.74 43.27 136.47 44.03 139 44.01C141.68 43.98 143.39 43.09 146.27 40.24L150.03 36.5L149.97 54.5C156.03 60.51 158.48 61.98 160 62C161.59 62.02 163.86 60.66 166.24 58.27L169.97 54.5L169.97 36.5C176.61 43.09 178.32 43.98 181 44.01C183.53 44.03 185.26 43.27 187.23 41.27C189.14 39.33 189.97 37.45 189.99 35C190.01 31.81 188.68 30.18 175.25 16.75C167.14 8.64 160.27 2.01 159.99 2C159.71 2 152.74 8.64 144.5 16.76ZM214.48 4.8C212.27 6.96 211.65 8.41 211.81 11.05C211.97 13.52 213.09 15.57 215.76 18.27L219.5 22.03L200.89 22C195.51 27.88 194.02 30.58 194 32C193.98 33.59 195.34 35.86 197.73 38.24L201.5 41.97L219.5 41.97C212.91 48.61 212.02 50.32 211.99 53C211.97 55.53 212.73 57.26 214.73 59.23C216.67 61.14 218.55 61.97 221 61.99C224.19 62.01 225.84 60.67 239.5 47L254.5 32C225.76 3.26 224.2 1.99 220.93 2C218.38 2 216.55 2.8 214.48 4.8Z\"\n});\n\nvar SvgArrows = function SvgArrows(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 256 80\",\n    width: 256,\n    height: 80,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrows, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrows.48a2d361.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M544.033302 516.000776V96.000564c0-17.672051-14.478655-31.998984-32.150706-31.998984s-32.150706 14.326933-32.150707 31.998984v420.061624c-54.909072 14.251072-95.809105 64.333925-95.809105 123.935554 0 59.691941 40.82056 109.836206 96.090876 124.000579a32.298816 32.298816 0 0 0-0.281771 4.006195v159.99492c0 17.672051 14.478655 31.998984 32.150707 31.998984s32.150706-14.326933 32.150706-31.998984V768.004516a32.280754 32.280754 0 0 0-0.317894-3.941171c55.389526-14.088512 96.397933-64.301413 96.397932-124.058378 0.010837-59.691941-40.809723-109.832593-96.080038-124.004191z m13.221527 169.249989a64.00158 64.00158 0 1 1 18.744945-45.256635 63.578925 63.578925 0 0 1-18.744945 45.260247zM223.678606 196.003711a32.287979 32.287979 0 0 0 0.292607-4.002582V96.000564a31.970084 31.970084 0 1 0-63.940169 0V192.001129a32.371065 32.371065 0 0 0 0.180622 4.060381c-55.270316 14.160761-96.173962 64.301413-96.173961 124.000579s40.910871 109.818143 96.181186 123.996966a32.360228 32.360228 0 0 0-0.184234 3.937558V927.999436a31.970084 31.970084 0 1 0 63.940169 0V448.000226a32.287979 32.287979 0 0 0-0.278158-3.883372c55.385914-14.088512 96.350971-64.301413 96.350971-124.054765S279.071744 210.084998 223.678606 196.003711z m13.575545 169.315013A64.00158 64.00158 0 1 1 255.999097 320.062089a63.578925 63.578925 0 0 1-18.744946 45.256635zM959.99842 320.062089c0-59.775027-41.048144-109.977091-96.45212-124.058378a32.360228 32.360228 0 0 0 0.173397-4.002582V96.000564a31.970084 31.970084 0 1 0-63.940169 0V192.001129a32.291592 32.291592 0 0 0 0.299833 4.060381c-55.270316 14.160761-96.116162 64.301413-96.116163 124.000579s40.82056 109.836206 96.090876 124.000578a32.298816 32.298816 0 0 0-0.281771 3.99897V927.999436a31.970084 31.970084 0 1 0 63.940169 0V448.061637a32.381903 32.381903 0 0 0-0.166172-3.941171c55.407588-14.084899 96.452119-64.286963 96.45212-124.058377z m-82.746526 45.253022a63.997968 63.997968 0 1 1 18.748558-45.253022 63.578925 63.578925 0 0 1-18.748558 45.253022z\",\n  fill: \"\"\n});\n\nvar SvgMods = function SvgMods(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"icon\",\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      verticalAlign: \"middle\",\n      fill: \"currentColor\",\n      overflow: \"hidden\"\n    },\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMods, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mods.d3d6577c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n\\t\\ttspan { white-space:pre }\\n\\t\\t.shp0 { fill: #323638 } \\n\\t\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Layer\"\n}, React.createElement(\"path\", {\n  id: \"Layer\",\n  fillRule: \"evenodd\",\n  className: \"shp0\",\n  d: \"M92.28 85.53L84 93.71C83.8 93.9 83.55 94 83.29 94C83.04 94 82.78 93.9 82.59 93.71L65.27 76.56C64.03 75.31 64.05 73.3 65.29 72.07L70.7 66.74C71.9 65.55 73.99 65.56 75.18 66.77L92.29 84.12C92.68 84.51 92.67 85.14 92.28 85.53ZM90.16 84.81L73.76 68.17C73.53 67.95 73.24 67.82 72.92 67.82C72.61 67.82 72.32 67.94 72.1 68.16L66.7 73.49C66.24 73.95 66.23 74.69 66.69 75.15L83.29 91.59L90.16 84.81Z\"\n}), React.createElement(\"path\", {\n  id: \"Layer\",\n  fillRule: \"evenodd\",\n  className: \"shp0\",\n  d: \"M39.31 77.77C18.42 77.77 1.42 60.77 1.42 39.88C1.42 18.99 18.42 2 39.3 2C60.19 2 77.19 18.99 77.19 39.88C77.19 60.77 60.19 77.77 39.31 77.77ZM75.19 39.88C75.19 20.1 59.09 4 39.3 4C19.52 4 3.42 20.1 3.42 39.88C3.42 59.67 19.52 75.77 39.3 75.77C59.09 75.77 75.19 59.67 75.19 39.88Z\"\n}), React.createElement(\"path\", {\n  id: \"Layer\",\n  fillRule: \"evenodd\",\n  className: \"shp0\",\n  d: \"M57.7 25.39L57.7 54.31C57.7 58.64 54.17 62.17 49.83 62.17C45.5 62.17 41.97 58.64 41.97 54.31C41.97 49.97 45.5 46.44 49.83 46.44C52.17 46.44 54.26 47.47 55.7 49.08L55.7 25.39C55.7 25.01 55.46 24.67 55.09 24.55L34.1 17.21C33.85 17.13 33.57 17.17 33.34 17.34C33.11 17.51 32.98 17.77 32.98 18.05L32.98 48.81C32.98 53.15 29.46 56.68 25.12 56.68C20.78 56.68 17.25 53.15 17.25 48.81C17.25 44.47 20.78 40.95 25.12 40.95C27.45 40.95 29.54 41.97 30.98 43.59L30.98 18.05C30.98 17.12 31.41 16.27 32.17 15.72C32.92 15.18 33.85 15.03 34.74 15.31L55.73 22.66C56.9 23.03 57.7 24.13 57.7 25.39ZM30.98 48.81C30.98 45.58 28.35 42.95 25.12 42.95C21.88 42.95 19.25 45.58 19.25 48.81C19.25 52.05 21.88 54.68 25.12 54.68C28.35 54.68 30.98 52.05 30.98 48.81ZM55.7 54.31C55.7 51.07 53.07 48.44 49.83 48.44C46.6 48.44 43.97 51.07 43.97 54.31C43.97 57.54 46.6 60.17 49.83 60.17C53.07 60.17 55.7 57.54 55.7 54.31Z\"\n}));\n\nvar SvgMusicSearch = function SvgMusicSearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 94 96\",\n    width: 94,\n    height: 96,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMusicSearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/music_search.ab83855e.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport { stopPreviewAudio } from \"../../actions/AudioActions\";\nimport { setActiveView } from \"../../actions/ScreenActions\";\nimport { ReactComponent as ChartIcon } from \"../../svg/arrows.svg\";\nimport { ReactComponent as ModsIcon } from \"../../svg/mods.svg\";\nimport { ReactComponent as SongIcon } from \"../../svg/music_search.svg\";\nimport { DEBUG_MODE } from \"../../constants\";\n\nconst Navbar = (props) => {\n  const { activeView, chartAudio } = props;\n\n  const navItems = [\n    { view: \"song\", icon: \"music\", svgIcon: SongIcon, text: \"Song\" },\n    { view: \"mods\", icon: \"sidebar\", svgIcon: ModsIcon, text: \"Mods\" },\n    { view: \"chart\", svgIcon: ChartIcon, text: \"Chart\" },\n    { view: DEBUG_MODE ? \"logView1\" : \"\", icon: \"\", text: \"\" },\n    { view: \"3\", icon: \"\", text: \"\" },\n  ];\n\n  const changeActiveView = (view) => {\n    if (chartAudio.status === \"playing\") return;\n    AudioPlayer.stopSongPreview();\n    props.setActiveView(view);\n  };\n\n  const isDisabled = (view) => {\n    if (view !== \"chart\" && chartAudio.status === \"playing\") return true;\n    return false;\n  };\n\n  return (\n    <nav className=\"navbar\">\n      {navItems.map((navItem, i) => {\n        const { view, icon, text } = navItem;\n        const SVGIcon = navItem.svgIcon;\n        if (!view)\n          return <div key={`navbarItem_${i}`} className=\"navbar_item\" />;\n        return (\n          <div\n            key={`navbarItem_${i}`}\n            className={`navbar_item ${activeView === view ? \"active\" : \"\"} ${\n              isDisabled(view) ? \"disabled\" : \"\"\n            }`}\n            onClick={() => changeActiveView(view)}\n          >\n            {SVGIcon ? (\n              <SVGIcon className={`svg-icon ${view}`} />\n            ) : (\n              <Icon name={icon} />\n            )}\n            <span className=\"description\">{text}</span>\n          </div>\n        );\n      })}\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio, screen } = state;\n  const { chartAudio } = audio;\n  return {\n    chartAudio,\n    activeView: screen.activeView,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    stopPreviewAudio: () => dispatch(stopPreviewAudio()),\n    setActiveView: (view) => dispatch(setActiveView(view)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ChartArea from \"../../components/chart/ChartArea\";\nimport SongForm from \"../../components/form/SongForm\";\nimport ModsForm from \"../../components/form/ModsForm\";\nimport Navbar from \"../../components/navigation/Navbar\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport {\n  selectSong,\n  selectDifficulty,\n  selectMode,\n} from \"../../actions/SongSelectActions\";\nimport { resizeScreen } from \"../../actions/ScreenActions\";\nimport { getSimfileList, loadSimfile } from \"../../actions/SimfileActions\";\nimport { DEBUG_MODE } from \"../../constants\";\nimport LogView from \"../../components/debug/LogView\";\n\nconst MainContainer = (props) => {\n  const [loadingSimfiles, setLoadingSimfiles] = useState(true);\n  const [selectedSM, setSelectedSM] = useState(null);\n\n  const [gameEngine, setGameEngine] = useState(null);\n\n  const [loadingAudio, setLoadingAudio] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchSimfiles();\n      setLoadingSimfiles(false);\n    };\n    fetchData();\n\n    AudioPlayer.setLoadingAudio = setLoadingAudio;\n\n    window.addEventListener(\"resize\", props.resizeScreen);\n  }, []);\n\n  const fetchSimfiles = async () => {\n    try {\n      await props.getSimfileList();\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n\n  const onSongSelect = async (song, initialProgress = 0) => {\n    // console.log(\"MainContainer selected song\", song);\n    AudioPlayer.selectSong(song, initialProgress);\n    // setSelectedSong(song);\n\n    props.selectSong(song);\n\n    document.title = `${song.title} - SMViewer`;\n\n    // retrieve audio file and simfile from song.simfilePath\n\n    props.loadSimfile(song);\n  };\n\n  const onDifficultySelect = (difficulty) => {\n    // setSelectedDifficulty(difficulty);\n    props.selectDifficulty(difficulty);\n  };\n  const onModeSelect = (mode) => {\n    props.selectMode(mode);\n  };\n\n  return (\n    <div className=\"main-container\">\n      {!loadingSimfiles && (\n        <>\n          <Navbar />\n          <div className=\"view-container\">\n            <ChartArea\n              loadingAudio={loadingAudio}\n              sm={selectedSM}\n              gameEngine={gameEngine}\n              setGameEngine={setGameEngine}\n            />\n            <ModsForm />\n            <SongForm\n              onSongSelect={onSongSelect}\n              onDifficultySelect={onDifficultySelect}\n              onModeSelect={onModeSelect}\n              loadingAudio={loadingAudio}\n              location={props.location}\n              gameEngine={gameEngine}\n            />\n\n            {DEBUG_MODE && <LogView />}\n          </div>\n        </>\n      )}\n      {DEBUG_MODE && (\n        <div id=\"debugLog\">\n          <div className=\"debug-text1\" />\n          <div className=\"debug-text2\" />\n          <div className=\"debug-text3\" />\n          <div className=\"debug-text4\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectSong: (song) => dispatch(selectSong(song)),\n    selectDifficulty: (song) => dispatch(selectDifficulty(song)),\n    selectMode: (song) => dispatch(selectMode(song)),\n    resizeScreen: (e) => dispatch(resizeScreen(e)),\n    getSimfileList: () => dispatch(getSimfileList()),\n    loadSimfile: (song) => dispatch(loadSimfile(song)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst LogView = (props) => {\n  return (\n    <div\n      className={`view-section logView1\n    ${props.activeView === \"logView1\" ? \"active\" : \"\"}`}\n    >\n      <div className=\"view-wrapper\">\n        <pre id=\"logView1\">test debug log</pre>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { screen } = state;\n  return {\n    activeView: screen.activeView,\n  };\n};\n\nexport default connect(mapStateToProps, null)(LogView);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSimfileList, loadSimfile } from \"../../actions/SimfileActions\";\n\nconst StaticViewContainer = props => {\n  const [songId, setSongId] = useState(null);\n  const [dataLoading, setDataLoading] = useState(true);\n\n  console.log(\"StaticViewContainer props\", props);\n\n  useEffect(() => {\n    const init = async () => {\n      if (!props.simfileList.length) {\n        console.log(\"loading simfileList\");\n        await props.getSimfileList();\n      }\n    };\n    init();\n  }, []);\n\n  useEffect(() => {\n    const params = props.location.search\n      .slice(1)\n      .split(\"&\")\n      .map(param => {\n        const [key, value] = param.split(\"=\");\n        return { [key]: value };\n      });\n    console.log(params);\n  }, [props.location.search]);\n\n  return <div>cool</div>;\n};\n\nconst mapStateToProps = state => {\n  const { simfiles, songSelect } = state;\n  const { sm, simfileList } = simfiles;\n  const { song, difficulty, mode } = songSelect;\n  return {\n    simfileList,\n    sm,\n    song,\n    difficulty,\n    mode\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSimfileList: () => dispatch(getSimfileList()),\n    loadSimfile: song => dispatch(loadSimfile(song))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StaticViewContainer);\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\n\nimport MainContainer from \"./containers/main/MainContainer\";\nimport StaticViewContainer from \"./containers/static\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          // component={MainContainer}\n          render={routeProps => <MainContainer {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/static\"\n          // component={StaticViewContainer}\n          render={routeProps => {\n            return <StaticViewContainer {...routeProps} />;\n          }}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  console.log(process.env.NODE_ENV);\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}