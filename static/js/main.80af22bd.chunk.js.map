{"version":3,"sources":["constants/index.js","utils/index.js","components/chart/canvas/Arrow.js","components/chart/canvas/ShockArrow.js","components/chart/canvas/StepZone.js","components/chart/canvas/Guidelines.js","utils/parseSimfile.js","utils/engineUtils.js","actions/AudioActions.js","reducers/AudioReducer.js","reducers/index.js","store.js","core/AudioPlayer.js","core/GameEngine.js","components/chart/Progress.js","components/chart/ChartArea.js","components/form/SongGrid.js","components/form/options.js","svg/audiowave.svg","components/form/SongForm.js","components/form/ModsForm.js","components/navigation/MobileNav.js","containers/main/MainContainer.js","App.js","index.js"],"names":["DIRECTIONS","DDR_VERSIONS","SP_DIFFICULTIES","TITLE_CATEGORIES","LEVELS","fetchDocument","path","a","fetch","mode","response","reader","body","getReader","decoder","TextDecoder","read","readResult","decode","value","getAssetPath","window","location","href","capitalize","str","slice","toUpperCase","arrowImages","forEach","direction","Image","src","imageName","Arrow","attrs","key","mods","speed","noteskin","this","note","measureIdx","measureN","measureD","originalBeatPosition","holdBeats","hitFrame","previousBeatPosition","beatTick","canvas","c","getContext","bottomBoundary","height","i","length","arrowImg","frameX","frameY","destX","destY","includes","freeze_head","indexOf","Math","floor","beatD","beatN","measureFraction","currentBeatPosition","drawImage","save","globalAlpha","pow","tap_explosion","ARROW_WIDTH","ARROW_HEIGHT","restore","arrowBodyImg","totalBodyHeight","repetitions","partialHeight","originalPartialHeight","partialDestY","freezeBeingHeld","bodyHeight","bodyFrameY","bodyDestY","tailHeight","tailPartialHeight","arrowHeadImg","ShockArrow","frame","flashImages","receptorImages","StepZone","isFlash","Guidelines","finalBeat","beat","lineWidth","beginPath","moveTo","lineTo","width","strokeStyle","stroke","modeRegex","difficultyRegex","difficultyMap","Beginner","Easy","Medium","Hard","Challenge","parseSimfile","sm","simfiles","bpms","test","exec","split","map","point","parseFloat","stops","chartStr","smDifficulty","difficulty","simfile","levelRegex","RegExp","level","parseInt","measures","lastIndexOf","trim","measure","ticks","filter","n","startsWith","numTicks","noteObjects","tick","tickIdx","noteObj","push","chart","applyTurnMods","turn","shuffle","turnMap","off","mirror","left","right","shuffle1","shuffle2","shuffle3","shuffle4","shuffle5","shuffle6","shuffle7","shuffle8","turnMod","row","setChartProgress","progress","dispatch","type","payload","initialState","chartAudio","status","previewAudio","combineReducers","audio","state","action","store","createStore","reducers","compose","applyMiddleware","thunk","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","sources","song","preview","currentSong","currentPreview","currentSongId","currentPreviewId","activeView","previewFadeTimeout","updateTimeline","bind","updateProgress","audioResyncFrames","hash","setLoadingAudio","title","Howl","dAudioUrl","format","html5","onload","onloaderror","id","error","blah","alert","onplay","getCurrentSong","tl","play","resync","gsap","ticker","add","onpause","pause","remove","onseek","onstop","console","log","restart","onend","spriteId","sprite","sample","sampleStart","sampleLength","clearTimeout","stop","storeAudioSource","time","getCurrentTime","deltaTime","seek","duration","actions","ms","seekTime","timestamp","playing","getCurrentPreview","on","fade","setTimeout","GameEngine","timeline","eventList","arrows","shockArrows","drawBackground","globalParams","mainLoop","bpmPtr","stopPtr","currentBpm","bpm","prevEvent","currentEvent","prevTimestamp","timestampDiff","currentTimestamp","Array","isArray","newChart","j","shockArrow","arrow","stepZone","resetArrows","accumulatedBeatTick","lastArrow","lastEvent","max","to","startEvent","endEvent","delay","sectionBeatLength","sectionDuration","ease","guidelines","AudioPlayer","setTimeline","reset","render","requestAnimationFrame","fillStyle","fillRect","paused","Progress","props","progressBar","useRef","useEffect","current","addEventListener","e","jumpToProgress","touches","event","totalWidth","offsetWidth","progressPercent","clientX","offsetLeft","seekProgress","ref","className","style","connect","selectedDifficulty","selectedSong","loadingAudio","selectedAudio","gameEngine","setGameEngine","useState","setCanvas","setPlaying","chartArea","document","querySelector","mc","Hammer","goForward","goBack","ge","generateEventList","generateArrows","initTimeline","restartTl","Button","onClick","isPlaying","disabled","SongGrid","displayedSongs","onSongSelect","selectedSongOption","songs","renderSong","selectSong","alt","options","optionDefaultValues","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref","svgRef","viewBox","ForwardRef","forwardRef","simfileList","setActiveView","simfileOptions","text","setSelectedSongOption","selectedDifficultyOption","setSelectedDifficultyOption","version","selectedFilters","setSelectedFilters","setDisplayedSongs","abcSort","levels","setSelectedSong","titleSortOptions","concat","letter","versionSortOptions","versionName","idx","reverse","levelSortOptions","find","data","songHash","stopSongPreview","handleDifficultySelect","onDifficultySelect","playSongPreview","Dropdown","placeholder","search","selection","onChange","artist","ModsForm","setMods","updateMods","updatedMods","Radio","label","name","checked","stopPreviewAudio","isDisabled","view","icon","navItem","Icon","MainContainer","loadingSimfiles","setLoadingSimfiles","setSimfileList","selectedSM","setSelectedSM","setSelectedDifficulty","setSelectedAudio","fetchSimfiles","fetchData","tsv","origin","parsedTsv","smName","changeActiveView","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.80af22bd.chunk.js","sourcesContent":["export const ARROW_WIDTH = 64;\nexport const ARROW_HEIGHT = 64;\n\n/* Height of one repetition of the freeze body pattern */\nexport const FREEZE_BODY_HEIGHT = 128;\n\nexport const DIRECTIONS = [\"left\", \"down\", \"up\", \"right\"];\n\n/* Number of seconds that the visuals are delayed relative to the audio */\n// export const GLOBAL_OFFSET = 0.012;\nexport const GLOBAL_OFFSET = 0;\n\nexport const MARVELOUS_FLASH_FRAMES = 12;\n\n/* Number of beats played after the last note or event until the timeline ends */\nexport const END_EXTRA_BEATS = 8;\n\nexport const DDR_VERSIONS = [\n  \"DDR 1st\",\n  \"DDR 2ndMIX\",\n  \"DDR 3rdMIX\",\n  \"DDR 4thMIX\",\n  \"DDR 5thMIX\",\n  \"DDRMAX\",\n  \"DDRMAX2\",\n  \"DDR EXTREME\",\n  \"DDR SuperNOVA\",\n  \"DDR SuperNOVA 2\",\n  \"DDR X\",\n  \"DDR X2\",\n  \"DDR X3 VS 2ndMIX\",\n  \"DDR (2013)\",\n  \"DDR (2014)\",\n  \"DDR A\",\n  \"DDR A20\",\n];\n\nexport const SP_DIFFICULTIES = [\n  \"Beginner\",\n  \"Basic\",\n  \"Difficult\",\n  \"Expert\",\n  \"Challenge\",\n];\nexport const DP_DIFFICULTIES = [\"Basic\", \"Difficult\", \"Expert\", \"Challenge\"];\n\nexport const TITLE_CATEGORIES = [\n  \"あ\",\n  \"か\",\n  \"さ\",\n  \"た\",\n  \"な\",\n  \"は\",\n  \"ま\",\n  \"や\",\n  \"ら\",\n  \"わ\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"NUM\",\n];\n\nexport const LEVELS = [\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n];\n","export const fetchDocument = async (path) => {\n  const response = await fetch(path, {\n    mode: \"cors\",\n  });\n  const reader = response.body.getReader();\n  const decoder = new TextDecoder(\"utf-8\");\n  const readResult = await reader.read();\n  return decoder.decode(readResult.value);\n};\n\nexport const getAssetPath = (path) => {\n  return window.location.href + \"/assets/\" + path;\n};\n\nexport const capitalize = (str) => {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n};\n","import {\n  DIRECTIONS,\n  ARROW_WIDTH,\n  ARROW_HEIGHT,\n  FREEZE_BODY_HEIGHT,\n  MARVELOUS_FLASH_FRAMES,\n} from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\n\nconst arrowImages = {};\nDIRECTIONS.forEach((direction) => {\n  arrowImages[`rainbow_${direction}`] = new Image();\n  arrowImages[`rainbow_${direction}`].src = getAssetPath(\n    `rainbow_${direction}.png`\n  );\n  arrowImages[`note_${direction}`] = new Image();\n  arrowImages[`note_${direction}`].src = getAssetPath(`note_${direction}.png`);\n  arrowImages[`vivid_${direction}`] = new Image();\n  arrowImages[`vivid_${direction}`].src = getAssetPath(\n    `vivid_${direction}.png`\n  );\n  arrowImages[`flat_${direction}`] = new Image();\n  arrowImages[`flat_${direction}`].src = getAssetPath(`vivid_${direction}.png`);\n\n  arrowImages[`freeze_tail_active_${direction}`] = new Image();\n  arrowImages[`freeze_tail_active_${direction}`].src = getAssetPath(\n    `freeze_tail_active_${direction}.png`\n  );\n  arrowImages[`freeze_tail_inactive_${direction}`] = new Image();\n  arrowImages[`freeze_tail_inactive_${direction}`].src = getAssetPath(\n    `freeze_tail_inactive_${direction}.png`\n  );\n\n  arrowImages[`freeze_body_active_${direction}`] = new Image();\n  arrowImages[`freeze_body_active_${direction}`].src = getAssetPath(\n    `freeze_body_active_${direction}.png`\n  );\n  arrowImages[`freeze_body_inactive_${direction}`] = new Image();\n  arrowImages[`freeze_body_inactive_${direction}`].src = getAssetPath(\n    `freeze_body_inactive_${direction}.png`\n  );\n\n  arrowImages[`shock_${direction}`] = new Image();\n  arrowImages[`shock_${direction}`].src = getAssetPath(\n    `shock_${direction}.png`\n  );\n});\n\nconst miscImages = [\"freeze_head\", \"tap_explosion\"];\nmiscImages.forEach((imageName) => {\n  arrowImages[imageName] = new Image();\n  arrowImages[imageName].src = getAssetPath(`${imageName}.png`);\n});\n\nclass Arrow {\n  constructor(attrs) {\n    const { key, mods } = attrs;\n    const { speed, noteskin } = mods;\n\n    this.key = key; // arrow index\n    this.speed = speed;\n    this.note = attrs.note;\n    this.noteskin = noteskin;\n    this.measureIdx = attrs.measureIdx;\n    this.measureN = attrs.measureN;\n    this.measureD = attrs.measureD;\n    // this.currentBeatPosition = attrs.currentBeatPosition;\n    this.originalBeatPosition = attrs.originalBeatPosition;\n    this.holdBeats = attrs.holdBeats || null;\n\n    this.hitFrame = 0; // frame for showing the Marvelous flash\n\n    // can be used to detect the moment that the arrow passes a certain position\n    // even without landing precisely on it\n    this.previousBeatPosition = null;\n  }\n\n  reset() {\n    this.hitFrame = 0;\n  }\n\n  currentBeatPosition(beatTick) {\n    return this.originalBeatPosition - beatTick;\n  }\n\n  render(canvas, beatTick) {\n    const c = canvas.getContext(\"2d\");\n\n    const topBoundary = 0; // used to simulate the arrows being hit and disappearing\n    const bottomBoundary = canvas.height; // can be adjusted with SUDDEN+\n\n    for (let i = 0; i < this.note.length; i++) {\n      // nothing\n      if (this.note[i] === \"0\") continue;\n\n      let arrowImg;\n      let frameX, frameY, destX, destY;\n      const direction = DIRECTIONS[i];\n\n      // regular note\n      if (this.note[i] === \"1\") {\n        arrowImg = arrowImages[`${this.noteskin}_${direction}`];\n\n        // color as freeze head if it is hit simultaneously with a freeze arrow\n        if (this.note.includes(\"2\")) {\n          arrowImg = arrowImages.freeze_head;\n          frameX = DIRECTIONS.indexOf(direction) * ARROW_WIDTH;\n          frameY = 0;\n        } else {\n          if (this.noteskin === \"rainbow\") {\n            frameX = (Math.floor(beatTick * 4) % 8) * ARROW_WIDTH;\n\n            const beatD = this.measureD / 4;\n            const beatN = this.measureN % beatD;\n            if (beatN === 0) {\n              frameY = 0;\n            } else if (0 < beatN && beatN <= beatD / 4) {\n              frameY = 1;\n            } else if (beatD / 4 < beatN && beatN <= beatD / 2) {\n              frameY = 2;\n            } else if (beatD / 2 < beatN && beatN <= (3 * beatD) / 4) {\n              frameY = 3;\n            } else if ((3 * beatD) / 4 < beatN && beatN < beatD) {\n              frameY = 0;\n            }\n            frameY *= ARROW_HEIGHT;\n          } else if (this.noteskin === \"note\") {\n            frameX = (Math.floor(beatTick * 4) % 8) * ARROW_WIDTH;\n\n            /* \n              NOTE: In the future, if we want to support color codes for 12ths, 24ths, etc.\n              We need to use more precise math to avoid rounding errors.\n              Planned approach: Reduce the measure fraction by dividing both numerator and denominator\n              by their greatest common factor.\n              If GCF == 1, 2, or 4, use 4th note quantization.\n              Otherwise, the resulting denominator is used for the quantization (3 and 6 may be treated as 12ths)\n            */\n            const measureFraction = this.measureN / this.measureD;\n            if ([0, 1 / 4, 2 / 4, 3 / 4].includes(measureFraction)) {\n              frameY = 0;\n            } else if ([1 / 8, 3 / 8, 5 / 8, 7 / 8].includes(measureFraction)) {\n              frameY = 1;\n            } else if (\n              [\n                1 / 16,\n                3 / 16,\n                5 / 16,\n                7 / 16,\n                9 / 16,\n                11 / 16,\n                13 / 16,\n                15 / 16,\n              ].includes(measureFraction)\n            ) {\n              frameY = 3;\n            } else {\n              frameY = 2;\n            }\n            frameY *= ARROW_HEIGHT;\n          } else if (this.noteskin === \"vivid\") {\n            frameX = (Math.floor(beatTick * 4) % 4) * ARROW_WIDTH;\n\n            const beatD = this.measureD / 4;\n            const beatN = this.measureN % beatD;\n            const noteOffset = Math.floor(beatTick) % 4;\n\n            if (beatN === 0) {\n              frameY = 0;\n            } else if (0 < beatN && beatN <= beatD / 4) {\n              frameY = 1;\n            } else if (beatD / 4 < beatN && beatN <= beatD / 2) {\n              frameY = 2;\n            } else if (beatD / 2 < beatN && beatN <= (3 * beatD) / 4) {\n              frameY = 3;\n            } else if ((3 * beatD) / 4 < beatN && beatN < beatD) {\n              frameY = 0;\n            }\n            frameY = ((frameY + noteOffset) % 4) * ARROW_HEIGHT;\n          } else if (this.noteskin === \"flat\") {\n            arrowImg = arrowImages[`vivid_${direction}`];\n\n            frameX = (Math.floor(beatTick * 4) % 4) * ARROW_WIDTH;\n            frameY = (Math.floor(beatTick) % 4) * ARROW_HEIGHT;\n          }\n        }\n\n        destX = DIRECTIONS.indexOf(direction) * ARROW_WIDTH;\n        destY = this.currentBeatPosition(beatTick) * ARROW_HEIGHT * this.speed;\n\n        if (destY > topBoundary && destY < bottomBoundary) {\n          c.drawImage(\n            arrowImg,\n            frameX,\n            frameY,\n            ARROW_WIDTH,\n            ARROW_HEIGHT,\n            destX,\n            destY,\n            ARROW_WIDTH,\n            ARROW_HEIGHT\n          );\n        }\n        if (destY <= 0) {\n          if (this.hitFrame <= MARVELOUS_FLASH_FRAMES) {\n            // console.log(this.currentBeatPosition(beatTick));\n            c.save();\n            c.globalAlpha =\n              1 - Math.pow(this.hitFrame / MARVELOUS_FLASH_FRAMES, 3);\n            c.drawImage(\n              arrowImages.tap_explosion,\n              0,\n              0,\n              ARROW_WIDTH,\n              ARROW_HEIGHT,\n              destX - 2 - this.hitFrame,\n              0 - 2 - this.hitFrame,\n              ARROW_WIDTH + 4 + this.hitFrame * 2,\n              ARROW_HEIGHT + 4 + this.hitFrame * 2\n            );\n            c.restore();\n            this.hitFrame++;\n          }\n        } else {\n          this.hitFrame = 0;\n        }\n      }\n\n      // freeze note\n      else if (this.note[i] === \"2\") {\n        arrowImg = arrowImages.freeze_head;\n        frameX = DIRECTIONS.indexOf(direction) * ARROW_WIDTH;\n        frameY = 0;\n\n        destX = DIRECTIONS.indexOf(direction) * ARROW_WIDTH;\n        destY = this.currentBeatPosition(beatTick) * ARROW_HEIGHT * this.speed;\n\n        // draw freeze head\n        if (destY > topBoundary && destY < bottomBoundary) {\n          c.drawImage(\n            arrowImg,\n            frameX,\n            frameY,\n            ARROW_WIDTH,\n            ARROW_HEIGHT,\n            destX,\n            destY,\n            ARROW_WIDTH,\n            ARROW_HEIGHT\n          );\n        }\n\n        // target flash\n        if (destY <= 0) {\n          if (this.hitFrame <= MARVELOUS_FLASH_FRAMES) {\n            c.save();\n            c.globalAlpha =\n              1 - Math.pow(this.hitFrame / MARVELOUS_FLASH_FRAMES, 3);\n            c.drawImage(\n              arrowImages.tap_explosion,\n              0,\n              0,\n              ARROW_WIDTH,\n              ARROW_HEIGHT,\n              destX - this.hitFrame,\n              0 - this.hitFrame,\n              ARROW_WIDTH + this.hitFrame * 2,\n              ARROW_HEIGHT + this.hitFrame * 2\n            );\n            c.restore();\n            this.hitFrame++;\n          }\n        } else {\n          this.hitFrame = 0;\n        }\n      }\n\n      // freeze body and tail\n      else if (this.note[i] === \"3\") {\n        arrowImg = arrowImages[`freeze_tail_inactive_${direction}`];\n        frameX = 0;\n        frameY = 0;\n\n        destX = DIRECTIONS.indexOf(direction) * ARROW_WIDTH;\n        destY = this.currentBeatPosition(beatTick) * ARROW_HEIGHT * this.speed;\n\n        // Bottom of freeze body must be the bottom of the body image (yellow part of gradient)\n        // and line up with the top of the freeze tail.\n        // Extend the freeze body upwards using as many repetitions of the 128px height image as needed.\n        // Top of freeze body is cut off at the midpoint of the freeze head.\n        let arrowBodyImg = arrowImages[`freeze_body_inactive_${direction}`];\n        const totalBodyHeight =\n          this.holdBeats[i] * ARROW_HEIGHT * this.speed - ARROW_HEIGHT / 2;\n        const repetitions = Math.floor(totalBodyHeight / FREEZE_BODY_HEIGHT);\n        let partialHeight = totalBodyHeight % FREEZE_BODY_HEIGHT;\n        const originalPartialHeight = partialHeight;\n\n        let partialDestY = destY - (totalBodyHeight + ARROW_HEIGHT / 2);\n        let freezeBeingHeld = false;\n\n        // shrink in size once it reaches the target\n        // this is also where the freeze starts to be held down\n        if (partialDestY < 0) {\n          partialHeight += partialDestY;\n          partialDestY = 0;\n          arrowImg = arrowImages[`freeze_tail_active_${direction}`];\n          arrowBodyImg = arrowImages[`freeze_body_active_${direction}`];\n\n          if (destY > 0) {\n            freezeBeingHeld = true;\n          }\n        }\n\n        // draw partial\n        if (partialDestY > -partialHeight && partialDestY < bottomBoundary) {\n          c.drawImage(\n            arrowBodyImg,\n            0,\n            FREEZE_BODY_HEIGHT - partialHeight,\n            ARROW_WIDTH,\n            partialHeight,\n            destX,\n            partialDestY + ARROW_HEIGHT / 2,\n            ARROW_WIDTH,\n            partialHeight\n          );\n        }\n\n        // draw repetitions of freeze body\n        for (let i = 1; i <= repetitions; i++) {\n          let bodyHeight = FREEZE_BODY_HEIGHT;\n          let bodyFrameY = 0;\n          let bodyDestY =\n            destY -\n            (totalBodyHeight +\n              ARROW_HEIGHT / 2 -\n              originalPartialHeight -\n              FREEZE_BODY_HEIGHT * (i - 1));\n\n          if (bodyDestY < 0 && bodyDestY > -FREEZE_BODY_HEIGHT) {\n            bodyHeight += bodyDestY;\n            bodyFrameY -= bodyDestY;\n            bodyDestY = 0;\n          }\n\n          if (bodyDestY > -bodyHeight && bodyDestY < bottomBoundary) {\n            c.drawImage(\n              arrowBodyImg,\n              0,\n              bodyFrameY,\n              ARROW_WIDTH,\n              bodyHeight,\n              destX,\n              bodyDestY + ARROW_HEIGHT / 2,\n              ARROW_WIDTH,\n              bodyHeight\n            );\n          }\n        }\n\n        let tailHeight = ARROW_HEIGHT;\n\n        // if the freeze is shorter than the height of the tail sprite,\n        // cut off the top of the sprite such that it starts at the midpoint of the freeze head\n        if (this.holdBeats[i] * ARROW_HEIGHT * this.speed < ARROW_HEIGHT / 2) {\n          const tailPartialHeight =\n            this.holdBeats[i] * ARROW_HEIGHT * this.speed;\n          frameY += ARROW_HEIGHT / 2 - tailPartialHeight;\n          destY += ARROW_HEIGHT / 2 - tailPartialHeight;\n          tailHeight = ARROW_HEIGHT - tailPartialHeight;\n        }\n\n        // shrink in size once it reaches the target\n        if (destY < ARROW_HEIGHT / 2 && destY > topBoundary) {\n          frameY += ARROW_HEIGHT / 2 - destY;\n          destY = ARROW_HEIGHT / 2;\n        }\n\n        if (destY > topBoundary && destY < bottomBoundary) {\n          c.drawImage(\n            arrowImg,\n            frameX,\n            frameY,\n            ARROW_WIDTH,\n            tailHeight,\n            destX,\n            destY,\n            ARROW_WIDTH,\n            tailHeight\n          );\n        }\n\n        // render head of held freeze arrow on top of the arrow body\n        if (freezeBeingHeld) {\n          const arrowHeadImg = arrowImages.freeze_head;\n          if (this.hitFrame <= MARVELOUS_FLASH_FRAMES) {\n            c.drawImage(\n              arrowHeadImg,\n              DIRECTIONS.indexOf(direction) * ARROW_WIDTH,\n              ARROW_HEIGHT * 2,\n              ARROW_WIDTH,\n              ARROW_HEIGHT,\n              DIRECTIONS.indexOf(direction) * ARROW_WIDTH,\n              0,\n              ARROW_WIDTH,\n              ARROW_HEIGHT\n            );\n          }\n        }\n\n        // flash at the end of successfully held down freeze\n        if (destY <= 0) {\n          if (this.hitFrame <= MARVELOUS_FLASH_FRAMES) {\n            c.save();\n            c.globalAlpha =\n              1 - Math.pow(this.hitFrame / MARVELOUS_FLASH_FRAMES, 3);\n            c.drawImage(\n              arrowImages.tap_explosion,\n              0,\n              0,\n              ARROW_WIDTH,\n              ARROW_HEIGHT,\n              destX - this.hitFrame,\n              0 - this.hitFrame,\n              ARROW_WIDTH + this.hitFrame * 2,\n              ARROW_HEIGHT + this.hitFrame * 2\n            );\n            c.restore();\n            this.hitFrame++;\n          }\n        } else {\n          this.hitFrame = 0;\n        }\n      }\n\n      this.previousBeatPosition = this.currentBeatPosition(beatTick);\n    }\n  }\n}\n\nexport default Arrow;\n","import { DIRECTIONS, ARROW_WIDTH, ARROW_HEIGHT } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\n\nconst arrowImages = {};\nDIRECTIONS.forEach(direction => {\n  arrowImages[`shock_${direction}`] = new Image();\n  arrowImages[`shock_${direction}`].src = getAssetPath(\n    `shock_${direction}.png`\n  );\n});\n\nclass ShockArrow {\n  constructor(attrs) {\n    const { key, mods } = attrs;\n    const { speed, noteskin } = mods;\n\n    this.key = key;\n    this.speed = speed;\n    this.note = attrs.note;\n    this.noteskin = noteskin;\n\n    // this.currentBeatPosition = attrs.currentBeatPosition;\n    this.originalBeatPosition = attrs.originalBeatPosition;\n  }\n\n  currentBeatPosition(beatTick) {\n    return this.originalBeatPosition - beatTick;\n  }\n\n  render(canvas, frame, beatTick) {\n    const c = canvas.getContext(\"2d\");\n\n    const topBoundary = -ARROW_HEIGHT; // used to simulate the arrows being hit and disappearing\n    const bottomBoundary = canvas.height;\n    frame = Math.floor(frame / 3) % 8; // each sprite frame lasts 3 canvas animation frames\n\n    for (let i = 0; i < this.note.length; i++) {\n      const direction = DIRECTIONS[i];\n      const arrowImg = arrowImages[`shock_${direction}`];\n      const frameX = (frame % 4) * ARROW_WIDTH;\n      const frameY = Math.floor(frame / 4) * ARROW_HEIGHT;\n      const destX = DIRECTIONS.indexOf(direction) * ARROW_WIDTH;\n      const destY =\n        this.currentBeatPosition(beatTick) * ARROW_HEIGHT * this.speed;\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          frameY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT,\n          destX,\n          destY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT\n        );\n      }\n    }\n  }\n}\n\nexport default ShockArrow;\n","import { DIRECTIONS, ARROW_HEIGHT, ARROW_WIDTH } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\n\nconst flashImages = {};\nDIRECTIONS.forEach(direction => {\n  flashImages[direction] = new Image();\n  flashImages[direction].src = getAssetPath(`${direction}_tap_flash.png`);\n  flashImages[direction] = new Image();\n  flashImages[direction].src = getAssetPath(`${direction}_tap_flash.png`);\n});\n\nconst receptorImages = {};\nDIRECTIONS.forEach(direction => {\n  receptorImages[direction] = new Image();\n  receptorImages[direction].src = getAssetPath(`${direction}_tap_receptor.png`);\n  receptorImages[direction] = new Image();\n  receptorImages[direction].src = getAssetPath(`${direction}_tap_receptor.png`);\n});\n\nclass StepZone {\n  render(canvas, beatTick) {\n    const c = canvas.getContext(\"2d\");\n    // flash starts at the beginning of the quarter beat and lasts for 1/16 beat\n\n    const isFlash = beatTick % 1 > 0 && beatTick % 1 < 0.25;\n\n    DIRECTIONS.forEach((direction, i) => {\n      c.drawImage(\n        isFlash ? flashImages[direction] : receptorImages[direction],\n        0,\n        0,\n        ARROW_WIDTH,\n        ARROW_HEIGHT,\n        i * ARROW_WIDTH,\n        0,\n        ARROW_WIDTH,\n        ARROW_HEIGHT\n      );\n    });\n  }\n}\n\nexport default StepZone;\n","import { ARROW_HEIGHT } from \"../../../constants\";\n\nclass Guidelines {\n  constructor(attrs) {\n    const { mods } = attrs;\n    const { speed } = mods;\n\n    this.speed = speed;\n    this.finalBeat = attrs.finalBeat;\n  }\n\n  render(canvas, beatTick) {\n    const c = canvas.getContext(\"2d\");\n\n    const topBoundary = 0;\n    const bottomBoundary = canvas.height;\n\n    for (let beat = 0; beat <= this.finalBeat; beat++) {\n      const destY =\n        (beat - beatTick) * ARROW_HEIGHT * this.speed + ARROW_HEIGHT / 2;\n\n      // Render a thick line if the beat falls on the beginning of the measure.\n      // Render a thin line otherwise\n      const lineWidth = beat % 4 === 0 ? 2 : 0.8;\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.beginPath();\n        c.moveTo(0, destY);\n        c.lineTo(canvas.width, destY);\n        c.lineWidth = lineWidth;\n        c.strokeStyle = \"#fff\";\n        c.stroke();\n      }\n    }\n  }\n}\n\nexport default Guidelines;\n","const modeRegex = /dance-([a-z]+)/;\nconst difficultyRegex = /(Beginner|Easy|Medium|Hard|Challenge|Edit)/;\n\nconst difficultyMap = {\n  Beginner: \"Beginner\",\n  Easy: \"Basic\",\n  Medium: \"Difficult\",\n  Hard: \"Expert\",\n  Challenge: \"Challenge\",\n};\n\nconst parseSimfile = sm => {\n  const simfiles = {};\n\n  let bpms = \"\";\n  if (/#BPMS:/i.test(sm)) {\n    bpms = /#BPMS:([\\s\\S]*?)\\s*;/i.exec(sm)[1];\n    if (bpms.length) {\n      bpms = bpms.split(\",\").map(point => {\n        const [beat, value] = point.split(\"=\");\n        return { beat: parseFloat(beat), value: parseFloat(value) };\n      });\n    } else {\n      bpms = [];\n    }\n  }\n\n  let stops = \"\";\n  if (/#STOPS:/i.test(sm)) {\n    stops = /#STOPS:([\\s\\S]*?)\\s*;/i.exec(sm)[1];\n    if (stops.length) {\n      stops = stops.split(\",\").map(point => {\n        const [beat, value] = point.split(\"=\");\n        return { beat: parseFloat(beat), value: parseFloat(value) };\n      });\n    } else {\n      stops = [];\n    }\n  }\n\n  const chartStrs = sm\n    .slice(sm.indexOf(\"#NOTES:\"))\n    .split(/#NOTES:\\s+/)\n    .slice(1);\n\n  chartStrs.forEach(chartStr => {\n    const mode = modeRegex.exec(chartStr)[1]; // single or double\n\n    let smDifficulty = difficultyRegex.exec(chartStr)[1];\n    const difficulty = difficultyMap[smDifficulty];\n\n    simfiles[`${mode}_${difficulty}`] = { difficulty, mode, bpms, stops };\n    const simfile = simfiles[`${mode}_${difficulty}`];\n\n    const levelRegex = new RegExp(`${smDifficulty}:\\\\s+([0-9]+):`);\n    const level = parseInt(levelRegex.exec(chartStr)[1]);\n    simfile.level = level;\n\n    const measures = chartStr\n      .slice(chartStr.lastIndexOf(\":\") + 1, chartStr.lastIndexOf(\";\"))\n      .trim()\n      .split(\",\")\n      .map((measure, measureIdx) => {\n        const ticks = measure\n          .trim()\n          .split(\"\\r\\n\")\n          .filter(n => !n.startsWith(\"//\")); // filter out comment lines\n\n        const numTicks = ticks.length;\n\n        const noteObjects = [];\n        ticks.forEach((tick, tickIdx) => {\n          // skip empty ticks and comment lines\n          if (!tick.split(\"\").filter(n => n !== \"0\").length) return;\n\n          const noteObj = {};\n          noteObj.note = tick;\n          noteObj.measureIdx = measureIdx; // index of the measure relative to the whole song (starting at 0)\n          noteObj.measureN = tickIdx; // numerator of the fraction describing where note falls in this measure\n          noteObj.measureD = numTicks; // denominator of the fraction describing where note falls in this measure\n\n          noteObjects.push(noteObj);\n        });\n\n        return noteObjects;\n      });\n    simfile.chart = measures;\n  });\n\n  return simfiles;\n};\n\nexport default parseSimfile;\n","export const applyTurnMods = (chart, mods) => {\n  const { turn, shuffle } = mods;\n\n  // shuffle patterns courtesy of https://zenius-i-vanisher.com/v5.2/viewthread.php?threadid=3823\n  const turnMap = {\n    off: \"LDUR\",\n    mirror: \"RUDL\",\n    left: \"ULRD\",\n    right: \"DRLU\",\n    shuffle1: \"LRDU\",\n    shuffle2: \"UDRL\",\n    shuffle3: \"LRUD\",\n    shuffle4: \"DURL\",\n    shuffle5: \"DLUR\",\n    shuffle6: \"DULR\",\n    shuffle7: \"RLUD\",\n    shuffle8: \"RULD\",\n  };\n\n  let turnMod = turn;\n  if (turn === \"shuffle\") turnMod += shuffle;\n\n  return chart.map(row => {\n    const note = row.note;\n    const turnedNote = turnMap[turnMod]\n      .split(\"\")\n      .map(direction => note[turnMap.off.indexOf(direction)]);\n\n    return { ...row, note: turnedNote };\n  });\n};\n","export const PLAY_CHART_AUDIO = \"PLAY_CHART_AUDIO\";\nexport const PAUSE_CHART_AUDIO = \"PAUSE_CHART_AUDIO\";\nexport const STOP_CHART_AUDIO = \"STOP_CHART_AUDIO\";\n\nexport const PLAY_PREVIEW_AUDIO = \"PLAY_PREVIEW_AUDIO\";\nexport const STOP_PREVIEW_AUDIO = \"STOP_PREVIEW_AUDIO\";\n\nexport const SET_CHART_PROGRESS = \"SET_CHART_PROGRESS\";\n\nexport const playChartAudio = () => (dispatch) => {\n  dispatch({\n    type: PLAY_CHART_AUDIO,\n  });\n};\n\nexport const pauseChartAudio = () => (dispatch) => {\n  dispatch({\n    type: PAUSE_CHART_AUDIO,\n  });\n};\n\nexport const stopChartAudio = () => (dispatch) => {\n  dispatch({\n    type: STOP_CHART_AUDIO,\n  });\n};\n\nexport const playPreviewAudio = () => (dispatch) => {\n  dispatch({\n    type: PLAY_PREVIEW_AUDIO,\n  });\n};\nexport const stopPreviewAudio = () => (dispatch) => {\n  dispatch({\n    type: STOP_PREVIEW_AUDIO,\n  });\n};\n\nexport const setChartProgress = (progress) => (dispatch) => {\n  dispatch({\n    type: SET_CHART_PROGRESS,\n    payload: progress,\n  });\n};\n","import * as actions from \"../actions/AudioActions\";\n\nconst initialState = {\n  chartAudio: {\n    status: \"stopped\",\n    progress: 0,\n  },\n  previewAudio: {\n    status: \"stopped\",\n  },\n};\n\nexport const audio = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.PLAY_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"playing\" };\n      return { ...state, chartAudio };\n    }\n    case actions.PAUSE_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"paused\" };\n      return { ...state, chartAudio };\n    }\n    case actions.STOP_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"stopped\" };\n      return { ...state, chartAudio };\n    }\n    case actions.PLAY_PREVIEW_AUDIO: {\n      const previewAudio = { ...state.previewAudio, status: \"playing\" };\n      return { ...state, previewAudio };\n    }\n    case actions.STOP_PREVIEW_AUDIO: {\n      const previewAudio = { ...state.previewAudio, status: \"stopped\" };\n      return { ...state, previewAudio };\n    }\n    case actions.SET_CHART_PROGRESS: {\n      const chartAudio = { ...state.chartAudio, progress: action.payload };\n      return { ...state, chartAudio };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport { audio } from \"./AudioReducer\";\n\nexport default combineReducers({ audio });\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nexport default store;\n","import { Howl } from \"howler\";\nimport { gsap } from \"gsap\";\n\nimport store from \"../store\";\nimport * as actions from \"../actions/AudioActions\";\n\nclass AudioPlayer {\n  constructor() {\n    /*\n      Trying to share the same audio source for both song and preview was causing too many\n      issues. Sticking to keeping separate Howl objects for each even if means loading\n      duplicate copies of the same mp3\n    */\n    this.sources = {\n      song: {},\n      preview: {},\n    }; // map of song hash to associated Howl object\n    this.currentSong = null; // hash of current song\n    this.currentPreview = null; // hash of current preview\n\n    this.currentSongId = null; // Howler soundID of current song\n    this.currentPreviewId = null; // Howler soundId of current preview\n\n    // this.updateTimeline = this.updateTimeline.bind(this);\n\n    this.activeView = null; // gets updated whenever active view changes in React\n\n    this.previewFadeTimeout = null; // reference to preview fade setTimeout so it can be cleared\n\n    this.updateTimeline = this.updateTimeline.bind(this);\n    this.updateProgress = this.updateProgress.bind(this);\n    this.audioResyncFrames = 0;\n  }\n\n  getCurrentSong() {\n    return this.sources.song[this.currentSong];\n  }\n  getCurrentPreview() {\n    return this.sources.preview[this.currentPreview];\n  }\n\n  // when loading a song file for the first time, save it as two separate Howls:\n  // one for the full song and one for the preview sample\n  storeAudioSource(song) {\n    if (!this.sources.song[song.hash]) {\n      this.setLoadingAudio(true);\n\n      this.sources.song[song.hash] = { title: song.title };\n      this.sources.song[song.hash].audio = new Howl({\n        src: `https://dl.dropboxusercontent.com/s/${song.dAudioUrl}`,\n        format: [\"mp3\"],\n        html5: true,\n        onload: () => {\n          // console.log(`AudioPlayer song loaded: ${song.title}`);\n          this.setLoadingAudio(false);\n        },\n        onloaderror: (id, error, blah) => {\n          alert(`${id};;; ${error};;; ${blah}`);\n        },\n        onplay: () => {\n          this.getCurrentSong().tl.play();\n\n          this.resync();\n          gsap.ticker.add(this.updateProgress);\n          store.dispatch(actions.playChartAudio());\n        },\n        onpause: () => {\n          this.getCurrentSong().tl.pause();\n          gsap.ticker.remove(this.updateTimeline);\n          gsap.ticker.remove(this.updateProgress);\n          store.dispatch(actions.pauseChartAudio());\n        },\n        onseek: () => {},\n        onstop: () => {\n          console.log(\"song stopped\");\n          if (this.getCurrentSong().tl) {\n            this.getCurrentSong().tl.restart().pause();\n          }\n          gsap.ticker.remove(this.updateTimeline);\n          store.dispatch(actions.stopChartAudio());\n        },\n        onend: (spriteId) => {\n          console.log(\"song ended\");\n          gsap.ticker.remove(this.updateTimeline);\n          store.dispatch(actions.stopChartAudio());\n        },\n      });\n\n      this.sources.preview[song.hash] = { title: song.title };\n      this.sources.preview[song.hash].audio = new Howl({\n        src: `https://dl.dropboxusercontent.com/s/${song.dAudioUrl}`,\n        format: [\"mp3\"],\n        html5: true,\n        sprite: {\n          sample: [\n            parseFloat((song.sampleStart - 0.12) * 1000),\n            parseFloat(song.sampleLength * 1000),\n          ],\n        },\n        onplay: () => {\n          store.dispatch(actions.playPreviewAudio());\n        },\n        onstop: () => {\n          clearTimeout(this.previewFadeTimeout);\n          this.currentPreviewId = null;\n          store.dispatch(actions.stopPreviewAudio());\n        },\n        onend: () => {\n          clearTimeout(this.previewFadeTimeout);\n          this.currentPreviewId = null;\n          store.dispatch(actions.stopPreviewAudio());\n        },\n      });\n\n      // console.log(`Added ${song.title} to AudioPlayer.sources`, this.sources);\n    }\n  }\n\n  selectSong(song) {\n    if (this.currentSong) {\n      this.getCurrentSong().audio.stop(this.currentSongId);\n    }\n\n    this.storeAudioSource(song);\n    this.currentSong = song.hash;\n  }\n\n  setTimeline(tl) {\n    this.getCurrentSong().tl = tl;\n  }\n\n  resync() {\n    // arbitrary number of frames chosen to tell timeline to resync with the audio\n    // because audio playback takes a while to restabilize\n    this.audioResyncFrames = 10;\n    gsap.ticker.add(this.updateTimeline);\n  }\n\n  // when audio is played, resync timeline with audio a few times until audio playback\n  // stabilizes, then remove this method from the ticker\n  updateTimeline() {\n    const self = this;\n    this.getCurrentSong().tl.time(self.getCurrentTime() + 0.07);\n\n    this.audioResyncFrames--;\n    if (this.audioResyncFrames <= 0) {\n      gsap.ticker.remove(this.updateTimeline);\n    }\n  }\n\n  updateProgress(time, deltaTime, frame) {\n    if (frame % 15 === 0) {\n      const audio = this.getCurrentSong().audio;\n      const progress = audio.seek() / audio.duration();\n      store.dispatch(actions.setChartProgress(progress));\n    }\n  }\n\n  play() {\n    this.currentSongId = this.getCurrentSong().audio.play();\n  }\n\n  pause() {\n    this.getCurrentSong().audio.pause(this.currentSongId);\n  }\n\n  stop() {\n    this.getCurrentSong().audio.stop(this.currentSongId);\n    this.currentSongId = null;\n  }\n\n  getCurrentTime() {\n    return this.getCurrentSong().audio.seek();\n  }\n\n  goBack(ms) {\n    const self = this;\n    this.seekTime(self.getCurrentTime() - ms * 0.001);\n    this.getCurrentSong().tl.time(self.getCurrentTime() + 0.07);\n  }\n  goForward(ms) {\n    const self = this;\n    this.seekTime(self.getCurrentTime() + ms * 0.001);\n    this.getCurrentSong().tl.time(self.getCurrentTime() + 0.07);\n  }\n\n  seekTime(timestamp) {\n    this.getCurrentSong().audio.seek(timestamp);\n    this.resync();\n  }\n\n  seekProgress(value) {\n    const self = this;\n    this.seekTime(value * this.getCurrentSong().audio.duration());\n    store.dispatch(actions.setChartProgress(value));\n  }\n\n  isPlaying() {\n    return (\n      this.getCurrentSong() &&\n      this.getCurrentSong().audio.playing(this.currentSongId)\n    );\n  }\n  isPaused() {\n    return (\n      this.getCurrentSong() &&\n      !this.getCurrentSong().audio.playing(this.currentSongId)\n    );\n  }\n\n  playSongPreview(song) {\n    if (this.currentPreview) {\n      this.getCurrentPreview().audio.stop(this.currentPreviewId);\n    }\n\n    this.storeAudioSource(song);\n    this.currentPreview = song.hash;\n\n    const preview = this.getCurrentPreview().audio;\n\n    this.currentPreviewId = preview.play(\"sample\");\n\n    preview.on(\"play\", () => {\n      const preview = this.getCurrentPreview().audio;\n\n      const fadeinTime = 200;\n      const fadeoutTime = 2000;\n      preview.fade(0, 1, fadeinTime);\n\n      this.previewFadeTimeout = setTimeout(() => {\n        preview.fade(1, 0, fadeoutTime);\n      }, song.sampleLength * 1000 - fadeoutTime);\n    });\n  }\n\n  stopSongPreview() {\n    if (!this.currentPreview) return;\n    const preview = this.getCurrentPreview().audio;\n\n    preview.stop(this.currentPreviewId);\n\n    // clearTimeout(this.previewFadeTimeout);\n  }\n\n  isPreviewPlaying() {\n    return (\n      this.getCurrentPreview() &&\n      this.getCurrentPreview().audio.playing(this.currentPreviewId)\n    );\n  }\n}\n\nexport default new AudioPlayer();\n","import { gsap } from \"gsap\";\n\nimport Arrow from \"../components/chart/canvas/Arrow\";\nimport ShockArrow from \"../components/chart/canvas/ShockArrow\";\nimport StepZone from \"../components/chart/canvas/StepZone\";\nimport Guidelines from \"../components/chart/canvas/Guidelines\";\nimport parseSimfile from \"../utils/parseSimfile\";\nimport { applyTurnMods } from \"../utils/engineUtils\";\nimport { GLOBAL_OFFSET, END_EXTRA_BEATS } from \"../constants\";\nimport AudioPlayer from \"./AudioPlayer\";\n\nclass GameEngine {\n  constructor(canvas, sm) {\n    this.canvas = canvas;\n    this.c = canvas.getContext(\"2d\");\n    this.tl = gsap.timeline();\n    this.sm = sm;\n    this.simfiles = {};\n\n    this.eventList = [];\n    this.arrows = [];\n    this.shockArrows = [];\n\n    this.drawBackground();\n\n    this.globalParams = {\n      /*\n        Use this parameter to keep track of which beat the chart is on at any given point.\n        Animate this one property in the timeline, then reference its value to calculate frames\n        for step zone and arrow animations without having to create separate tweens for them.\n      */\n      beatTick: 0,\n\n      /*\n        Use this parameter for animations based on absolute frame and not a function of the beat.\n      */\n      frame: 0,\n    };\n\n    // init logic\n    if (this.sm) {\n      this.simfiles = parseSimfile(this.sm);\n    }\n\n    this.mainLoop();\n  }\n\n  // bpm changes and stops converted to timestamps\n  generateEventList(simfile) {\n    const { bpms, stops } = simfile;\n    const eventList = [];\n    let bpmPtr = 0,\n      stopPtr = 0;\n    let currentBpm = bpms[0].value;\n\n    // console.log(\"generateEventList bpms\", bpms);\n    // console.log(\"generateEventList stops\", stops);\n\n    while (bpmPtr < bpms.length && stopPtr < stops.length) {\n      const bpm = bpms[bpmPtr];\n      const stop = stops[stopPtr];\n      // add stop event, keeping track of the bpm at this point\n      if (stop.beat <= bpm.beat) {\n        eventList.push({ ...stop, bpm: currentBpm, type: \"stop\" });\n        stopPtr++;\n      }\n      // add bpm event, replacing the currently tracked bpm\n      else {\n        eventList.push({ ...bpm, type: \"bpm\" });\n        currentBpm = bpm.value;\n        bpmPtr++;\n      }\n    }\n    while (bpmPtr < bpms.length) {\n      eventList.push({ ...bpms[bpmPtr], type: \"bpm\" });\n      bpmPtr++;\n    }\n    while (stopPtr < stops.length) {\n      eventList.push({ ...stops[stopPtr], bpm: currentBpm, type: \"stop\" });\n      stopPtr++;\n    }\n\n    eventList[0].timestamp = 0;\n\n    for (let i = 1; i < eventList.length; i++) {\n      const prevEvent = eventList[i - 1];\n      const currentEvent = eventList[i];\n      const prevTimestamp = eventList[i - 1].timestamp;\n\n      // Find the number of beats elapsed between the current and previous event,\n      // then convert this into seconds using the bpm at the previous event.\n      // If the previous event was a stop, add the length of the stop.\n      // The timestamp of the current event is this number of seconds after the\n      // timestamp of the previous event.\n      const beatDiff = currentEvent.beat - prevEvent.beat;\n      const prevBpm =\n        prevEvent.type === \"bpm\" ? prevEvent.value : prevEvent.bpm;\n      let timestampDiff = (beatDiff / prevBpm) * 60;\n      if (prevEvent.type === \"stop\") timestampDiff += prevEvent.value;\n      const currentTimestamp = prevTimestamp + timestampDiff;\n\n      currentEvent.timestamp = currentTimestamp;\n    }\n    this.eventList = eventList;\n    return eventList;\n  }\n\n  generateArrows(simfile, mods) {\n    let { chart } = simfile;\n\n    if (Array.isArray(chart[0])) {\n      const newChart = [];\n      chart.forEach((measure) => {\n        newChart.push(...measure);\n      });\n      chart = newChart;\n    }\n\n    chart = applyTurnMods(chart, mods);\n\n    chart.forEach((note, key) => {\n      // calculate starting position currentBeatPosition\n      const { measureIdx, measureN, measureD } = note;\n      note.currentBeatPosition = (measureIdx + measureN / measureD) * 4;\n\n      // save its original position for later reference\n      note.originalBeatPosition = note.currentBeatPosition;\n\n      // If the note is the tail of a freeze arrow, calculate the number of beats\n      // from the head of the freeze arrow\n      for (let i = 0; i < note.note.length; i++) {\n        if (note.note[i] !== \"3\") continue;\n\n        // Find the most recent freeze head on the same direction as the tail\n        // and retroactively fill in the length of the hold in beats\n        for (let j = key - 1; j >= 0; j--) {\n          if (chart[j].note[i] === \"2\") {\n            if (!chart[j].holdBeats) chart[j].holdBeats = [];\n            if (!note.holdBeats) note.holdBeats = [];\n            chart[j].holdBeats[i] =\n              note.currentBeatPosition - chart[j].currentBeatPosition;\n            note.holdBeats[i] =\n              note.currentBeatPosition - chart[j].currentBeatPosition;\n            break;\n          }\n        }\n      }\n    });\n\n    chart.forEach((note, key) => {\n      if (note.note[0] === \"M\" || note.note[4] === \"M\") {\n        const shockArrow = new ShockArrow({ key, ...note, mods });\n        this.shockArrows.push(shockArrow);\n      } else {\n        const arrow = new Arrow({ key, ...note, mods });\n        this.arrows.push(arrow);\n      }\n    });\n\n    this.stepZone = new StepZone();\n\n    // console.log(\"this.arrows\", this.arrows);\n\n    // console.log(\"this.shockArrows\", this.shockArrows);\n\n    // console.log(`chart for ${simfile.difficulty}`, chart);\n  }\n\n  // Calculate the gsap tweens before playing the chart\n  initTimeline(mods) {\n    // console.log(\"this.eventList\", this.eventList);\n\n    this.resetArrows();\n\n    /*\n      The space in between each event (i.e. a bpm change or stop) denotes a continous section of constant bpm.\n      Create a tween to animate the global beat tick for each of these sections and chain them together.\n      The position and/or frame animation of each canvas object (e.g. arrows, step zone, guidelines) can be\n      determined as a function of the beat tick value at any given point.\n    */\n    let bpm;\n\n    let accumulatedBeatTick = 0;\n\n    // Designate the \"end\" of the chart as an arbitrary number of beats (8?) after either the last arrow\n    // or the last event in the chart, whichever comes later\n    const lastArrow = this.arrows[this.arrows.length - 1];\n    const lastEvent = this.eventList[this.eventList.length - 1];\n\n    let finalBeat = 0;\n    if (lastArrow && lastEvent) {\n      finalBeat = Math.max(lastArrow.originalBeatPosition, lastEvent.beat);\n    } else if (lastArrow) {\n      finalBeat = lastArrow.originalBeatPosition;\n    } else if (lastEvent) {\n      finalBeat = lastEvent.beat;\n    }\n    finalBeat += END_EXTRA_BEATS;\n\n    // hack to implement global offset of -12 ms\n    this.tl = this.tl.to({}, { duration: 0 }, GLOBAL_OFFSET);\n\n    for (let i = 0; i < this.eventList.length; i++) {\n      let startEvent = this.eventList[i],\n        endEvent = this.eventList[i + 1];\n\n      // delay the animations by the length of the stop, if applicable\n      let delay = startEvent.type === \"stop\" ? startEvent.value : 0;\n\n      // the bpm of this section\n      if (startEvent.type === \"bpm\") bpm = startEvent.value;\n      else if (startEvent.type === \"stop\") bpm = startEvent.bpm;\n\n      // if there is a bpm change or stop event somewhere ahead of this one\n      if (endEvent) {\n        // number of beats between startEvent and endEvent, i.e. how long this constant bpm section is\n        const sectionBeatLength = endEvent.beat - startEvent.beat;\n\n        // the duration of this constant bpm section in seconds\n        const sectionDuration = (sectionBeatLength / bpm) * 60;\n\n        this.tl = this.tl.to(\n          this.globalParams,\n          {\n            beatTick: accumulatedBeatTick + sectionBeatLength,\n            duration: sectionDuration,\n            ease: \"none\",\n          },\n          `+=${delay}`\n        );\n        accumulatedBeatTick += sectionBeatLength;\n      }\n      // if this is the last bpm change/stop event, animate remaining objects to end\n      else {\n        this.tl = this.tl.to(\n          this.globalParams,\n          {\n            beatTick: finalBeat,\n            duration: ((finalBeat - accumulatedBeatTick) / bpm) * 60,\n            ease: \"none\",\n          },\n          `+=${delay}`\n        );\n      }\n    }\n\n    this.guidelines = new Guidelines({ mods, finalBeat });\n    AudioPlayer.setTimeline(this.tl);\n  }\n\n  resetArrows() {\n    this.arrows.forEach((arrow) => arrow.reset());\n  }\n\n  mainLoop() {\n    // if (this.tl.paused()) return;\n    // console.log(\"mainLoop running\");\n    this.drawBackground();\n\n    if (this.stepZone) {\n      this.stepZone.render(this.canvas, this.globalParams.beatTick);\n    }\n    if (this.guidelines) {\n      this.guidelines.render(this.canvas, this.globalParams.beatTick);\n    }\n\n    for (let i = this.shockArrows.length - 1; i >= 0; i--) {\n      const shockArrow = this.shockArrows[i];\n      shockArrow.render(\n        this.canvas,\n        this.globalParams.frame,\n        this.globalParams.beatTick\n      );\n    }\n\n    // render arrows in the opposite order so the earlier arrows are layered over the later ones\n    for (let i = this.arrows.length - 1; i >= 0; i--) {\n      const arrow = this.arrows[i];\n      arrow.render(this.canvas, this.globalParams.beatTick);\n    }\n\n    // if (this.globalParams.beatTick) {\n    //   console.log(this.globalParams.beatTick);\n    // }\n    this.globalParams.frame++;\n    window.requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  drawBackground() {\n    this.c.fillStyle = \"black\";\n    this.c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  toggleTl() {\n    if (this.tl.paused()) {\n      console.log(\"tl.play()\");\n      this.tl.play();\n    } else {\n      console.log(\"tl.pause()\");\n      this.tl.pause();\n    }\n  }\n  restartTl() {\n    // console.log(\"call restart\");\n    this.tl.restart().pause();\n    this.resetArrows();\n  }\n  pauseTl() {\n    this.tl.pause();\n  }\n}\n\nexport default GameEngine;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport AudioPlayer from \"../../core/AudioPlayer\";\n\nconst Progress = (props) => {\n  const progressBar = useRef();\n  // const [progress, setProgress] = useState(0);\n\n  const { progress } = props;\n\n  useEffect(() => {\n    progressBar.current.addEventListener(\"touchstart\", (e) => {\n      jumpToProgress(e.touches[0]);\n    });\n\n    progressBar.current.addEventListener(\"touchmove\", (e) => {\n      jumpToProgress(e.touches[0]);\n    });\n\n    progressBar.current.addEventListener(\"touchend\", (e) => {\n      // jumpToProgress(e.touches[0]);\n    });\n\n    // AudioPlayer.setStateProgress = setProgress;\n  }, []);\n\n  const jumpToProgress = (event) => {\n    const totalWidth = progressBar.current.offsetWidth;\n    const x = event.clientX - progressBar.current.offsetLeft;\n    const progressPercent = x / totalWidth;\n\n    if (progressPercent < 0 || progressPercent > 1) return;\n\n    // setProgress(progressPercent);\n    AudioPlayer.seekProgress(progressPercent);\n  };\n\n  return (\n    <div id=\"progress-bar\" ref={progressBar}>\n      <div\n        className=\"progress-value\"\n        style={{ width: `${progress * 100}%` }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Progress;\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport Hammer from \"hammerjs\";\nimport \"inobounce\";\n\nimport \"./ChartArea.scss\";\n\nimport GameEngine from \"../../core/GameEngine\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport Progress from \"./Progress\";\nimport { audio } from \"../../reducers/AudioReducer\";\n\nconst ChartArea = (props) => {\n  const {\n    selectedDifficulty,\n    selectedSong,\n    sm,\n    mods,\n    selectedAudio,\n    loadingAudio,\n    gameEngine,\n    setGameEngine,\n  } = props;\n\n  const [canvas, setCanvas] = useState(null);\n  const [playing, setPlaying] = useState(false);\n\n  // define canvas on mount\n  useEffect(() => {\n    if (!loadingAudio) {\n      const chartArea = document.querySelector(\"#chartArea\");\n      setCanvas(chartArea);\n\n      const mc = new Hammer(chartArea);\n\n      mc.on(\"panup\", (e) => {\n        AudioPlayer.goForward(20);\n      });\n      mc.on(\"pandown\", (e) => {\n        AudioPlayer.goBack(20);\n      });\n    }\n  }, [loadingAudio]);\n\n  useEffect(() => {\n    if (!canvas) return;\n\n    let ge = new GameEngine(canvas, sm);\n\n    if (!selectedDifficulty) return;\n\n    const simfile = ge.simfiles[`single_${selectedDifficulty}`];\n\n    if (simfile) {\n      ge.generateEventList(simfile);\n      ge.generateArrows(simfile, mods);\n      ge.initTimeline(mods);\n      ge.restartTl();\n    }\n    setGameEngine(ge);\n  }, [canvas, sm, selectedDifficulty, mods]);\n\n  const togglePlay = () => {\n    if (!gameEngine) return;\n    // gameEngine.toggleTl();\n\n    if (AudioPlayer.isPlaying()) {\n      AudioPlayer.pause();\n      setPlaying(false);\n    } else {\n      AudioPlayer.play();\n      setPlaying(true);\n    }\n  };\n  const restart = () => {\n    if (!gameEngine) return;\n    // gameEngine.restartTl();\n\n    AudioPlayer.stop();\n    setPlaying(false);\n  };\n\n  const isPlayDisabled = () => {\n    if (!gameEngine || loadingAudio) return true;\n    return false;\n  };\n\n  return (\n    <div className=\"canvas-container\">\n      {loadingAudio && <div>Loading audio...</div>}\n      {!loadingAudio && (\n        <>\n          <canvas id=\"chartArea\" width=\"256\" height=\"512\" />\n          <div className=\"progress-container\">\n            <Progress progress={props.audio.progress} />\n          </div>\n        </>\n      )}\n      {/* <canvas id=\"chartArea\" width=\"256\" height=\"18000\" /> */}\n      <div className=\"play-controls\">\n        <Button onClick={togglePlay} disabled={isPlayDisabled()}>\n          {props.audio.status === \"playing\" ? \"Pause\" : \"Play\"}\n        </Button>\n        <Button onClick={restart}>Restart</Button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio } = state;\n  return {\n    audio: audio.chartAudio,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartArea);\n","import React from \"react\";\n\nimport AudioPlayer from \"../../core/AudioPlayer\";\n\nconst SongGrid = (props) => {\n  const { displayedSongs, onSongSelect, selectedSongOption } = props;\n\n  // let songs = displayedSongs.slice(200, 300);\n  let songs = displayedSongs;\n\n  // console.log(\"songs\", songs);\n\n  const selectSong = (song) => {\n    onSongSelect(null, { value: song.hash });\n    // console.log(\"select song\", song);\n  };\n\n  const renderSong = (song) => {\n    return (\n      <div\n        className=\"songTile-wrapper\"\n        key={`songtile_${song.hash}`}\n        onClick={() => selectSong(song)}\n      >\n        <div\n          className={`songTile ${\n            selectedSongOption === song.hash ? \"selected\" : \"\"\n          }`}\n        >\n          <div className=\"song-jacket-wrapper\">\n            <img\n              className=\"song-jacket\"\n              src={`/jackets/${song.hash}.png`}\n              title={song.title}\n              alt={song.title}\n            />\n          </div>\n          <div className=\"song-title-bar\">{song.title}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"songGrid-container\">\n      <div className=\"songGrid\">\n        {songs.map((song) => {\n          return renderSong(song);\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SongGrid;\n","export const options = {\n  difficulty: [\"Beginner\", \"Basic\", \"Difficult\", \"Expert\", \"Challenge\"],\n  mods: {\n    speed: [\n      0.25,\n      0.5,\n      0.75,\n      1,\n      1.25,\n      1.5,\n      1.75,\n      2,\n      2.25,\n      2.5,\n      2.75,\n      3,\n      3.25,\n      3.5,\n      3.75,\n      4,\n      4.5,\n      5,\n      5.5,\n      6,\n      6.5,\n      7,\n      7.5,\n      8,\n    ],\n    turn: [\"off\", \"mirror\", \"left\", \"right\", \"shuffle\"],\n    shuffle: [1, 2, 3, 4, 5, 6, 7, 8],\n    noteskin: [\"rainbow\", \"note\", \"vivid\", \"flat\"],\n  },\n};\n\nexport const optionDefaultValues = {\n  difficulty: \"Expert\",\n  mods: {\n    speed: 2.5,\n    turn: \"off\",\n    shuffle: 1,\n    noteskin: \"note\",\n  },\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_1\",\n  \"data-name\": \"Line 1\",\n  d: \"M0.91,15L0.78,15A1,1,0,0,0,0,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H0.91Z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_2\",\n  \"data-name\": \"Line 2\",\n  d: \"M6.91,9L6.78,9A1,1,0,0,0,6,10V28a1,1,0,1,0,2,0s0,0,0,0V10A1,1,0,0,0,7,9H6.91Z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_3\",\n  \"data-name\": \"Line 3\",\n  d: \"M12.91,0L12.78,0A1,1,0,0,0,12,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H12.91Z\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_4\",\n  \"data-name\": \"Line 4\",\n  d: \"M18.91,10l-0.12,0A1,1,0,0,0,18,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H18.91Z\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_5\",\n  \"data-name\": \"Line 5\",\n  d: \"M24.91,15l-0.12,0A1,1,0,0,0,24,16v6a1,1,0,0,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H24.91Z\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_6\",\n  \"data-name\": \"Line 6\",\n  d: \"M30.91,10l-0.12,0A1,1,0,0,0,30,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H30.91Z\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_7\",\n  \"data-name\": \"Line 7\",\n  d: \"M36.91,0L36.78,0A1,1,0,0,0,36,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H36.91Z\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_8\",\n  \"data-name\": \"Line 8\",\n  d: \"M42.91,9L42.78,9A1,1,0,0,0,42,10V28a1,1,0,1,0,2,0s0,0,0,0V10a1,1,0,0,0-1-1H42.91Z\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_9\",\n  \"data-name\": \"Line 9\",\n  d: \"M48.91,15l-0.12,0A1,1,0,0,0,48,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H48.91Z\"\n});\n\nvar SvgAudiowave = function SvgAudiowave(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"audioWave\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 50 38.05\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgAudiowave, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/audiowave.e48c060f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from \"react\";\nimport { Dropdown, Radio, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nimport SongGrid from \"./SongGrid\";\nimport { options } from \"./options\";\nimport {\n  SP_DIFFICULTIES,\n  TITLE_CATEGORIES,\n  LEVELS,\n  DDR_VERSIONS,\n} from \"../../constants\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport { ReactComponent as AudioWave } from \"../../svg/audiowave.svg\";\n\nconst SongForm = (props) => {\n  const {\n    activeView,\n    setActiveView,\n    simfileList,\n    selectedDifficulty,\n    loadingAudio,\n    previewAudio,\n  } = props;\n\n  const simfileOptions = simfileList.map((song) => {\n    return { key: song.hash, value: song.hash, text: song.title };\n  });\n\n  const [selectedSongOption, setSelectedSongOption] = useState(null);\n  const [selectedDifficultyOption, setSelectedDifficultyOption] = useState(\n    selectedDifficulty\n  );\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    title: \"all\",\n    version: 16,\n    level: \"all\",\n    // level: 10,\n  });\n\n  const [displayedSongs, setDisplayedSongs] = useState([]);\n\n  useEffect(() => {\n    const { title, version, level } = selectedFilters;\n\n    const songs = simfileList.filter((song) => {\n      return (\n        (title === \"all\" || title === song.abcSort) &&\n        (version === \"all\" || version === parseInt(song.version)) &&\n        (level === \"all\" || song.levels.slice(0, 5).includes(level))\n      );\n    });\n\n    setDisplayedSongs(songs);\n  }, [selectedFilters]);\n\n  // object corresponding to the selected song option\n  // NOT the song currently playing in the main view\n  const [selectedSong, setSelectedSong] = useState(null);\n\n  const titleSortOptions = [\n    { key: \"title_all\", value: \"all\", text: \"ALL\" },\n  ].concat(\n    TITLE_CATEGORIES.map((letter) => {\n      return { key: `title_${letter}`, value: letter, text: letter };\n    })\n  );\n\n  const versionSortOptions = [\n    { key: \"version_all\", value: \"all\", text: \"ALL\" },\n  ].concat(\n    DDR_VERSIONS.map((versionName, idx) => {\n      return { key: `version_${idx}`, value: idx, text: versionName };\n    }).reverse()\n  );\n\n  const levelSortOptions = [\n    { key: \"level_all\", value: \"all\", text: \"ALL\" },\n  ].concat(\n    LEVELS.map((level) => {\n      return { key: `level_${level}`, value: level, text: level };\n    })\n  );\n\n  // initialize song for testing\n  useEffect(() => {\n    // onSongSelect(null, { value: \"99OQb9b0IQ98P6IQdPOiqi8q16o16iqP\" }); // ORCA\n    // onSongSelect(null, { value: \"PooiIP8qP0IPd9D1Ibi6l9bDoqdi9P8O\" }); // DEGRS\n    onSongSelect(null, { value: \"q0QIob1PDI6IP86dlPb6I6il9d6bP606\" }); // einya\n    // onSongSelect(null, { value: \"bIlqP91O9ld1lqlq6qoq9OiPdqIDPP0l\" }); // lachryma\n    // onSongSelect(null, { value: \"06O0ObdQobq86lPDo6P18dQ1QPdilIQO\" }); // ayakashi\n    // onSongSelect(null, { value: \"9bI0dQdb01Dl1bQq1Pq998i0l096D99P\" }); // second heaven\n    // onSongSelect(null, { value: \"8o1iQPiId8P6Db9Iqo1Oo119QDoq8qQ8\" }); // chaos\n    // onSongSelect(null, { value: \"dD6PqbboDil89DPIID86Pldi6obI1b8l\" }); // pluto\n    // onSongSelect(null, { value: \"loP08P1PPi990lPD0O060d888O9o6qb8\" }); // seasons\n    // onSongSelect(null, { value: \"8QbqP80q9PI8bbi0qOoiibOQD08OPdli\" }); // felm\n    // onSongSelect(null, { value: \"6bid6d9qPQ80DOqiidQQ891o6Od8801l\" }); // otp\n    // onSongSelect(null, { value: \"9i0q91lPPiO61b9P891O1i86iOP1I08O\" }); // egoism\n    // onSongSelect(null, { value: \"lldPQPDP0qq8iqQ910l8b8PoQ6O668Q0\" }); // downer & upper\n    // onSongSelect(null, { value: \"PP1q0iii1D6Dq9QOd0qqDOQD0160QoPD\" }); // paranoia eternal\n    // onSongSelect(null, { value: \"QI06q9lPIoo80DlI18Ooi6dbPl89bqi0\" }); // our soul\n    // onSongSelect(null, { value: \"POq8OPlOO9199i11Od0P00801Qo01DQo\" }); // rtswy\n    // onSongSelect(null, { value: \"QQldo10ObPPQPlliODiDIIl0Q1oPoo61\" }); // deltamax\n    // onSongSelect(null, { value: \"06loOQ0DQb0DqbOibl6qO81qlIdoP9DI\" }); // paranoia\n    // onSongSelect(null, { value: \"0dOi10q9Q6oi0Q9960iQQDO6olqlDDqo\" }); // private eye\n    // onSongSelect(null, { value: \"9I00D9Id61iD6QP8i8Dd6698PoQ9bdi9\" }); // okome\n    // onSongSelect(null, { value: \"O9qDQOQO8dDDIiO9dPP0Pb8qQo9l89D9\" }); // triperfect\n    // onSongSelect(null, { value: \"0IldoDlDQql99DqQo0Qq9ioPIiiPoIoi\" }); // pluto relinquish\n\n    // onDifficultySelect(null, \"Expert\");\n    // setTimeout(() => {\n    //   handleSubmit({ preventDefault: () => {} });\n    // });\n  }, []);\n\n  useEffect(() => {\n    if (selectedSongOption) {\n      const song = simfileList.find((song) => song.hash === selectedSongOption);\n      setSelectedSong(song);\n      AudioPlayer.storeAudioSource(song);\n    }\n  }, [selectedSongOption]);\n\n  const onSongSelect = async (e, data) => {\n    const songHash = data.value;\n    setSelectedSongOption(songHash);\n\n    console.log(\"setSelectedSongOption\", songHash);\n    AudioPlayer.stopSongPreview();\n\n    const song = simfileList.find((song) => song.hash === songHash);\n\n    // if a specific level filter has been chosen, select the difficulty that\n    // corresponds to that level\n    console.log(\"selectedFilters.level\", selectedFilters.level);\n    if (selectedFilters.level) {\n      for (let i = 0; i < song.levels.length; i++) {\n        const level = song.levels[i];\n        if (level === selectedFilters.level) {\n          console.log(\"match\", SP_DIFFICULTIES[i], level);\n          handleDifficultySelect(SP_DIFFICULTIES[i]);\n          break;\n        }\n      }\n    } else {\n      props.onDifficultySelect(selectedDifficultyOption);\n    }\n\n    // automatically update chart\n    props.onSongSelect(song);\n  };\n\n  // deprecated, used with semantic ui radio\n  const onDifficultySelect = (e, data) => {\n    const difficulty = data.value;\n    setSelectedDifficultyOption(difficulty);\n    // props.onDifficultySelect(difficulty);\n  };\n\n  const handleDifficultySelect = (difficulty) => {\n    setSelectedDifficultyOption(difficulty);\n    props.onDifficultySelect(difficulty);\n  };\n\n  const renderDifficulties = () => {\n    if (!selectedSong) return null;\n\n    // temp: only single\n    return selectedSong.levels.slice(0, 5).map((level, idx) => {\n      if (!level) return null;\n      const difficulty = SP_DIFFICULTIES[idx];\n      return (\n        <div\n          className={`song-difficulty ${difficulty} ${\n            selectedDifficultyOption === difficulty ? \"selected\" : \"\"\n          }`}\n          key={`sp-difficulty_${difficulty}`}\n          onClick={() => handleDifficultySelect(difficulty)}\n        >\n          <div className=\"difficulty\">{difficulty}</div>\n          <div className=\"level\">{level}</div>\n        </div>\n      );\n    });\n  };\n\n  const toggleSongPreview = () => {\n    const oldSongHash = AudioPlayer.currentPreview;\n\n    // toggle start/stop of the same song\n    if (oldSongHash === selectedSong.hash) {\n      if (previewAudio.status === \"playing\") {\n        AudioPlayer.stopSongPreview();\n      } else {\n        AudioPlayer.playSongPreview(selectedSong);\n      }\n    }\n\n    // play a new song and stop the current one (if applicable)\n    else {\n      if (previewAudio.status === \"playing\") {\n        AudioPlayer.stopSongPreview();\n      }\n      AudioPlayer.playSongPreview(selectedSong);\n    }\n  };\n\n  return (\n    <div\n      className={`form-container songView ${\n        activeView === \"song\" ? \"open\" : \"closed\"\n      }`}\n    >\n      <form className=\"songForm\">\n        <div className=\"form-inner-wrapper\">\n          <div className=\"selectedSong\">\n            <div\n              className={`selectedSong-jacket-wrapper ${\n                previewAudio.status === \"playing\" ? \"playing\" : \"\"\n              }`}\n            >\n              <div className=\"selectedSong-jacket-overlay\">\n                <AudioWave />\n              </div>\n              <img\n                className={`selectedSong-jacket`}\n                src={`/jackets/${selectedSongOption}.png`}\n                alt=\"Selected song\"\n                onClick={toggleSongPreview}\n              />\n            </div>\n            <div className=\"selectedSong-info\">\n              <Dropdown\n                placeholder=\"Choose a song\"\n                className=\"song-title-dropdown\"\n                search\n                selection\n                value={selectedSongOption}\n                onChange={onSongSelect}\n                options={simfileOptions}\n              />\n              <div className=\"song-artist\">\n                {selectedSong && selectedSong.artist}\n              </div>\n\n              <div className=\"song-difficulties\">{renderDifficulties()}</div>\n            </div>\n          </div>\n          <div className=\"songForm-filters\">\n            <div className=\"form-field\">\n              <label>By Title</label>\n              <Dropdown\n                className=\"title-filter-dropdown\"\n                selection\n                value={selectedFilters.title}\n                onChange={(e, data) =>\n                  setSelectedFilters({ ...selectedFilters, title: data.value })\n                }\n                options={titleSortOptions}\n              />\n            </div>\n            <div className=\"form-field\">\n              <label>By Version</label>\n              <Dropdown\n                className=\"version-filter-dropdown\"\n                selection\n                value={selectedFilters.version}\n                onChange={(e, data) =>\n                  setSelectedFilters({\n                    ...selectedFilters,\n                    version: data.value,\n                  })\n                }\n                options={versionSortOptions}\n              />\n            </div>\n            <div className=\"form-field\">\n              <label>By Level</label>\n              <Dropdown\n                className=\"level-filter-dropdown\"\n                selection\n                value={selectedFilters.level}\n                onChange={(e, data) =>\n                  setSelectedFilters({ ...selectedFilters, level: data.value })\n                }\n                options={levelSortOptions}\n              />\n            </div>\n          </div>\n\n          {/* <div className=\"songForm-actions\">\n            <Button type=\"submit\" className=\"submit-btn\">\n              SELECT\n            </Button>\n          </div> */}\n        </div>\n      </form>\n\n      <SongGrid\n        displayedSongs={displayedSongs}\n        onSongSelect={onSongSelect}\n        selectedSongOption={selectedSongOption}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio } = state;\n  const { previewAudio } = audio;\n  return {\n    previewAudio,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongForm);\n","import React, { useState } from \"react\";\nimport { Radio } from \"semantic-ui-react\";\n\nimport { options } from \"./options\";\nimport { capitalize } from \"../../utils\";\n\nconst ModsForm = (props) => {\n  const {\n    activeView,\n    simfileList,\n    selectedDifficulty,\n    mods,\n    setMods,\n    gameEngine,\n  } = props;\n\n  const [timeProgress, setTimeProgress] = useState(0);\n\n  // useEffect(() => {\n  //   if (!gameEngine) return;\n  //   const ge = gameEngine;\n\n  //   if (ge.tl) {\n  //     // console.log(\"timeline is this long\", ge.tl.duration());\n  //   }\n  // }, [gameEngine]);\n\n  const updateMods = (updatedMods) => {\n    setMods({ ...mods, ...updatedMods });\n  };\n\n  const getChartDuration = () => {\n    if (!gameEngine || !gameEngine.tl) return 0;\n    const duration = gameEngine.tl.duration();\n    return duration;\n  };\n\n  // const timeProgressSettings = {\n  //   min: 0,\n  //   max: getChartDuration(),\n  //   step: 0.01,\n  //   onChange: value => {\n  //     // console.log(\"onChange value\", value);\n  //     setTimeProgress(value);\n  //     gameEngine.tl.seek(value);\n  //   },\n  // };\n\n  return (\n    <div\n      className={`form-container ${activeView === \"mods\" ? \"open\" : \"closed\"}`}\n    >\n      <form>\n        <div className=\"form-field\">\n          <h4 className=\"form-label\">Speed</h4>\n          {options.mods.speed.map((speed) => {\n            return (\n              <Radio\n                key={`speed_${speed}`}\n                label={`${speed}x`}\n                name=\"speed\"\n                value={speed}\n                checked={mods.speed === speed}\n                onChange={() => updateMods({ speed })}\n              />\n            );\n          })}\n        </div>\n\n        <div className=\"form-field\">\n          <h4 className=\"form-label\">Arrow color</h4>\n          {options.mods.noteskin.map((noteskin) => {\n            return (\n              <Radio\n                key={`noteskin_${noteskin}`}\n                label={capitalize(noteskin)}\n                name=\"noteskin\"\n                value={noteskin}\n                checked={mods.noteskin === noteskin}\n                onChange={() => updateMods({ noteskin })}\n              />\n            );\n          })}\n        </div>\n\n        <div className=\"form-field\">\n          <h4 className=\"form-label\">Turn</h4>\n          {options.mods.turn.map((turn) => {\n            return (\n              <Radio\n                key={`turn_${turn}`}\n                label={capitalize(turn)}\n                name=\"turn\"\n                value={turn}\n                checked={mods.turn === turn}\n                onChange={() => updateMods({ turn })}\n              />\n            );\n          })}\n        </div>\n        {mods.turn === \"shuffle\" && (\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Shuffle pattern</h4>\n            {options.mods.shuffle.map((shuffle) => {\n              return (\n                <Radio\n                  key={`shuffle_${shuffle}`}\n                  label={shuffle}\n                  name=\"shuffle\"\n                  value={shuffle}\n                  checked={mods.shuffle === shuffle}\n                  onChange={() => updateMods({ shuffle })}\n                />\n              );\n            })}\n          </div>\n        )}\n\n        {/* <div className=\"form-field\">\n          <h4 className=\"form-label\">Time progress</h4>\n        </div> */}\n      </form>\n    </div>\n  );\n};\n\nexport default ModsForm;\n","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport { stopPreviewAudio } from \"../../actions/AudioActions\";\n\nconst MobileNav = (props) => {\n  const { activeView, chartAudio, previewAudio } = props;\n\n  const navItems = [\n    { view: \"chart\", icon: \"arrow up\" },\n    { view: \"song\", icon: \"music\" },\n    { view: \"2\", icon: \"\" },\n    { view: \"3\", icon: \"\" },\n    { view: \"mods\", icon: \"sidebar\" },\n  ];\n\n  const setActiveView = (view) => {\n    if (view === \"song\" && chartAudio.status === \"playing\") return;\n    AudioPlayer.stopSongPreview();\n    props.setActiveView(view);\n  };\n\n  const isDisabled = (view) => {\n    if (view === \"song\" && chartAudio.status === \"playing\") return true;\n    return false;\n  };\n\n  return (\n    <nav className=\"mobileNav\">\n      {navItems.map((navItem) => {\n        const { view, icon } = navItem;\n        if (!view) return <div className=\"mobileNav_item\" />;\n        return (\n          <div\n            key={`mobileNavItem_${view}`}\n            className={`mobileNav_item ${activeView === view ? \"active\" : \"\"} ${\n              isDisabled(view) ? \"disabled\" : \"\"\n            }`}\n            onClick={() => setActiveView(view)}\n          >\n            <Icon name={icon} />\n          </div>\n        );\n      })}\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio } = state;\n  const { chartAudio, previewAudio } = audio;\n  return {\n    chartAudio,\n    previewAudio,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    stopPreviewAudio: () => dispatch(stopPreviewAudio()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileNav);\n","import React, { useState, useEffect } from \"react\";\nimport { tsv } from \"d3-fetch\";\nimport { Button } from \"semantic-ui-react\";\n\nimport ChartArea from \"../../components/chart/ChartArea\";\nimport SongForm from \"../../components/form/SongForm\";\nimport ModsForm from \"../../components/form/ModsForm\";\nimport MobileNav from \"../../components/navigation/MobileNav\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport { optionDefaultValues } from \"../../components/form/options\";\nimport { fetchDocument } from \"../../utils\";\n\nconst MainContainer = (props) => {\n  const [loadingSimfiles, setLoadingSimfiles] = useState(true);\n  const [simfileList, setSimfileList] = useState([]);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [selectedSM, setSelectedSM] = useState(null);\n  const [selectedDifficulty, setSelectedDifficulty] = useState(\n    optionDefaultValues.difficulty\n  );\n  const [selectedAudio, setSelectedAudio] = useState(null);\n\n  const [mods, setMods] = useState(optionDefaultValues.mods);\n  const [activeView, setActiveView] = useState(\"song\");\n\n  const [gameEngine, setGameEngine] = useState(null);\n\n  const [loadingAudio, setLoadingAudio] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchSimfiles();\n      setLoadingSimfiles(false);\n    };\n    fetchData();\n\n    AudioPlayer.setLoadingAudio = setLoadingAudio;\n  }, []);\n\n  const fetchSimfiles = async () => {\n    try {\n      const parsedTsv = await tsv(\n        window.location.origin + \"/data/simfiles.tsv\"\n      );\n      parsedTsv.forEach((row) => {\n        row.levels = row.levels\n          .split(\",\")\n          .map((level) => (level ? parseInt(level) : null));\n      });\n\n      // console.log(\"simfiles\", parsedTsv);\n      setSimfileList(parsedTsv);\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n\n  const onSongSelect = async (song) => {\n    console.log(\"MainContainer selected song\", song);\n    AudioPlayer.selectSong(song);\n    setSelectedSong(song);\n\n    // retrieve audio file and simfile from song.simfilePath\n    // TEMP: SM only; ignore Ace for Aces and Chaos Terror-Tech for now\n    try {\n      const sm = await fetchDocument(\n        `${window.location.origin}/simfiles/${song.smName}.sm`\n      );\n      setSelectedSM(sm);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const onDifficultySelect = (difficulty) => {\n    setSelectedDifficulty(difficulty);\n  };\n\n  const changeActiveView = (view) => {\n    setActiveView(view);\n    AudioPlayer.activeView = view;\n  };\n\n  return (\n    <div className=\"main-container\">\n      {!loadingSimfiles && (\n        <>\n          <ChartArea\n            loadingAudio={loadingAudio}\n            selectedSong={selectedSong}\n            selectedDifficulty={selectedDifficulty}\n            sm={selectedSM}\n            selectedAudio={selectedAudio}\n            mods={mods}\n            gameEngine={gameEngine}\n            setGameEngine={setGameEngine}\n          />\n\n          <SongForm\n            activeView={activeView}\n            setActiveView={changeActiveView}\n            simfileList={simfileList}\n            selectedDifficulty={selectedDifficulty}\n            onSongSelect={onSongSelect}\n            onDifficultySelect={onDifficultySelect}\n            loadingAudio={loadingAudio}\n          />\n\n          <ModsForm\n            activeView={activeView}\n            simfileList={simfileList}\n            selectedSong={selectedSong}\n            onSongSelect={onSongSelect}\n            selectedDifficulty={selectedDifficulty}\n            onDifficultySelect={onDifficultySelect}\n            selectedAudio={selectedAudio}\n            setSelectedAudio={setSelectedAudio}\n            mods={mods}\n            setMods={setMods}\n            gameEngine={gameEngine}\n          />\n\n          <MobileNav activeView={activeView} setActiveView={changeActiveView} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MainContainer;\n","import React from \"react\";\n\nimport MainContainer from \"./containers/main/MainContainer\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}