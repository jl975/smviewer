{"version":3,"sources":["constants/index.js","utils/index.js","utils/engineUtils.js","components/chart/canvas/Arrow.js","components/chart/canvas/ShockArrow.js","components/chart/canvas/StepZone.js","components/chart/canvas/Guidelines.js","components/chart/canvas/TargetFlash.js","components/chart/canvas/ComboDisplay.js","components/chart/canvas/LaneCover.js","utils/parseSimfile.js","reducers/AudioReducer.js","actions/ChartActions.js","reducers/ChartReducer.js","actions/ModsActions.js","utils/userSettings.js","components/form/options.js","reducers/ModsReducer.js","reducers/ScreenReducer.js","actions/SongSelectActions.js","reducers/SongSelectReducer.js","reducers/index.js","actions/AudioActions.js","actions/ScreenActions.js","store.js","components/chart/canvas/Progress.js","core/AudioPlayer.js","core/GameEngine.js","components/chart/ShareModal.js","components/ui/HoldButton.js","components/chart/PlayControls.js","components/chart/SongInfo.js","components/chart/CabButtons.js","components/chart/ChartArea.js","hooks/index.js","utils/songUtils.js","components/form/SongGrid.js","utils/loadStore.js","components/ui/ToggleSwitch.js","components/form/songFormOptions.js","svg/audiowave.svg","components/form/SongForm.js","components/form/ModsForm.js","svg/arrows.svg","svg/mods.svg","svg/music_search.svg","components/navigation/Navbar.js","containers/main/MainContainer.js","App.js","index.js"],"names":["DIRECTIONS","SP_DIFFICULTIES","DP_DIFFICULTIES","getOriginPath","window","location","search","href","slice","indexOf","fetchDocument","path","a","fetch","mode","response","reader","body","getReader","decoder","TextDecoder","read","readResult","decode","value","getAssetPath","getJacketPath","capitalize","str","toUpperCase","presetParams","obj","split","forEach","param","key","error","console","log","parseUrlParams","getCurrentCombo","song","audio","arrows","globalParams","length","currentCombo","currentTime","seek","i","arrow","combo","timestamp","getReverseCoord","originalCoord","height","canvas","arrowImages","direction","Image","src","imageName","Arrow","attrs","this","note","measureIdx","measureN","measureD","originalBeatPosition","holdBeats","previousBeatPosition","beatTick","directionIdx","arrowImg","frameY","destX","destY","c","getContext","mods","speed","scroll","appearance","bottomBoundary","currentBeatPosition","arrowBodyImg","totalBodyHeight","ARROW_HEIGHT","repetitions","Math","floor","partialHeight","originalPartialHeight","partialDestY","freezeBeingHeld","drawImage","bodyHeight","bodyFrameY","bodyDestY","tailHeight","actualDestY","tailPartialHeight","arrowHeadImg","freeze_head","noteskin","colorFreezes","frameX","includes","beatD","beatN","measureFraction","ShockArrow","frame","flashImages","receptorImages","StepZone","isFlash","Guidelines","finalBeat","guidelines","strokeStyle","beat","lineWidth","beginPath","moveTo","lineTo","width","stroke","image","TargetFlash","directions","push","save","globalAlpha","pow","restore","comboImages","type","num","coords","1","2","3","4","ComboDisplay","comboNum","comboFont","numDigits","toString","comboImg","numImg","comboDestX","comboDestY","comboWidth","comboHeight","digit","digitWidth","digitHeight","imageCol","imageRow","imageX","imageY","numDestX","numDestY","numWidth","numHeight","images","upper","lower","appearanceIdx","LaneCover","laneCoverHeight","img","ARROW_WIDTH","modeRegex","difficultyRegex","difficultyMap","Beginner","Easy","Medium","Hard","Challenge","parseSimfile","sm","simfileType","simfiles","chartMetadata","bpms","stops","test","exec","map","point","parseFloat","chartStr","smDifficulty","difficulty","level","simfile","levelRegex","RegExp","parseInt","measures","lastIndexOf","trim","measure","ticks","filter","n","startsWith","numTicks","noteObjects","tick","tickIdx","noteObj","chart","initialState","chartAudio","status","progress","previewAudio","changeActiveBpm","bpm","dispatch","payload","activeBpm","bpmChangeQueue","updateMods","getUserSettings","settings","localStorage","getItem","JSON","parse","err","updateUserSettings","newSettings","Object","keys","setItem","stringify","saveSongProgress","options","turn","shuffle","stepZone","comboDisplay","optionDefaultValues","laneCoverVisible","userSettings","mod","difficulties","b","B","D","E","C","turnValue","toLowerCase","innerWidth","innerHeight","activeView","selectSong","combineReducers","state","action","round","updatedMods","updatedState","diff","canvasHeight","lowerBoundary","upperBoundary","screen","target","values","songSelect","hash","store","createStore","reducers","compose","applyMiddleware","thunk","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","mouseDown","currentProgress","presetStart","document","querySelector","presetMarker","drawBackground","addEventListener","e","preventDefault","jumpToProgress","touches","setPresetMarker","totalWidth","offsetWidth","presetPosition","style","left","event","presetProgress","progressPercent","domRect","getBoundingClientRect","clientX","x","setProgress","AudioPlayer","seekProgress","stopPropagation","fillStyle","fillRect","isNaN","sources","preview","assistTick","Howl","currentSong","currentPreview","currentSongId","currentPreviewId","previewFadeTimeout","updateTimeline","bind","updateProgress","audioResyncFrames","getCurrentSong","initialProgress","setLoadingAudio","thisSong","title","dAudioUrl","format","html5","onload","onloaderror","id","blah","alert","onplay","tl","play","resync","gsap","ticker","add","startAnimationLoop","onpause","pause","remove","stopAnimationLoop","onseek","onstop","restart","onend","spriteId","sprite","sample","sampleStart","sampleLength","clearTimeout","stop","storeAudioSource","audioReloadFrames","isAudioStable","getCurrentTime","updateProgressOnce","getChartAudioStatus","currentBpm","params","lastBpmValue","bpmEvent","getCurrentBpm","comboTemp","textContent","ms","seekTime","audioDuration","duration","time","deltaTime","t0","performance","now","Progress","render","text","divNum","debugDiv","debugLog","getFullCombo","updateAnimationLoopOnce","songId","kill","playing","getCurrentPreview","on","fade","setTimeout","getState","GameEngine","chartParams","timeline","eventList","shockArrows","allArrows","mainLoopRequestRef","targetFlashes","startLoop","stopLoop","updateLoopOnce","resetChart","setGlobalParams","generateEventList","generateArrows","initTimeline","restartTl","pauseTl","requestAnimationFrame","mainLoop","cancelAnimationFrame","bpmPtr","stopPtr","prevEvent","currentEvent","prevTimestamp","timestampDiff","currentTimestamp","Array","isArray","newChart","turnMap","off","mirror","right","shuffle1","shuffle2","shuffle3","shuffle4","shuffle5","shuffle6","shuffle7","shuffle8","turnMod","row","turnedNote","reverse","applyTurnMods","j","shockArrow","laneCover","accumulatedBeatTick","lastArrow","lastEvent","max","startEvent","endEvent","delay","sectionBeatLength","sectionDuration","to","ease","onStart","actions","comboArrows","currentBpmPtr","currentEventPtr","pendingStopPtr","pendingStop","currentStopOffset","idx","bpmSection","nextEvent","bpmSectionStartBeat","arrowTimestamp","set","setTimeline","t1","loop","upArrows","notUpArrows","renderFreezeBody","toFixed","renderArrow","beatStamp","targetFlash","paused","Basic","Difficult","Expert","modes","single","double","ShareModal","props","modalOpen","setModalOpen","data","shareUrl","useRef","useState","message","setMessage","useEffect","current","getProgress","replace","queryStr","join","generateShareUrl","Modal","className","size","open","onClose","Header","Content","Input","Button","onClick","copy","HoldButton","button","requestRef","pressingDownRef","notPressingDownRef","buttonProps","el","ref","removeEventListener","pressingDown","notPressingDown","handleHold","children","connect","controlsDisabled","setShareModalOpen","goBack","Icon","name","disabled","goForward","selectedSong","selectedDifficulty","selectedMode","artist","levels","updateLaneCoverHeight","laneCoverFn","adjustLaneCoverHeight","keyCode","laneCoverHeightDiff","reverseFactor","toggleLaneCover","loadingAudio","gameEngine","setGameEngine","setCanvas","shareModalOpen","chartArea","canvasContainer","chartLoadingScreen","prevState","usePrevious","initCanvas","resizeChartArea","transform","position","top","wrapper","scaleFactor","xOffset","yOffset","currentState","thing","useSsc","ge","prev","curr","isTlPaused","shareParams","jumpToPresetStart","onTouchStart","getClosestDifficulty","SongGrid","displayedSongs","onSongSelect","selectedSongOption","selectedDifficultyOption","selectedFilters","songs","renderSong","alt","levelFilter","difficultyFilter","displayedLevels","difficultyIdx","closestDiff","closestDiffIdx","renderSongLevel","loadStore","lastRequestedSong","lastRequestedSongLoaded","ToggleSwitch","option1","option2","selectOption","option","onChange","getSwitchClassName","titleSortOptions","concat","letter","versionSortOptions","versionName","levelSortOptions","difficultySortOptions","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref","svgRef","viewBox","ForwardRef","forwardRef","previousSong","simfileList","songGridContainer","simfileOptions","setSelectedSongOption","setSelectedDifficultyOption","filters","version","setSelectedFilters","updateSelectedFilters","newFilters","setDisplayedSongs","singleDiffs","doubleDiffs","abcSort","some","scrollTop","setSelectedSong","click","find","_","stopSongPreview","killImmediately","songHash","selectClosestDifficulty","difficultyToSelect","selectedDiffOptionIndex","onDifficultySelect","Helmet","property","content","playSongPreview","Dropdown","placeholder","selection","selectOnBlur","selectOnNavigation","handleDifficultySelect","renderDifficulties","onModeSelect","displayBpm","getDisplayBpm","lowBpm","highBpm","getEffectiveScrollSpeed","Radio","label","checked","Checkbox","toggle","fill","verticalAlign","overflow","fillRule","stopPreviewAudio","setActiveView","view","navItems","icon","svgIcon","SongIcon","ModsIcon","ChartIcon","isDisabled","navItem","SVGIcon","changeActiveView","selectDifficulty","selectMode","resizeScreen","loadingSimfiles","setLoadingSimfiles","setSimfileList","selectedSM","setSelectedSM","fetchSimfiles","fetchData","tsv","parsedTsv","smName","random","encodeURIComponent","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4b92a587.chunk.js","sourcesContent":["export const DEBUG_MODE = true;\n\nexport const ARROW_WIDTH = 64;\nexport const ARROW_HEIGHT = 64;\n\n/* Height of one repetition of the freeze body pattern */\nexport const FREEZE_BODY_HEIGHT = 128;\n\n/* Amount of pixels the Hidden+ and Sudden+ lane covers are moved with one nudge */\nexport const LANE_COVER_INCREMENT = 4;\n\nexport const DIRECTIONS = [\"left\", \"down\", \"up\", \"right\"];\n\n/* Number of seconds that the visuals are delayed relative to the audio */\n// export const GLOBAL_OFFSET = 0.012;\n\n/* \n  Offset of the visuals (i.e. chart, gsap timeline) relative to the audio.\n  Positive value represents notes being earlier (have to hit earlier than the music)\n  Negative value represents notes being later (have to hit later than the music)\n*/\nexport const GLOBAL_OFFSET = 0.07;\n\nexport const MARVELOUS_FLASH_FRAMES = 12;\n\n/* Number of beats played after the last note or event until the timeline ends */\nexport const END_EXTRA_BEATS = 8;\n\nexport const DDR_VERSIONS = [\n  \"DDR 1st\",\n  \"DDR 2ndMIX\",\n  \"DDR 3rdMIX\",\n  \"DDR 4thMIX\",\n  \"DDR 5thMIX\",\n  \"DDRMAX\",\n  \"DDRMAX2\",\n  \"DDR EXTREME\",\n  \"DDR SuperNOVA\",\n  \"DDR SuperNOVA 2\",\n  \"DDR X\",\n  \"DDR X2\",\n  \"DDR X3 VS 2ndMIX\",\n  \"DDR (2013)\",\n  \"DDR (2014)\",\n  \"DDR A\",\n  \"DDR A20\",\n];\n\nexport const SP_DIFFICULTIES = [\n  \"Beginner\",\n  \"Basic\",\n  \"Difficult\",\n  \"Expert\",\n  \"Challenge\",\n];\nexport const DP_DIFFICULTIES = [\"Basic\", \"Difficult\", \"Expert\", \"Challenge\"];\n\nexport const TITLE_CATEGORIES = [\n  \"あ\",\n  \"か\",\n  \"さ\",\n  \"た\",\n  \"な\",\n  \"は\",\n  \"ま\",\n  \"や\",\n  \"ら\",\n  \"わ\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"NUM\",\n];\n\nexport const LEVELS = [\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n];\n","import { DEBUG_MODE } from \"../constants\";\n\nexport const getOriginPath = () => {\n  if (window.location.search)\n    return window.location.href.slice(\n      0,\n      window.location.href.indexOf(window.location.search)\n    );\n  return window.location.href;\n};\n\nexport const fetchDocument = async (path) => {\n  const response = await fetch(path, {\n    mode: \"cors\",\n  });\n  const reader = response.body.getReader();\n  const decoder = new TextDecoder(\"utf-8\");\n  const readResult = await reader.read();\n  return decoder.decode(readResult.value);\n};\n\nexport const getAssetPath = (path) => {\n  return getOriginPath() + \"assets/\" + path;\n};\n\nexport const getJacketPath = (path) => {\n  return getOriginPath() + \"jackets/\" + path;\n};\n\nexport const capitalize = (str) => {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n};\n\nconst parseUrlParams = () => {\n  if (!window.location.search) return {};\n  const obj = {};\n  try {\n    window.location.search\n      .slice(1)\n      .split(\"&\")\n      .forEach((param) => {\n        const [key, value] = param.split(\"=\");\n        obj[key] = value;\n      });\n    return obj;\n  } catch (error) {\n    console.log(\"error parsing url params\", error);\n    return {};\n  }\n};\nexport const presetParams = parseUrlParams();\n\nexport const debugLog = (text, divNum = 1) => {\n  if (!DEBUG_MODE) return;\n  const debugDiv = document.querySelector(`#debugLog .debug-text${divNum}`);\n  if (debugDiv) {\n    debugDiv.textContent = text;\n  }\n};\n","import { GLOBAL_OFFSET } from \"../constants\";\nimport { debugLog } from \"./index\";\n\nexport const applyTurnMods = (chart, mods, mode) => {\n  const { turn, shuffle } = mods;\n\n  // shuffle patterns courtesy of https://zenius-i-vanisher.com/v5.2/viewthread.php?threadid=3823\n  const turnMap = {\n    off: \"LDUR\",\n    mirror: \"RUDL\",\n    left: \"ULRD\",\n    right: \"DRLU\",\n    shuffle1: \"LRDU\",\n    shuffle2: \"UDRL\",\n    shuffle3: \"LRUD\",\n    shuffle4: \"DURL\",\n    shuffle5: \"DLUR\",\n    shuffle6: \"DULR\",\n    shuffle7: \"RLUD\",\n    shuffle8: \"RULD\",\n  };\n\n  let turnMod = turn;\n  if (turn === \"shuffle\") turnMod += shuffle;\n\n  if (mode === \"single\") {\n    return chart.map((row) => {\n      const note = row.note;\n      const turnedNote = turnMap[turnMod]\n        .split(\"\")\n        .map((direction) => note[turnMap.off.indexOf(direction)]);\n\n      return { ...row, note: turnedNote };\n    });\n  }\n  if (mode === \"double\") {\n    return chart.map((row) => {\n      let turnedNote = row.note.split(\"\");\n      if (turn === \"mirror\") turnedNote = turnedNote.reverse();\n      return { ...row, note: turnedNote };\n    });\n  }\n};\n\n/*\n  Given the bpmChangeQueue and the current beat tick, find the latest bpm\n  change event that happened before the current beat and set the current bpm\n  to that bpm value. This should be invoked every time the audio is resynced\n  (which will happen whenever progress is skipped)\n*/\nexport const getCurrentBpm = (params) => {\n  const { beatTick, bpmChangeQueue } = params;\n  let lastBpmValue = 0;\n  for (let i = 0; i < bpmChangeQueue.length; i++) {\n    const bpmEvent = bpmChangeQueue[i];\n    if (bpmEvent.beat > beatTick) {\n      return lastBpmValue;\n    }\n    lastBpmValue = bpmEvent.value;\n  }\n  return lastBpmValue;\n};\n\n/*\n  Find the current combo given the song timestamp. This should be invoked\n  every time the audio is resynced.\n*/\n\nexport const getCurrentCombo = (song) => {\n  const { audio, globalParams } = song;\n  const { arrows } = globalParams;\n  if (!arrows.length) return 0;\n\n  const currentTime = audio.seek();\n\n  // if audio is not properly loaded by the time this runs, currentTime will\n  // return the Howl object, causing this method to return the full combo.\n  // Return 0 instead in this case; seeing no combo is better than seeing\n  // an incorrect full combo number\n\n  // if (typeof currentTime !== \"number\") {\n  //   return 0;\n  // }\n\n  let currentCombo;\n\n  // Go through the chart until the arrow following the current timestamp is reached,\n  // then set the combo to one less than that arrow's combo\n  for (let i = 0; i < arrows.length; i++) {\n    const arrow = arrows[i];\n    if (arrow.combo && arrow.timestamp > currentTime + GLOBAL_OFFSET) {\n      currentCombo = arrow.combo - 1;\n      // console.log(currentCombo);\n      return currentCombo;\n    }\n  }\n\n  // If end of chart is reached, use the combo of the last arrow.\n  // Need to go back if the last \"note\" is the end of a freeze, which is common\n  // Expected to short circuit out of loop after ~1-2 iterations\n  for (let i = arrows.length - 1; i >= 0; i--) {\n    const arrow = arrows[i];\n    if (arrow.combo) {\n      currentCombo = arrow.combo;\n      console.log(currentCombo);\n      return currentCombo;\n    }\n  }\n\n  return -1; // should never reach this. return -1 to make debugging easier\n};\n\nexport const getFullCombo = (song) => {\n  const { globalParams } = song;\n  const { arrows } = globalParams;\n  if (!arrows.length) return 0;\n  for (let i = arrows.length - 1; i >= 0; i--) {\n    const arrow = arrows[i];\n    if (arrow.combo) {\n      return arrow.combo;\n    }\n  }\n  return 0;\n};\n\n/*\n  Method for finding the coordinate of a sprite on Reverse scroll\n  given the corresponding coordinate on Normal scroll and its height\n*/\nexport const getReverseCoord = (originalCoord, height, canvas) => {\n  return canvas.height - (originalCoord + height);\n};\n","import {\n  DIRECTIONS,\n  ARROW_WIDTH,\n  ARROW_HEIGHT,\n  FREEZE_BODY_HEIGHT,\n} from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst arrowImages = {};\nDIRECTIONS.forEach((direction) => {\n  arrowImages[`rainbow_${direction}`] = new Image();\n  arrowImages[`rainbow_${direction}`].src = getAssetPath(\n    `rainbow_${direction}.png`\n  );\n  arrowImages[`note_${direction}`] = new Image();\n  arrowImages[`note_${direction}`].src = getAssetPath(`note_${direction}.png`);\n  arrowImages[`vivid_${direction}`] = new Image();\n  arrowImages[`vivid_${direction}`].src = getAssetPath(\n    `vivid_${direction}.png`\n  );\n  arrowImages[`flat_${direction}`] = new Image();\n  arrowImages[`flat_${direction}`].src = getAssetPath(`vivid_${direction}.png`);\n\n  arrowImages[`freeze_tail_active_${direction}`] = new Image();\n  arrowImages[`freeze_tail_active_${direction}`].src = getAssetPath(\n    `freeze_tail_active_${direction}.png`\n  );\n  arrowImages[`freeze_tail_inactive_${direction}`] = new Image();\n  arrowImages[`freeze_tail_inactive_${direction}`].src = getAssetPath(\n    `freeze_tail_inactive_${direction}.png`\n  );\n\n  arrowImages[`freeze_body_active_${direction}`] = new Image();\n  arrowImages[`freeze_body_active_${direction}`].src = getAssetPath(\n    `freeze_body_active_${direction}.png`\n  );\n  arrowImages[`freeze_body_inactive_${direction}`] = new Image();\n  arrowImages[`freeze_body_inactive_${direction}`].src = getAssetPath(\n    `freeze_body_inactive_${direction}.png`\n  );\n\n  arrowImages[`shock_${direction}`] = new Image();\n  arrowImages[`shock_${direction}`].src = getAssetPath(\n    `shock_${direction}.png`\n  );\n});\n\nconst miscImages = [\"freeze_head\", \"tap_explosion\"];\nmiscImages.forEach((imageName) => {\n  arrowImages[imageName] = new Image();\n  arrowImages[imageName].src = getAssetPath(`${imageName}.png`);\n});\n\nclass Arrow {\n  constructor(attrs) {\n    const { key } = attrs;\n\n    this.key = key; // arrow index\n    this.note = attrs.note;\n    this.measureIdx = attrs.measureIdx;\n    this.measureN = attrs.measureN;\n    this.measureD = attrs.measureD;\n\n    // this.currentBeatPosition = attrs.currentBeatPosition;\n    this.originalBeatPosition = attrs.originalBeatPosition;\n    this.holdBeats = attrs.holdBeats || null;\n\n    // can be used to detect the moment that the arrow passes a certain position\n    // even without landing precisely on it\n    this.previousBeatPosition = null;\n  }\n\n  currentBeatPosition(beatTick) {\n    return this.originalBeatPosition - beatTick;\n  }\n\n  renderFreezeBody(canvas, beatTick, directionIdx, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods } = attrs;\n    const { speed, scroll, appearance } = mods;\n\n    const topBoundary = 0;\n    const bottomBoundary = canvas.height;\n\n    let arrowImg;\n    let frameX, frameY, destX, destY;\n    const direction = DIRECTIONS[directionIdx % 4];\n\n    // freeze body and tail\n    if (this.note[directionIdx] === \"3\") {\n      arrowImg = arrowImages[`freeze_tail_inactive_${direction}`];\n      frameX = 0;\n      frameY = 0;\n\n      destX = directionIdx * ARROW_WIDTH;\n      destY = this.currentBeatPosition(beatTick) * ARROW_HEIGHT * speed;\n\n      // Bottom of freeze body must be the bottom of the body image (yellow part of gradient)\n      // and line up with the top of the freeze tail.\n      // Extend the freeze body upwards using as many repetitions of the 128px height image as needed.\n      // Top of freeze body is cut off at the midpoint of the freeze head.\n      let arrowBodyImg = arrowImages[`freeze_body_inactive_${direction}`];\n      const totalBodyHeight =\n        this.holdBeats[directionIdx] * ARROW_HEIGHT * speed - ARROW_HEIGHT / 2;\n      const repetitions = Math.floor(totalBodyHeight / FREEZE_BODY_HEIGHT);\n      let partialHeight = totalBodyHeight % FREEZE_BODY_HEIGHT;\n      const originalPartialHeight = partialHeight;\n\n      let partialDestY = destY - (totalBodyHeight + ARROW_HEIGHT / 2);\n      let freezeBeingHeld = false;\n\n      // shrink in size once it reaches the target\n      // this is also where the freeze starts to be held down\n      if (partialDestY <= 0) {\n        partialHeight += partialDestY;\n        partialDestY = 0;\n        arrowImg = arrowImages[`freeze_tail_active_${direction}`];\n        arrowBodyImg = arrowImages[`freeze_body_active_${direction}`];\n\n        if (destY >= 0) {\n          freezeBeingHeld = true;\n        }\n      }\n\n      // draw partial\n      if (\n        partialDestY > -partialHeight &&\n        partialDestY < bottomBoundary &&\n        appearance !== \"stealth\"\n      ) {\n        c.drawImage(\n          arrowBodyImg,\n          0,\n          FREEZE_BODY_HEIGHT - partialHeight,\n          ARROW_WIDTH,\n          partialHeight,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(\n                partialDestY + ARROW_HEIGHT / 2,\n                partialHeight,\n                canvas\n              )\n            : partialDestY + ARROW_HEIGHT / 2,\n          ARROW_WIDTH,\n          partialHeight\n        );\n      }\n\n      // draw repetitions of freeze body\n      for (let i = 1; i <= repetitions; i++) {\n        let bodyHeight = FREEZE_BODY_HEIGHT;\n        let bodyFrameY = 0;\n        let bodyDestY =\n          destY -\n          (totalBodyHeight +\n            ARROW_HEIGHT / 2 -\n            originalPartialHeight -\n            FREEZE_BODY_HEIGHT * (i - 1));\n        if (bodyDestY < 0 && bodyDestY > -FREEZE_BODY_HEIGHT) {\n          bodyHeight += bodyDestY;\n          bodyFrameY -= bodyDestY;\n          bodyDestY = 0;\n        }\n        if (\n          bodyDestY > -bodyHeight &&\n          bodyDestY < bottomBoundary &&\n          appearance !== \"stealth\"\n        ) {\n          c.drawImage(\n            arrowBodyImg,\n            0,\n            bodyFrameY,\n            ARROW_WIDTH,\n            bodyHeight,\n            destX,\n            scroll === \"reverse\"\n              ? getReverseCoord(\n                  bodyDestY + ARROW_HEIGHT / 2,\n                  bodyHeight,\n                  canvas\n                )\n              : bodyDestY + ARROW_HEIGHT / 2,\n            ARROW_WIDTH,\n            bodyHeight\n          );\n        }\n      }\n\n      let tailHeight = ARROW_HEIGHT;\n\n      // if the freeze is shorter than the height of the tail sprite,\n      // cut off the top of the sprite such that it starts at the midpoint of the freeze head\n\n      // Because we need to overwrite destY for proper sprite placement in the event that the\n      // top of the sprite needs to be cut off, store the actual Y position of the arrow\n      // in a separate variable\n      let actualDestY = destY;\n\n      if (\n        this.holdBeats[directionIdx] * ARROW_HEIGHT * speed <\n        ARROW_HEIGHT / 2\n      ) {\n        const tailPartialHeight =\n          this.holdBeats[directionIdx] * ARROW_HEIGHT * speed; // distance between head note and tail note\n        frameY += ARROW_HEIGHT / 2 - tailPartialHeight;\n        destY += ARROW_HEIGHT / 2 - tailPartialHeight;\n        tailHeight = tailPartialHeight + ARROW_HEIGHT / 2;\n      }\n\n      // shrink in size once it reaches the target\n      if (destY < ARROW_HEIGHT / 2 && destY > topBoundary) {\n        frameY += ARROW_HEIGHT / 2 - destY;\n        destY = ARROW_HEIGHT / 2;\n      }\n\n      if (\n        actualDestY > topBoundary &&\n        actualDestY < bottomBoundary &&\n        appearance !== \"stealth\"\n      ) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          frameY,\n          ARROW_WIDTH,\n          tailHeight,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(destY, tailHeight, canvas)\n            : destY,\n          ARROW_WIDTH,\n          tailHeight\n        );\n      }\n\n      // render head of held freeze arrow on top of the arrow body\n      if (freezeBeingHeld) {\n        const arrowHeadImg = arrowImages.freeze_head;\n        c.drawImage(\n          arrowHeadImg,\n          DIRECTIONS.indexOf(direction) * ARROW_WIDTH,\n          ARROW_HEIGHT * 2,\n          ARROW_WIDTH,\n          ARROW_HEIGHT,\n          directionIdx * ARROW_WIDTH,\n          scroll === \"reverse\" ? getReverseCoord(0, ARROW_HEIGHT, canvas) : 0,\n          ARROW_WIDTH,\n          ARROW_HEIGHT\n        );\n      }\n    }\n\n    this.previousBeatPosition = this.currentBeatPosition(beatTick);\n  }\n\n  renderArrow(canvas, beatTick, directionIdx, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods } = attrs;\n    const { speed, noteskin, colorFreezes, scroll, appearance } = mods;\n\n    const topBoundary = 0; // used to simulate the arrows being hit and disappearing\n    const bottomBoundary = canvas.height; // can be adjusted with SUDDEN+\n\n    // nothing\n    if (this.note[directionIdx] === \"0\") return;\n\n    // stealth\n    if (appearance === \"stealth\") return;\n\n    let arrowImg;\n    let frameX, frameY, destX, destY;\n    const direction = DIRECTIONS[directionIdx % 4];\n\n    // regular note\n    if (\n      this.note[directionIdx] === \"1\" ||\n      (this.note[directionIdx] === \"2\" && colorFreezes)\n    ) {\n      // console.log(\"arrow\", directionIdx);\n      arrowImg = arrowImages[`${noteskin}_${direction}`];\n\n      // color as freeze head if it is hit simultaneously with a freeze arrow\n      if (this.note.includes(\"2\") && !colorFreezes) {\n        arrowImg = arrowImages.freeze_head;\n        frameX = DIRECTIONS.indexOf(direction) * ARROW_WIDTH;\n        frameY = 0;\n      } else {\n        if (noteskin === \"rainbow\") {\n          frameX = (Math.floor(beatTick * 4) % 8) * ARROW_WIDTH;\n\n          const beatD = this.measureD / 4;\n          const beatN = this.measureN % beatD;\n          if (beatN === 0) {\n            frameY = 0;\n          } else if (0 < beatN && beatN <= beatD / 4) {\n            frameY = 1;\n          } else if (beatD / 4 < beatN && beatN <= beatD / 2) {\n            frameY = 2;\n          } else if (beatD / 2 < beatN && beatN <= (3 * beatD) / 4) {\n            frameY = 3;\n          } else if ((3 * beatD) / 4 < beatN && beatN < beatD) {\n            frameY = 0;\n          }\n          frameY *= ARROW_HEIGHT;\n        } else if (noteskin === \"note\") {\n          frameX = (Math.floor(beatTick * 4) % 8) * ARROW_WIDTH;\n\n          /* \n              NOTE: In the future, if we want to support color codes for 12ths, 24ths, etc.\n              We need to use more precise math to avoid rounding errors.\n              Planned approach: Reduce the measure fraction by dividing both numerator and denominator\n              by their greatest common factor.\n              If GCF == 1, 2, or 4, use 4th note quantization.\n              Otherwise, the resulting denominator is used for the quantization (3 and 6 may be treated as 12ths)\n            */\n          const measureFraction = this.measureN / this.measureD;\n          if ([0, 1 / 4, 2 / 4, 3 / 4].includes(measureFraction)) {\n            frameY = 0;\n          } else if ([1 / 8, 3 / 8, 5 / 8, 7 / 8].includes(measureFraction)) {\n            frameY = 1;\n          } else if (\n            [\n              1 / 16,\n              3 / 16,\n              5 / 16,\n              7 / 16,\n              9 / 16,\n              11 / 16,\n              13 / 16,\n              15 / 16,\n            ].includes(measureFraction)\n          ) {\n            frameY = 3;\n          } else {\n            frameY = 2;\n          }\n          frameY *= ARROW_HEIGHT;\n        } else if (noteskin === \"vivid\") {\n          frameX = (Math.floor(beatTick * 4) % 4) * ARROW_WIDTH;\n\n          const beatD = this.measureD / 4;\n          const beatN = this.measureN % beatD;\n          const noteOffset = Math.floor(beatTick) % 4;\n\n          if (beatN === 0) {\n            frameY = 0;\n          } else if (0 < beatN && beatN <= beatD / 4) {\n            frameY = 1;\n          } else if (beatD / 4 < beatN && beatN <= beatD / 2) {\n            frameY = 2;\n          } else if (beatD / 2 < beatN && beatN <= (3 * beatD) / 4) {\n            frameY = 3;\n          } else if ((3 * beatD) / 4 < beatN && beatN < beatD) {\n            frameY = 0;\n          }\n          frameY = ((frameY + noteOffset) % 4) * ARROW_HEIGHT;\n        } else if (noteskin === \"flat\") {\n          arrowImg = arrowImages[`vivid_${direction}`];\n\n          frameX = (Math.floor(beatTick * 4) % 4) * ARROW_WIDTH;\n          frameY = (Math.floor(beatTick) % 4) * ARROW_HEIGHT;\n        }\n      }\n\n      destX = directionIdx * ARROW_WIDTH;\n      destY = this.currentBeatPosition(beatTick) * ARROW_HEIGHT * speed;\n      destY = (destY + 0.5) | 0;\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          frameY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(destY, ARROW_HEIGHT, canvas)\n            : destY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT\n        );\n        // console.log(destY);\n      }\n    }\n\n    // freeze note\n    else if (this.note[directionIdx] === \"2\") {\n      arrowImg = arrowImages.freeze_head;\n      frameX = DIRECTIONS.indexOf(direction) * ARROW_WIDTH;\n      frameY = 0;\n\n      destX = directionIdx * ARROW_WIDTH;\n      destY = this.currentBeatPosition(beatTick) * ARROW_HEIGHT * speed;\n      destY = (destY + 0.5) | 0;\n\n      // draw freeze head\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          frameY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(destY, ARROW_HEIGHT, canvas)\n            : destY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT\n        );\n        // console.log(destY);\n      }\n    }\n\n    this.previousBeatPosition = this.currentBeatPosition(beatTick);\n  }\n}\n\nexport default Arrow;\n","import { DIRECTIONS, ARROW_WIDTH, ARROW_HEIGHT } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst arrowImages = {};\nDIRECTIONS.forEach((direction) => {\n  arrowImages[`shock_${direction}`] = new Image();\n  arrowImages[`shock_${direction}`].src = getAssetPath(\n    `shock_${direction}.png`\n  );\n});\n\nclass ShockArrow {\n  constructor(attrs) {\n    const { key } = attrs;\n\n    this.key = key;\n    this.note = attrs.note;\n\n    // this.currentBeatPosition = attrs.currentBeatPosition;\n    this.originalBeatPosition = attrs.originalBeatPosition;\n  }\n\n  currentBeatPosition(beatTick) {\n    return this.originalBeatPosition - beatTick;\n  }\n\n  render(canvas, frame, beatTick, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods } = attrs;\n    const { speed, scroll, appearance } = mods;\n\n    if (appearance === \"stealth\") return;\n\n    const topBoundary = -ARROW_HEIGHT; // used to simulate the arrows being hit and disappearing\n    const bottomBoundary = canvas.height;\n    frame = Math.floor(frame / 3) % 8; // each sprite frame lasts 3 canvas animation frames\n\n    for (let i = 0; i < this.note.length; i++) {\n      if (this.note[i] !== \"M\") continue;\n      const direction = DIRECTIONS[i % 4];\n      const arrowImg = arrowImages[`shock_${direction}`];\n      const frameX = (frame % 4) * ARROW_WIDTH;\n      const frameY = Math.floor(frame / 4) * ARROW_HEIGHT;\n      const destX = i * ARROW_WIDTH;\n      const destY = this.currentBeatPosition(beatTick) * ARROW_HEIGHT * speed;\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        c.drawImage(\n          arrowImg,\n          frameX,\n          frameY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT,\n          destX,\n          scroll === \"reverse\"\n            ? getReverseCoord(destY, ARROW_HEIGHT, canvas)\n            : destY,\n          ARROW_WIDTH,\n          ARROW_HEIGHT\n        );\n      }\n    }\n  }\n}\n\nexport default ShockArrow;\n","import { DIRECTIONS, ARROW_HEIGHT, ARROW_WIDTH } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst flashImages = {};\nDIRECTIONS.forEach((direction) => {\n  flashImages[direction] = new Image();\n  flashImages[direction].src = getAssetPath(`${direction}_tap_flash.png`);\n  flashImages[direction] = new Image();\n  flashImages[direction].src = getAssetPath(`${direction}_tap_flash.png`);\n});\n\nconst receptorImages = {};\nDIRECTIONS.forEach((direction) => {\n  receptorImages[direction] = new Image();\n  receptorImages[direction].src = getAssetPath(`${direction}_tap_receptor.png`);\n  receptorImages[direction] = new Image();\n  receptorImages[direction].src = getAssetPath(`${direction}_tap_receptor.png`);\n});\n\nclass StepZone {\n  constructor(attrs) {}\n\n  render(canvas, beatTick, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mode, mods } = attrs;\n    const { scroll } = mods;\n\n    // flash starts at the beginning of the quarter beat and lasts for 1/16 beat\n    const isFlash = beatTick % 1 > 0 && beatTick % 1 < 0.25;\n\n    DIRECTIONS.forEach((direction, i) => {\n      c.drawImage(\n        isFlash ? flashImages[direction] : receptorImages[direction],\n        0,\n        0,\n        ARROW_WIDTH,\n        ARROW_HEIGHT,\n        i * ARROW_WIDTH,\n        scroll === \"reverse\" ? getReverseCoord(0, ARROW_HEIGHT, canvas) : 0,\n        ARROW_WIDTH,\n        ARROW_HEIGHT\n      );\n\n      if (mode === \"double\") {\n        c.drawImage(\n          isFlash ? flashImages[direction] : receptorImages[direction],\n          0,\n          0,\n          ARROW_WIDTH,\n          ARROW_HEIGHT,\n          (i + 4) * ARROW_WIDTH,\n          scroll === \"reverse\" ? getReverseCoord(0, ARROW_HEIGHT, canvas) : 0,\n          ARROW_WIDTH,\n          ARROW_HEIGHT\n        );\n      }\n    });\n  }\n}\n\nexport default StepZone;\n","import { ARROW_HEIGHT } from \"../../../constants\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nclass Guidelines {\n  constructor(finalBeat) {\n    this.finalBeat = finalBeat;\n  }\n\n  render(canvas, beatTick, attrs) {\n    const { mods } = attrs;\n    const { speed, scroll } = mods;\n\n    const showGuidelines = mods.guidelines;\n    if (!showGuidelines) return;\n\n    const c = canvas.getContext(\"2d\");\n    c.strokeStyle = \"#fff\";\n\n    const topBoundary = 0;\n    const bottomBoundary = canvas.height;\n\n    for (let beat = 0; beat <= this.finalBeat; beat++) {\n      let destY = (beat - beatTick) * ARROW_HEIGHT * speed + ARROW_HEIGHT / 2;\n\n      destY = (destY + 0.5) | 0;\n\n      // Render a thick line if the beat falls on the beginning of the measure.\n      // Render a thin line otherwise\n      const lineWidth = beat % 4 === 0 ? 2 : 1;\n\n      if (destY > topBoundary && destY < bottomBoundary) {\n        if (scroll === \"reverse\") {\n          destY = getReverseCoord(destY, 0, canvas);\n        }\n        // console.log(destY);\n        c.beginPath();\n        c.moveTo(0, destY);\n        c.lineTo(canvas.width, destY);\n        c.lineWidth = lineWidth;\n        c.stroke();\n      }\n    }\n  }\n}\n\nexport default Guidelines;\n","import {\n  DIRECTIONS,\n  ARROW_WIDTH,\n  ARROW_HEIGHT,\n  MARVELOUS_FLASH_FRAMES,\n} from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst image = new Image();\nimage.src = getAssetPath(\"tap_explosion.png\");\n\nclass TargetFlash {\n  constructor(arrow) {\n    this.frame = -1;\n\n    this.directions = [];\n    arrow.note.forEach((note, directionIdx) => {\n      if (note === \"1\" || note === \"2\" || note === \"3\") {\n        this.directions.push(directionIdx);\n      }\n    });\n  }\n\n  render(canvas, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods } = attrs;\n    const { scroll } = mods;\n\n    this.directions.forEach((directionIdx) => {\n      if (this.frame < 0 || this.frame >= MARVELOUS_FLASH_FRAMES) return;\n      const destX = directionIdx * ARROW_WIDTH;\n\n      c.save();\n      c.globalAlpha = 1 - Math.pow(this.frame / MARVELOUS_FLASH_FRAMES, 3);\n      c.drawImage(\n        image,\n        0,\n        0,\n        ARROW_WIDTH,\n        ARROW_HEIGHT,\n        destX - this.frame,\n        scroll === \"reverse\"\n          ? getReverseCoord(0 + this.frame, ARROW_HEIGHT, canvas)\n          : 0 - this.frame,\n        ARROW_WIDTH + this.frame * 2,\n        ARROW_HEIGHT + this.frame * 2\n      );\n      c.restore();\n    });\n  }\n}\n\nexport default TargetFlash;\n","import { getAssetPath } from \"../../../utils\";\n\nconst comboImages = {};\n\n[\"A20\", \"A\"].forEach((type) => {\n  comboImages[type] = {\n    num: new Image(),\n    combo: new Image(),\n  };\n  comboImages[type].num.src = getAssetPath(`combo_numbers_${type}.png`);\n  comboImages[type].combo.src = getAssetPath(`combo_${type}.png`);\n});\n\ncomboImages[\"A20\"].coords = {\n  1: {\n    combo: { destX: 104, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [51], destY: 170, width: 63, height: 70 },\n  },\n  2: {\n    combo: { destX: 114, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [17, 61], destY: 170, width: 63, height: 70 },\n  },\n  3: {\n    combo: { destX: 134, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [-7, 37, 81], destY: 170, width: 63, height: 70 },\n  },\n  4: {\n    combo: { destX: 134, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [-51, -7, 37, 81], destY: 170, width: 63, height: 70 },\n  },\n};\n\ncomboImages[\"A\"].coords = {\n  1: {\n    combo: { destX: 104, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [51], destY: 170, width: 63, height: 70 },\n  },\n  2: {\n    combo: { destX: 114, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [17, 61], destY: 170, width: 63, height: 70 },\n  },\n  3: {\n    combo: { destX: 134, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [-7, 37, 81], destY: 170, width: 63, height: 70 },\n  },\n  4: {\n    combo: { destX: 134, destY: 195, width: 124.5, height: 41 },\n    num: { destX: [-51, -7, 37, 81], destY: 170, width: 63, height: 70 },\n  },\n};\n\nconst doubleXOffset = 128;\n\nclass ComboDisplay {\n  constructor(attrs) {}\n\n  render(canvas, comboNum = 0, attrs) {\n    const c = canvas.getContext(\"2d\");\n    if (comboNum < 4) return;\n\n    const { mods, mode } = attrs;\n    const { comboFont } = mods;\n\n    let type = comboFont;\n\n    comboNum = comboNum.toString();\n    const numDigits = comboNum.length;\n    // console.log(\"comboNum\", comboNum, \"numDigits\", numDigits);\n\n    const comboImg = comboImages[type].combo;\n    const numImg = comboImages[type].num;\n\n    const comboDestX =\n      comboImages[type].coords[numDigits].combo.destX +\n      (mode === \"double\" ? doubleXOffset : 0);\n    const comboDestY = comboImages[type].coords[numDigits].combo.destY;\n    const comboWidth = comboImages[type].coords[numDigits].combo.width;\n    const comboHeight = comboImages[type].coords[numDigits].combo.height;\n\n    // draw combo word\n    c.drawImage(\n      comboImg,\n      0,\n      0,\n      comboImg.width,\n      comboImg.height,\n      comboDestX,\n      comboDestY,\n      comboWidth,\n      comboHeight\n    );\n\n    // draw combo number\n    for (let i = 0; i < numDigits; i++) {\n      const digit = comboNum[i];\n\n      const digitWidth = numImg.width / 4;\n      const digitHeight = numImg.height / 4;\n      const imageCol = digit % 4;\n      const imageRow = Math.floor(digit / 4);\n      const imageX = imageCol * digitWidth;\n      const imageY = imageRow * digitHeight;\n\n      const numDestX =\n        comboImages[type].coords[numDigits].num.destX[i] +\n        (mode === \"double\" ? doubleXOffset : 0);\n      const numDestY = comboImages[type].coords[numDigits].num.destY;\n      const numWidth = comboImages[type].coords[numDigits].num.width;\n      const numHeight = comboImages[type].coords[numDigits].num.height;\n\n      // console.log(\n      //   `digit ${digit}, i ${i}, imageX ${imageX}, imageY ${imageY}, numDestX ${numDestX}, numDestY ${numDestY}, numWidth ${numWidth}, numHeight ${numHeight}`\n      // );\n\n      c.drawImage(\n        numImg,\n        imageX,\n        imageY,\n        digitWidth,\n        digitHeight,\n        numDestX,\n        numDestY,\n        numWidth,\n        numHeight\n      );\n    }\n  }\n}\n\nexport default ComboDisplay;\n","import { ARROW_WIDTH } from \"../../../constants\";\nimport { getAssetPath } from \"../../../utils\";\nimport { getReverseCoord } from \"../../../utils/engineUtils\";\n\nconst images = {};\n\nimages.upper = new Image();\nimages.upper.src = getAssetPath(\"upper_lanecover.png\");\nimages.lower = new Image();\nimages.lower.src = getAssetPath(\"lower_lanecover.png\");\n\nconst appearanceIdx = [\"hidden\", \"sudden\", \"hiddensudden\"];\n\nclass LaneCover {\n  constructor(attrs) {}\n\n  render(canvas, attrs) {\n    const c = canvas.getContext(\"2d\");\n\n    const { mods, mode } = attrs;\n    const { appearance, scroll } = mods;\n    const laneCoverHeight =\n      mods.laneCoverHeight[appearanceIdx.indexOf(appearance)];\n\n    if (\n      (appearance.includes(\"hidden\") && scroll === \"normal\") ||\n      (appearance.includes(\"sudden\") && scroll === \"reverse\")\n    ) {\n      let img = images.upper;\n      c.drawImage(\n        img,\n        0,\n        getReverseCoord(laneCoverHeight, 0, canvas),\n        img.width,\n        laneCoverHeight,\n        0,\n        0,\n        img.width,\n        laneCoverHeight\n      );\n\n      if (mode === \"double\") {\n        c.drawImage(\n          img,\n          0,\n          getReverseCoord(laneCoverHeight, 0, canvas),\n          img.width,\n          laneCoverHeight,\n          ARROW_WIDTH * 4,\n          0,\n          img.width,\n          laneCoverHeight\n        );\n      }\n    }\n    if (\n      (appearance.includes(\"sudden\") && scroll === \"normal\") ||\n      (appearance.includes(\"hidden\") && scroll === \"reverse\")\n    ) {\n      let img = images.lower;\n      c.drawImage(\n        img,\n        0,\n        0,\n        img.width,\n        laneCoverHeight,\n        0,\n        getReverseCoord(laneCoverHeight, 0, canvas),\n        img.width,\n        laneCoverHeight\n      );\n\n      if (mode === \"double\") {\n        c.drawImage(\n          img,\n          0,\n          0,\n          img.width,\n          laneCoverHeight,\n          ARROW_WIDTH * 4,\n          getReverseCoord(laneCoverHeight, 0, canvas),\n          img.width,\n          laneCoverHeight\n        );\n      }\n    }\n  }\n}\n\nexport default LaneCover;\n","const modeRegex = /dance-([a-z]+)/;\nconst difficultyRegex = /(Beginner|Easy|Medium|Hard|Challenge|Edit)/;\n\nconst difficultyMap = {\n  Beginner: \"Beginner\",\n  Easy: \"Basic\",\n  Medium: \"Difficult\",\n  Hard: \"Expert\",\n  Challenge: \"Challenge\",\n};\n\nconst parseSimfile = (sm, simfileType = \"sm\") => {\n  const simfiles = {};\n\n  const chartMetadata = sm.slice(\n    0,\n    sm.indexOf(simfileType === \"ssc\" ? \"#NOTEDATA:\" : \"#NOTES:\")\n  );\n\n  let bpms = [];\n  let stops = [];\n\n  // default bpms\n  if (/#BPMS:/i.test(chartMetadata)) {\n    bpms = /#BPMS:([\\s\\S]*?)\\s*;/i.exec(chartMetadata)[1];\n    if (bpms.length) {\n      bpms = bpms.split(\",\").map((point) => {\n        const [beat, value] = point.split(\"=\");\n        return { beat: parseFloat(beat), value: parseFloat(value) };\n      });\n    }\n  }\n  // default stops\n  if (/#STOPS:/i.test(chartMetadata)) {\n    stops = /#STOPS:([\\s\\S]*?)\\s*;/i.exec(chartMetadata)[1];\n    if (stops.length) {\n      stops = stops.split(\",\").map((point) => {\n        const [beat, value] = point.split(\"=\");\n        return { beat: parseFloat(beat), value: parseFloat(value) };\n      });\n    }\n  }\n\n  let chartStrs;\n\n  if (simfileType === \"ssc\") {\n    chartStrs = sm\n      .slice(sm.indexOf(\"#NOTEDATA:\"))\n      .split(/#NOTEDATA:\\s*;/)\n      .slice(1);\n  } else {\n    chartStrs = sm\n      .slice(sm.indexOf(\"#NOTES:\"))\n      .split(/#NOTES:\\s+/)\n      .slice(1);\n  }\n\n  chartStrs.forEach((chartStr) => {\n    const mode = modeRegex.exec(chartStr)[1]; // single or double\n\n    let smDifficulty = difficultyRegex.exec(chartStr)[1];\n    const difficulty = difficultyMap[smDifficulty];\n\n    simfiles[`${mode}_${difficulty}`] = { difficulty, mode, bpms, stops };\n    const simfile = simfiles[`${mode}_${difficulty}`];\n\n    let level;\n    if (simfileType === \"ssc\") {\n      level = /#METER:([0-9]+);/.exec(chartStr)[1];\n    } else {\n      const levelRegex = new RegExp(`${smDifficulty}:\\\\s+([0-9]+):`);\n      level = parseInt(levelRegex.exec(chartStr)[1]);\n    }\n    simfile.level = level;\n\n    if (simfileType === \"ssc\") {\n      // check for different bpms\n      if (/#BPMS:/i.test(chartStr)) {\n        bpms = /#BPMS:([\\s\\S]*?)\\s*;/i.exec(chartStr)[1];\n        if (bpms.length) {\n          bpms = bpms.split(\",\").map((point) => {\n            const [beat, value] = point.split(\"=\");\n            return { beat: parseFloat(beat), value: parseFloat(value) };\n          });\n          simfile.bpms = bpms;\n        }\n      }\n\n      // check for different stops\n      if (/#STOPS:/i.test(chartStr)) {\n        stops = /#STOPS:([\\s\\S]*?)\\s*;/i.exec(chartStr)[1];\n        if (stops.length) {\n          stops = stops.split(\",\").map((point) => {\n            const [beat, value] = point.split(\"=\");\n            return { beat: parseFloat(beat), value: parseFloat(value) };\n          });\n          simfile.stops = stops;\n        }\n      }\n    }\n\n    const measures = chartStr\n      .slice(chartStr.lastIndexOf(\":\") + 1, chartStr.lastIndexOf(\";\"))\n      .trim()\n      .split(\",\")\n      .map((measure, measureIdx) => {\n        const ticks = measure\n          .trim()\n          .split(\"\\r\\n\")\n          .filter((n) => !n.startsWith(\"//\")); // filter out comment lines\n\n        const numTicks = ticks.length;\n\n        const noteObjects = [];\n        ticks.forEach((tick, tickIdx) => {\n          // skip empty ticks and comment lines\n          if (!tick.split(\"\").filter((n) => n !== \"0\").length) return;\n\n          const noteObj = {};\n          noteObj.note = tick;\n          noteObj.measureIdx = measureIdx; // index of the measure relative to the whole song (starting at 0)\n          noteObj.measureN = tickIdx; // numerator of the fraction describing where note falls in this measure\n          noteObj.measureD = numTicks; // denominator of the fraction describing where note falls in this measure\n\n          noteObjects.push(noteObj);\n        });\n\n        return noteObjects;\n      });\n\n    simfile.chart = measures;\n  });\n\n  return simfiles;\n};\n\nexport default parseSimfile;\n","import * as actions from \"../actions/AudioActions\";\n\nconst initialState = {\n  chartAudio: {\n    status: \"stopped\",\n    progress: 0,\n  },\n  previewAudio: {\n    status: \"stopped\",\n  },\n};\n\nexport const audio = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_CHART_AUDIO_STATUS: {\n      const chartAudio = { ...state.chartAudio, status: action.payload };\n      return { ...state, chartAudio };\n    }\n    case actions.PLAY_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"playing\" };\n      return { ...state, chartAudio };\n    }\n    case actions.PAUSE_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"paused\" };\n      return { ...state, chartAudio };\n    }\n    case actions.STOP_CHART_AUDIO: {\n      const chartAudio = { ...state.chartAudio, status: \"stopped\" };\n      return { ...state, chartAudio };\n    }\n    case actions.PLAY_PREVIEW_AUDIO: {\n      const previewAudio = { ...state.previewAudio, status: \"playing\" };\n      return { ...state, previewAudio };\n    }\n    case actions.STOP_PREVIEW_AUDIO: {\n      const previewAudio = { ...state.previewAudio, status: \"stopped\" };\n      return { ...state, previewAudio };\n    }\n    case actions.SET_CHART_PROGRESS: {\n      const chartAudio = { ...state.chartAudio, progress: action.payload };\n      return { ...state, chartAudio };\n    }\n    default:\n      return state;\n  }\n};\n","export const SET_BPM_CHANGE_QUEUE = \"SET_BPM_CHANGE_QUEUE\";\nexport const CHANGE_ACTIVE_BPM_DISPLAY = \"CHANGE_ACTIVE_BPM_DISPLAY\";\nexport const SET_COMBO = \"SET_COMBO\";\n\nexport const setBpmChangeQueue = (payload) => (dispatch) => {\n  dispatch({\n    type: SET_BPM_CHANGE_QUEUE,\n    payload,\n  });\n};\n\nexport const changeActiveBpm = (bpm) => (dispatch) => {\n  dispatch({\n    type: CHANGE_ACTIVE_BPM_DISPLAY,\n    payload: bpm,\n  });\n};\n\nexport const setCombo = (combo) => (dispatch) => {\n  dispatch({\n    type: SET_COMBO,\n    payload: combo,\n  });\n};\n","import * as actions from \"../actions/ChartActions\";\n\nconst initialState = {\n  activeBpm: null,\n  bpmChangeQueue: [],\n  combo: 0,\n};\n\nexport const chart = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_BPM_CHANGE_QUEUE: {\n      return { ...state, bpmChangeQueue: [...action.payload] };\n    }\n    case actions.CHANGE_ACTIVE_BPM_DISPLAY: {\n      // const activeBpm = action.payload;\n      const activeBpm = Math.round(action.payload);\n      return { ...state, activeBpm };\n    }\n    case actions.SET_COMBO: {\n      return { ...state, combo: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n","export const UPDATE_MODS = \"UPDATE_MODS\";\nexport const UPDATE_LANE_COVER_HEIGHT = \"UPDATE_LANE_COVER_HEIGHT\";\n\nexport const updateMods = (mods) => (dispatch) => {\n  dispatch({\n    type: UPDATE_MODS,\n    payload: mods,\n  });\n};\n\nexport const updateLaneCoverHeight = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_LANE_COVER_HEIGHT,\n    payload,\n  });\n};\n","export const getUserSettings = () => {\n  try {\n    const settings = window.localStorage.getItem(\"userSettings\");\n    if (settings) {\n      return JSON.parse(settings);\n    }\n    return {};\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport const updateUserSettings = (newSettings) => {\n  let settings = window.localStorage.getItem(\"userSettings\");\n  try {\n    if (settings) {\n      settings = JSON.parse(settings);\n    } else {\n      settings = {};\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  Object.keys(newSettings).forEach((key) => {\n    settings[key] = newSettings[key];\n  });\n  window.localStorage.setItem(\"userSettings\", JSON.stringify(settings));\n};\n\nexport const getSavedSongProgress = () => {\n  return window.localStorage.getItem(\"progress\") || 0;\n};\n\nexport const saveSongProgress = (progress) => {\n  window.localStorage.setItem(\"progress\", progress);\n};\n","import { presetParams } from \"../../utils\";\nimport { getUserSettings } from \"../../utils/userSettings\";\n\nexport const options = {\n  difficulty: [\"Beginner\", \"Basic\", \"Difficult\", \"Expert\", \"Challenge\"],\n  mode: [\"single\", \"double\"],\n  mods: {\n    speed: [\n      0.25,\n      0.5,\n      0.75,\n      1,\n      1.25,\n      1.5,\n      1.75,\n      2,\n      2.25,\n      2.5,\n      2.75,\n      3,\n      3.25,\n      3.5,\n      3.75,\n      4,\n      4.5,\n      5,\n      5.5,\n      6,\n      6.5,\n      7,\n      7.5,\n      8,\n    ],\n    appearance: [\"visible\", \"hidden\", \"sudden\", \"hiddensudden\", \"stealth\"],\n    turn: [\"off\", \"mirror\", \"left\", \"right\", \"shuffle\"],\n    shuffle: [1, 2, 3, 4, 5, 6, 7, 8],\n    stepZone: [\"on\", \"off\"],\n    scroll: [\"normal\", \"reverse\"],\n    noteskin: [\"rainbow\", \"note\", \"vivid\", \"flat\"],\n    comboDisplay: [\"behind\", \"inFront\", \"hidden\"],\n    comboFont: [\"A20\", \"A\"],\n  },\n};\n\n// Default values when user opens app for the first time\nconst optionDefaultValues = {\n  difficulty: \"Challenge\",\n  mode: \"single\",\n  mods: {\n    speed: 3,\n    appearance: \"visible\",\n    laneCoverHeight: [8, 8, 8],\n    laneCoverVisible: true,\n    turn: \"off\",\n    shuffle: 1,\n    stepZone: \"on\",\n    scroll: \"normal\",\n    noteskin: \"note\",\n    guidelines: true,\n    comboDisplay: \"behind\",\n    comboFont: \"A20\",\n    colorFreezes: false,\n  },\n};\n\n// Values stored in localStorage user settings override default values\nconst userSettings = getUserSettings();\n[\"song\", \"difficulty\", \"mode\"].forEach((key) => {\n  if (userSettings[key]) {\n    optionDefaultValues[key] = userSettings[key];\n  }\n});\n\nif (userSettings.mods) {\n  Object.keys(optionDefaultValues.mods).forEach((mod) => {\n    if (typeof userSettings.mods[mod] !== \"undefined\") {\n      optionDefaultValues.mods[mod] = userSettings.mods[mod];\n    }\n  });\n}\n\n// Preset params in the url override default values AND user settings\nif (presetParams.difficulty) {\n  const difficulties = {\n    b: \"Beginner\",\n    B: \"Basic\",\n    D: \"Difficult\",\n    E: \"Expert\",\n    C: \"Challenge\",\n  };\n  if (Object.keys(difficulties).includes(presetParams.difficulty[0])) {\n    optionDefaultValues.difficulty = difficulties[presetParams.difficulty[0]];\n  }\n  if (presetParams.difficulty[1] === \"S\") {\n    optionDefaultValues.mode = \"single\";\n  } else if (presetParams.difficulty[1] === \"D\") {\n    optionDefaultValues.mode = \"double\";\n  }\n}\nif (presetParams.speed) {\n  const value = parseFloat(\n    `${presetParams.speed[0]}.${presetParams.speed.slice(1)}`\n  );\n  if (options.mods.speed.includes(value)) {\n    optionDefaultValues.mods.speed = value;\n  }\n}\nif (presetParams.turn) {\n  const turnValue = presetParams.turn.toLowerCase();\n  if (options.mods.turn.includes(turnValue)) {\n    optionDefaultValues.mods.turn = turnValue;\n  }\n}\n\nexport { optionDefaultValues };\n","import * as actions from \"../actions/ModsActions\";\nimport { optionDefaultValues } from \"../components/form/options\";\nimport { updateUserSettings } from \"../utils/userSettings\";\n\nconst initialState = optionDefaultValues.mods;\n\nexport const mods = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.UPDATE_MODS: {\n      const updatedMods = action.payload;\n      const updatedState = { ...state, ...updatedMods };\n      updateUserSettings({ mods: updatedState });\n      return updatedState;\n    }\n    case actions.UPDATE_LANE_COVER_HEIGHT: {\n      const { diff, canvasHeight } = action.payload;\n      const laneCoverHeight = [...state.laneCoverHeight];\n\n      // don't let lane covers go beyond the chart area boundary\n      let lowerBoundary = 0;\n      let upperBoundary = canvasHeight;\n      if (state.appearance === \"hiddensudden\") upperBoundary /= 2;\n      for (let i = 0; i < laneCoverHeight.length; i++) {\n        laneCoverHeight[i] += diff[i];\n        const height = laneCoverHeight[i];\n        if (height < lowerBoundary) laneCoverHeight[i] = lowerBoundary;\n        else if (height > upperBoundary) laneCoverHeight[i] = upperBoundary;\n      }\n\n      const updatedState = { ...state, laneCoverHeight };\n      updateUserSettings({ mods: updatedState });\n      return updatedState;\n    }\n    default:\n      return state;\n  }\n};\n","import * as actions from \"../actions/ScreenActions\";\nimport { getUserSettings, updateUserSettings } from \"../utils/userSettings\";\n\nconst userSettings = getUserSettings();\nconst initialState = {\n  innerWidth: window.innerWidth,\n  innerHeight: window.innerHeight,\n  activeView: userSettings.activeView || \"song\",\n};\n\nexport const screen = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.RESIZE_SCREEN: {\n      const { target } = action.payload;\n      const { innerWidth, innerHeight } = target;\n\n      const values = { innerWidth, innerHeight };\n\n      return { ...state, ...values };\n    }\n    case actions.SET_ACTIVE_VIEW: {\n      const activeView = action.payload;\n      updateUserSettings({ activeView });\n      return { ...state, activeView };\n    }\n    default:\n      return state;\n  }\n};\n","export const SELECT_SONG = \"SELECT_SONG\";\nexport const SELECT_DIFFICULTY = \"SELECT_DIFFICULTY\";\nexport const SELECT_MODE = \"SELECT_MODE\";\n\nexport const selectSong = (song) => (dispatch) => {\n  dispatch({\n    type: SELECT_SONG,\n    payload: song,\n  });\n};\n\nexport const selectDifficulty = (difficulty) => (dispatch) => {\n  dispatch({\n    type: SELECT_DIFFICULTY,\n    payload: difficulty,\n  });\n};\n\nexport const selectMode = (mode) => (dispatch) => {\n  dispatch({\n    type: SELECT_MODE,\n    payload: mode,\n  });\n};\n","import * as actions from \"../actions/SongSelectActions\";\nimport { optionDefaultValues } from \"../components/form/options\";\nimport { updateUserSettings } from \"../utils/userSettings\";\n\nconst initialState = {\n  difficulty: optionDefaultValues.difficulty,\n  mode: optionDefaultValues.mode,\n};\n\nexport const songSelect = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SELECT_SONG: {\n      const song = action.payload;\n      updateUserSettings({ song: song.hash });\n      return { ...state, song };\n    }\n    case actions.SELECT_DIFFICULTY: {\n      const difficulty = action.payload;\n      updateUserSettings({ difficulty });\n      return { ...state, difficulty };\n    }\n    case actions.SELECT_MODE: {\n      const mode = action.payload;\n      updateUserSettings({ mode });\n      return { ...state, mode };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport { audio } from \"./AudioReducer\";\nimport { chart } from \"./ChartReducer\";\nimport { mods } from \"./ModsReducer\";\nimport { screen } from \"./ScreenReducer\";\nimport { songSelect } from \"./SongSelectReducer\";\n\nexport default combineReducers({ audio, chart, mods, screen, songSelect });\n","export const PLAY_CHART_AUDIO = \"PLAY_CHART_AUDIO\";\nexport const PAUSE_CHART_AUDIO = \"PAUSE_CHART_AUDIO\";\nexport const STOP_CHART_AUDIO = \"STOP_CHART_AUDIO\";\nexport const SET_CHART_AUDIO_STATUS = \"SET_CHART_AUDIO_STATUS\";\n\nexport const PLAY_PREVIEW_AUDIO = \"PLAY_PREVIEW_AUDIO\";\nexport const STOP_PREVIEW_AUDIO = \"STOP_PREVIEW_AUDIO\";\n\nexport const SET_CHART_PROGRESS = \"SET_CHART_PROGRESS\";\n\nexport const setChartAudioStatus = (status) => (dispatch) => {\n  dispatch({\n    type: SET_CHART_AUDIO_STATUS,\n    payload: status,\n  });\n};\n\nexport const playChartAudio = () => (dispatch) => {\n  dispatch({\n    type: PLAY_CHART_AUDIO,\n  });\n};\n\nexport const pauseChartAudio = () => (dispatch) => {\n  dispatch({\n    type: PAUSE_CHART_AUDIO,\n  });\n};\n\nexport const stopChartAudio = () => (dispatch) => {\n  dispatch({\n    type: STOP_CHART_AUDIO,\n  });\n};\n\nexport const playPreviewAudio = () => (dispatch) => {\n  dispatch({\n    type: PLAY_PREVIEW_AUDIO,\n  });\n};\nexport const stopPreviewAudio = () => (dispatch) => {\n  dispatch({\n    type: STOP_PREVIEW_AUDIO,\n  });\n};\n\nexport const setChartProgress = (progress) => (dispatch) => {\n  dispatch({\n    type: SET_CHART_PROGRESS,\n    payload: progress,\n  });\n};\n","export const RESIZE_SCREEN = \"RESIZE_SCREEN\";\nexport const SET_ACTIVE_VIEW = \"SET_ACTIVE_VIEW\";\n\nexport const resizeScreen = (e) => (dispatch) => {\n  dispatch({\n    type: RESIZE_SCREEN,\n    payload: e,\n  });\n};\n\nexport const setActiveView = (view) => (dispatch) => {\n  dispatch({\n    type: SET_ACTIVE_VIEW,\n    payload: view,\n  });\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nexport default store;\n","import { presetParams } from \"../../../utils\";\nimport AudioPlayer from \"../../../core/AudioPlayer\";\n\nclass Progress {\n  constructor() {\n    this.mouseDown = false;\n    this.currentProgress = 0;\n\n    this.presetStart = 0;\n    if (presetParams.progress) {\n      this.presetStart = presetParams.progress / 100000;\n      this.currentProgress = this.presetStart;\n    }\n  }\n\n  initCanvas() {\n    this.canvas = document.querySelector(\"#progress\");\n    this.presetMarker = document.querySelector(\n      \"#progress + .preset-marker-wrapper\"\n    );\n\n    this.drawBackground();\n\n    // mobile scrub behavior\n    this.canvas.addEventListener(\"touchstart\", (e) => {\n      e.preventDefault();\n      this.jumpToProgress(e.touches[0]);\n    });\n    this.canvas.addEventListener(\"touchmove\", (e) => {\n      e.preventDefault();\n      this.jumpToProgress(e.touches[0]);\n    });\n\n    // desktop scrub behavior\n    this.canvas.addEventListener(\"mousedown\", (e) => {\n      e.preventDefault();\n      this.jumpToProgress(e);\n      this.mouseDown = true;\n    });\n    this.canvas.addEventListener(\"mousemove\", (e) => {\n      e.preventDefault();\n      if (this.mouseDown) {\n        this.jumpToProgress(e);\n      }\n    });\n    this.canvas.addEventListener(\"mouseup\", (e) => {\n      e.preventDefault();\n      this.mouseDown = false;\n    });\n\n    this.setPresetMarker();\n    window.addEventListener(\"resize\", (e) => {\n      this.setPresetMarker();\n    });\n  }\n\n  setPresetMarker() {\n    if (!this.presetStart || !this.presetMarker) return;\n    const totalWidth = this.canvas.offsetWidth;\n    this.presetPosition = totalWidth * this.presetStart;\n    this.presetMarker.style.left = `${this.presetPosition}px`;\n  }\n\n  setProgress(progress) {\n    this.currentProgress = progress;\n  }\n  getProgress() {\n    return this.currentProgress;\n  }\n\n  jumpToProgress(event, presetProgress) {\n    let progressPercent;\n\n    if (presetProgress) {\n      progressPercent = presetProgress;\n    } else {\n      const domRect = this.canvas.getBoundingClientRect();\n      const totalWidth = domRect.width;\n      const x = event.clientX - domRect.x;\n      progressPercent = x / totalWidth;\n    }\n\n    if (progressPercent < 0 || progressPercent > 1) return;\n\n    this.setProgress(progressPercent);\n    AudioPlayer.seekProgress(progressPercent);\n  }\n\n  jumpToPresetStart(e) {\n    this.jumpToProgress(e, this.presetStart);\n    e.stopPropagation();\n  }\n\n  drawBackground() {\n    const c = this.canvas.getContext(\"2d\");\n    c.fillStyle = \"#d7e2ed\";\n    c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  render(progress) {\n    if (isNaN(progress)) return;\n\n    this.setProgress(progress);\n\n    this.drawBackground();\n    const c = this.canvas.getContext(\"2d\");\n    c.fillStyle = \"#627c92\";\n    c.fillRect(0, 0, this.canvas.width * progress, this.canvas.height);\n  }\n}\n\nexport default new Progress();\n","import { Howl } from \"howler\";\nimport { gsap } from \"gsap\";\n\nimport store from \"../store\";\nimport * as actions from \"../actions/AudioActions\";\nimport Progress from \"../components/chart/canvas/Progress\";\nimport { changeActiveBpm, setCombo } from \"../actions/ChartActions\";\nimport { getAssetPath } from \"../utils\";\nimport { saveSongProgress } from \"../utils/userSettings\";\nimport {\n  getCurrentBpm,\n  getCurrentCombo,\n  getFullCombo,\n} from \"../utils/engineUtils\";\nimport { GLOBAL_OFFSET } from \"../constants\";\nimport { debugLog } from \"../utils\";\n\nclass AudioPlayer {\n  constructor() {\n    /*\n      Trying to share the same audio source for both song and preview was causing too many\n      issues. Sticking to keeping separate Howl objects for each even if means loading\n      duplicate copies of the same mp3\n    */\n    this.sources = {\n      song: {},\n      preview: {},\n      assistTick: {\n        audio: new Howl({\n          src: getAssetPath(\"sounds/assist_tick.wav\"),\n          // format: [\"wav\"],\n          // html5: true,\n        }),\n      },\n    }; // map of song hash to associated Howl object\n\n    window.sources = this.sources;\n    this.currentSong = null; // hash of current song\n    this.currentPreview = null; // hash of current preview\n\n    this.currentSongId = null; // Howler soundID of current song\n    this.currentPreviewId = null; // Howler soundId of current preview\n\n    // this.updateTimeline = this.updateTimeline.bind(this);\n\n    this.previewFadeTimeout = null; // reference to preview fade setTimeout so it can be cleared\n\n    this.updateTimeline = this.updateTimeline.bind(this);\n    this.updateProgress = this.updateProgress.bind(this);\n    this.audioResyncFrames = 0;\n  }\n\n  getCurrentSong() {\n    const currentSong = this.sources.song[this.currentSong];\n    return currentSong;\n  }\n  getCurrentPreview() {\n    return this.sources.preview[this.currentPreview];\n  }\n\n  getCurrentTime() {\n    return this.getCurrentSong().audio.seek();\n  }\n\n  // when loading a song file for the first time, save it as two separate Howls:\n  // one for the full song and one for the preview sample\n  storeAudioSource(song, initialProgress = 0) {\n    if (!this.sources.song[song.hash]) {\n      this.setLoadingAudio(true);\n\n      const thisSong = (this.sources.song[song.hash] = { title: song.title });\n\n      thisSong.audio = new Howl({\n        src: `https://dl.dropboxusercontent.com/s/${song.dAudioUrl}`,\n        format: [\"mp3\"],\n        html5: true,\n        onload: () => {\n          // console.log(`AudioPlayer song loaded: ${song.title}`);\n          this.setLoadingAudio(false);\n          this.seekProgress(initialProgress);\n        },\n        onloaderror: (id, error, blah) => {\n          alert(`${id};;; ${error};;; ${blah}`);\n        },\n        onplay: () => {\n          thisSong.tl.play();\n          this.resync();\n          gsap.ticker.add(this.updateProgress);\n          this.startAnimationLoop();\n          store.dispatch(actions.playChartAudio());\n        },\n        onpause: () => {\n          thisSong.tl.pause();\n          gsap.ticker.remove(this.updateTimeline);\n          gsap.ticker.remove(this.updateProgress);\n          this.stopAnimationLoop();\n          store.dispatch(actions.pauseChartAudio());\n        },\n        onseek: () => {},\n        onstop: () => {\n          if (thisSong.tl) {\n            thisSong.tl.restart().pause();\n          }\n          gsap.ticker.remove(this.updateTimeline);\n          gsap.ticker.remove(this.updateProgress);\n          this.stopAnimationLoop();\n          store.dispatch(actions.stopChartAudio());\n        },\n        onend: (spriteId) => {\n          if (thisSong.tl) {\n            thisSong.tl.pause();\n          }\n          gsap.ticker.remove(this.updateTimeline);\n          gsap.ticker.remove(this.updateProgress);\n          this.stopAnimationLoop();\n          store.dispatch(actions.stopChartAudio());\n        },\n      });\n\n      this.sources.preview[song.hash] = { title: song.title };\n      this.sources.preview[song.hash].audio = new Howl({\n        src: `https://dl.dropboxusercontent.com/s/${song.dAudioUrl}`,\n        format: [\"mp3\"],\n        html5: true,\n        sprite: {\n          sample: [\n            parseFloat(song.sampleStart * 1000),\n            parseFloat(song.sampleLength * 1000),\n          ],\n        },\n        onplay: () => {\n          store.dispatch(actions.playPreviewAudio());\n        },\n        onstop: () => {\n          clearTimeout(this.previewFadeTimeout);\n          this.currentPreviewId = null;\n          store.dispatch(actions.stopPreviewAudio());\n        },\n        onend: () => {\n          clearTimeout(this.previewFadeTimeout);\n          this.currentPreviewId = null;\n          store.dispatch(actions.stopPreviewAudio());\n        },\n      });\n\n      // console.log(`Added ${song.title} to AudioPlayer.sources`, this.sources);\n    }\n  }\n\n  selectSong(song, initialProgress = 0) {\n    if (this.currentSong) {\n      this.getCurrentSong().audio.stop(this.currentSongId);\n    }\n\n    this.storeAudioSource(song, initialProgress);\n    this.currentSong = song.hash;\n  }\n\n  resync() {\n    // number of frames it takes for audio to reload/restabilize\n    // this.getCurrentTime() (i.e. Howler .seek()) will return an object instead of a number\n    // if audio is not loaded yet\n    this.audioReloadFrames = 0;\n\n    // arbitrary number of frames chosen to tell timeline to resync with the audio\n    // this needs to be done after (/in addition to) the audio restabilizing\n    this.audioResyncFrames = 10;\n\n    gsap.ticker.add(this.updateTimeline);\n    // this.updateProgressOnce();\n  }\n\n  // when audio is played, resync timeline with audio a few times until audio playback\n  // stabilizes, then remove this method from the ticker\n  updateTimeline() {\n    // // for reducing debugging headaches; don't remove\n    const currentSong = this.getCurrentSong();\n    if (!currentSong.tl || !currentSong.globalParams) return;\n\n    let isAudioStable = false;\n\n    // the line that syncs the timeline with the audio time\n    // sometimes this will still error on load, just bypass it\n    try {\n      const currentTime = this.getCurrentTime();\n      // console.log(\"currentTime\", currentTime);\n      if (typeof currentTime === \"number\") {\n        isAudioStable = true;\n        // console.log(\n        //   \"seek timeline to\",\n        //   currentTime,\n        //   \"after\",\n        //   this.audioReloadFrames,\n        //   \"frames\"\n        // );\n        // console.log(\"stabilized to\", currentTime);\n        currentSong.tl.seek(currentTime + GLOBAL_OFFSET);\n        this.updateProgressOnce();\n\n        if (this.getChartAudioStatus() === \"playing\") {\n          currentSong.tl.play();\n        }\n        this.audioResyncFrames--;\n      } else {\n        // console.log(\"audio restabilizing\");\n        currentSong.tl.pause();\n        this.audioReloadFrames++;\n      }\n    } catch (err) {}\n\n    // if (this.getCurrentSong().globalParams) return;\n\n    // if (this.audioResyncFrames <= 0) {\n    if (isAudioStable && this.audioResyncFrames <= 0) {\n      // recalculate current bpm (necessary if skipping progress)\n      const currentBpm = getCurrentBpm(currentSong.globalParams);\n      store.dispatch(changeActiveBpm(currentBpm));\n      // document.querySelector(\".bpm-value\").textContent = Math.round(currentBpm);\n\n      const currentCombo = getCurrentCombo(currentSong);\n      // currentSong.globalParams.combo = currentCombo;\n\n      // store.dispatch(setCombo(currentCombo));\n      const comboTemp = document.querySelector(\"#combo-temp .combo-num\");\n      if (comboTemp) comboTemp.textContent = currentCombo;\n\n      gsap.ticker.remove(this.updateTimeline);\n    }\n  }\n\n  seekTime(timestamp) {\n    this.getCurrentSong().audio.seek(timestamp);\n    this.resync();\n  }\n  goBack(ms) {\n    this.seekTime(this.getCurrentTime() - ms * 0.001);\n  }\n  goForward(ms) {\n    this.seekTime(this.getCurrentTime() + ms * 0.001);\n  }\n\n  seekProgress(value) {\n    const audioDuration = this.getCurrentSong().audio.duration();\n    this.seekTime(value * audioDuration);\n  }\n\n  // gsap ticker method for regularly updating progress bar, not called manually\n  updateProgress(time, deltaTime, frame) {\n    const currentSong = this.getCurrentSong();\n    if (!currentSong || !currentSong.tl) return;\n\n    // console.log(currentSong.tl);\n\n    // detect significant frame skips and resync when it happens\n    if (deltaTime > 60) {\n      // console.log(deltaTime);\n      const currentTime = this.getCurrentTime();\n      console.log(\n        \"frame skip\",\n        \"deltaTime:\",\n        deltaTime,\n        \"currentTime:\",\n        currentTime\n      );\n      if (typeof currentTime === \"number\") {\n        currentSong.tl.seek(currentTime + GLOBAL_OFFSET);\n      } else {\n        console.log(\"audio unstable after frame skip, resyncing\");\n        this.resync();\n      }\n    }\n    if (frame % 15 === 0) {\n      let t0 = performance.now();\n      const audio = currentSong.audio;\n      const progress = audio.seek() / audio.duration();\n      let t1 = performance.now();\n      const audioSeekPerf = t1 - t0;\n      // console.log(`audio seek/duration progress: ${(t1 - t0).toFixed(3)} ms`);\n      // store.dispatch(actions.setChartProgress(progress));\n\n      t0 = performance.now();\n      let tlProgress = currentSong.tl.progress();\n      t1 = performance.now();\n      const tlSeekPerf = t1 - t0;\n\n      // console.log(\n      //   `audioSeekPerf - tlSeekPerf = ${(audioSeekPerf - tlSeekPerf).toFixed(\n      //     3\n      //   )} ms`\n      // );\n      // console.log(`tl progress: ${(t1 - t0).toFixed(3)} ms`);\n\n      t0 = performance.now();\n      saveSongProgress(progress);\n      Progress.render(progress);\n      t1 = performance.now();\n      // console.log(`renderProgress ${(t1 - t0).toFixed(3)} ms`);\n    }\n  }\n\n  updateProgressOnce() {\n    this.updateProgress(null, null, 0);\n\n    const currentSong = this.getCurrentSong();\n    const currentCombo = getCurrentCombo(currentSong);\n\n    // const comboDebug = document.querySelector(\"#combo-debug .combo-debug-num\");\n    // if (comboDebug) {\n    //   comboDebug.textContent = currentCombo;\n    // }\n\n    debugLog(`FC: ${getFullCombo(currentSong)}`);\n\n    currentSong.globalParams.combo = currentCombo;\n\n    this.updateAnimationLoopOnce();\n  }\n\n  setTimeline(tl) {\n    this.getCurrentSong().tl = tl;\n  }\n  setGlobalParams(params) {\n    this.getCurrentSong().globalParams = params;\n  }\n\n  play() {\n    if (this.getChartAudioStatus() === \"pending\") {\n      return;\n    }\n    this.currentSongId = this.getCurrentSong().audio.play();\n    store.dispatch(actions.setChartAudioStatus(\"pending\"));\n  }\n\n  pause() {\n    this.getCurrentSong().audio.pause(this.currentSongId);\n\n    const audio = this.getCurrentSong().audio;\n    const progress = audio.seek() / audio.duration();\n    saveSongProgress(progress);\n  }\n\n  stop() {\n    if (!this.getCurrentSong()) {\n      return;\n    }\n    this.getCurrentSong().audio.stop(this.currentSongId);\n    this.seekTime(0);\n    this.currentSongId = null;\n  }\n\n  killImmediately(songId) {\n    const currentSong = this.sources.song[songId];\n    if (currentSong) {\n      if (currentSong.tl) {\n        this.sources.song[songId].tl.kill();\n        // console.log(\"kill\", this.sources.song[songId].title);\n      }\n      this.stop();\n    }\n  }\n\n  isPlaying() {\n    return (\n      this.getCurrentSong() &&\n      this.getCurrentSong().audio.playing(this.currentSongId)\n    );\n  }\n  isPaused() {\n    return (\n      this.getCurrentSong() &&\n      !this.getCurrentSong().audio.playing(this.currentSongId)\n    );\n  }\n\n  playAssistTick() {\n    this.sources.assistTick.audio.play();\n  }\n\n  playSongPreview(song) {\n    if (this.currentPreview) {\n      this.getCurrentPreview().audio.stop(this.currentPreviewId);\n    }\n\n    this.storeAudioSource(song);\n    this.currentPreview = song.hash;\n\n    const preview = this.getCurrentPreview().audio;\n\n    this.currentPreviewId = preview.play(\"sample\");\n\n    preview.on(\"play\", () => {\n      const preview = this.getCurrentPreview().audio;\n\n      const fadeinTime = 200;\n      const fadeoutTime = 2000;\n      preview.fade(0, 1, fadeinTime);\n\n      this.previewFadeTimeout = setTimeout(() => {\n        preview.fade(1, 0, fadeoutTime);\n      }, song.sampleLength * 1000 - fadeoutTime);\n    });\n  }\n\n  stopSongPreview() {\n    if (!this.currentPreview) return;\n    const preview = this.getCurrentPreview().audio;\n\n    preview.stop(this.currentPreviewId);\n\n    // clearTimeout(this.previewFadeTimeout);\n  }\n\n  isPreviewPlaying() {\n    return (\n      this.getCurrentPreview() &&\n      this.getCurrentPreview().audio.playing(this.currentPreviewId)\n    );\n  }\n\n  getChartAudioStatus() {\n    return store.getState().audio.chartAudio.status;\n  }\n}\n\nexport default new AudioPlayer();\n","import { gsap } from \"gsap\";\n\nimport Arrow from \"../components/chart/canvas/Arrow\";\nimport ShockArrow from \"../components/chart/canvas/ShockArrow\";\nimport StepZone from \"../components/chart/canvas/StepZone\";\nimport Guidelines from \"../components/chart/canvas/Guidelines\";\nimport TargetFlash from \"../components/chart/canvas/TargetFlash\";\nimport ComboDisplay from \"../components/chart/canvas/ComboDisplay\";\nimport LaneCover from \"../components/chart/canvas/LaneCover\";\nimport parseSimfile from \"../utils/parseSimfile\";\nimport { applyTurnMods } from \"../utils/engineUtils\";\nimport {\n  GLOBAL_OFFSET,\n  END_EXTRA_BEATS,\n  MARVELOUS_FLASH_FRAMES,\n} from \"../constants\";\nimport AudioPlayer from \"./AudioPlayer\";\nimport store from \"../store\";\nimport * as actions from \"../actions/ChartActions\";\n\nclass GameEngine {\n  constructor(canvas, sm, simfileType = \"sm\", chartParams) {\n    const self = this;\n    this.canvas = canvas;\n    this.c = canvas.getContext(\"2d\");\n    this.sm = sm;\n    this.simfiles = {};\n\n    this.tl = gsap.timeline();\n    this.eventList = [];\n    this.arrows = [];\n    this.shockArrows = [];\n    this.allArrows = [];\n\n    this.mainLoopRequestRef = null;\n\n    this.drawBackground();\n\n    this.globalParams = {\n      /*\n        Use this parameter to keep track of which beat the chart is on at any given point.\n        Animate this one property in the timeline, then reference its value to calculate frames\n        for step zone and arrow animations without having to create separate tweens for them.\n      */\n      beatTick: 0,\n\n      /*\n        Use this parameter for animations based on absolute frame and not a function of the beat.\n      */\n      frame: 0,\n\n      combo: 0,\n      bpmChangeQueue: [], // this is the one that is used\n\n      arrows: self.allArrows,\n      targetFlashes: {},\n    };\n\n    AudioPlayer.startAnimationLoop = this.startLoop.bind(this);\n    AudioPlayer.stopAnimationLoop = this.stopLoop.bind(this);\n    AudioPlayer.updateAnimationLoopOnce = this.updateLoopOnce.bind(this);\n\n    if (!this.sm) return;\n\n    // init logic\n    this.simfiles = parseSimfile(this.sm, simfileType);\n\n    this.resetChart(chartParams);\n  }\n\n  resetChart({ mode, difficulty, mods }) {\n    const self = this;\n    const { audio } = store.getState();\n\n    // kill the previous gsap timeline before creating a new one\n    if (this.tl) {\n      this.tl.kill();\n    }\n    this.tl = gsap.timeline();\n\n    // reinitialize all chart-specific values\n    this.eventList.length = 0;\n    this.arrows.length = 0;\n    this.shockArrows.length = 0;\n    this.allArrows.length = 0;\n\n    this.globalParams.beatTick = 0;\n    this.globalParams.frame = 0;\n    this.globalParams.combo = 0;\n    this.globalParams.bpmChangeQueue = [];\n    this.globalParams.arrows = self.allArrows;\n    this.globalParams.targetFlashes = {};\n    AudioPlayer.setGlobalParams(this.globalParams);\n\n    // recreate the chart with the new given parameters\n    // then immediately seek to where the chart's progress was before it was recreated\n    const simfile = this.simfiles[`${mode}_${difficulty}`];\n    if (simfile) {\n      this.generateEventList(simfile);\n      this.generateArrows(simfile, mods);\n      this.initTimeline(mods);\n      this.restartTl();\n      if (audio.chartAudio.status !== \"playing\") {\n        this.pauseTl();\n      }\n      AudioPlayer.resync();\n    }\n  }\n\n  startLoop() {\n    this.mainLoopRequestRef = window.requestAnimationFrame(\n      this.mainLoop.bind(this)\n    );\n  }\n  stopLoop() {\n    window.cancelAnimationFrame(this.mainLoopRequestRef);\n  }\n  updateLoopOnce() {\n    window.requestAnimationFrame(this.mainLoop.bind(this, false));\n  }\n\n  // bpm changes and stops converted to timestamps\n  generateEventList(simfile) {\n    const { bpms, stops } = simfile;\n    const eventList = [];\n    let bpmPtr = 0,\n      stopPtr = 0;\n    let currentBpm = bpms[0].value;\n\n    // console.log(\"generateEventList bpms\", bpms);\n    // console.log(\"generateEventList stops\", stops);\n\n    while (bpmPtr < bpms.length && stopPtr < stops.length) {\n      const bpm = bpms[bpmPtr];\n      const stop = stops[stopPtr];\n\n      // bpm changes before stops when they fall on the same beat\n      // // add stop event, keeping track of the bpm at this point\n      // if (bpm.beat <= stop.beat) {\n      //   eventList.push({ ...bpm, type: \"bpm\" });\n      //   currentBpm = bpm.value;\n      //   bpmPtr++;\n      // }\n      // // add bpm event, replacing the currently tracked bpm\n      // else {\n      //   eventList.push({ ...stop, bpm: currentBpm, type: \"stop\" });\n      //   stopPtr++;\n      // }\n\n      // stops before bpm changes when they fall on the same beat\n      // add stop event, keeping track of the bpm at this point\n      if (stop.beat <= bpm.beat) {\n        eventList.push({ ...stop, bpm: currentBpm, type: \"stop\" });\n        stopPtr++;\n      }\n      // add bpm event, replacing the currently tracked bpm\n      else {\n        eventList.push({ ...bpm, type: \"bpm\" });\n        currentBpm = bpm.value;\n        bpmPtr++;\n      }\n    }\n    while (bpmPtr < bpms.length) {\n      eventList.push({ ...bpms[bpmPtr], type: \"bpm\" });\n      bpmPtr++;\n    }\n    while (stopPtr < stops.length) {\n      eventList.push({ ...stops[stopPtr], bpm: currentBpm, type: \"stop\" });\n      stopPtr++;\n    }\n\n    eventList[0].timestamp = 0;\n\n    this.globalParams.bpmChangeQueue = [eventList[0]];\n\n    for (let i = 1; i < eventList.length; i++) {\n      const prevEvent = eventList[i - 1];\n      const currentEvent = eventList[i];\n      const prevTimestamp = eventList[i - 1].timestamp;\n\n      // Find the number of beats elapsed between the current and previous event,\n      // then convert this into seconds using the bpm at the previous event.\n      // If the previous event was a stop, add the length of the stop.\n      // The timestamp of the current event is this number of seconds after the\n      // timestamp of the previous event.\n      const beatDiff = currentEvent.beat - prevEvent.beat;\n      const prevBpm =\n        prevEvent.type === \"bpm\" ? prevEvent.value : prevEvent.bpm;\n      let timestampDiff = (beatDiff / prevBpm) * 60;\n      if (prevEvent.type === \"stop\") timestampDiff += prevEvent.value;\n      const currentTimestamp = prevTimestamp + timestampDiff;\n\n      currentEvent.timestamp = currentTimestamp;\n\n      if (currentEvent.type === \"bpm\") {\n        this.globalParams.bpmChangeQueue.push(currentEvent);\n      }\n    }\n\n    this.eventList = eventList;\n    return eventList;\n  }\n\n  generateArrows(simfile, mods) {\n    let { chart } = simfile;\n    const mode = store.getState().songSelect.mode;\n\n    if (Array.isArray(chart[0])) {\n      const newChart = [];\n      chart.forEach((measure) => {\n        newChart.push(...measure);\n      });\n      chart = newChart;\n    }\n\n    chart = applyTurnMods(chart, mods, mode);\n\n    chart.forEach((note, key) => {\n      // calculate starting position currentBeatPosition\n      const { measureIdx, measureN, measureD } = note;\n      note.currentBeatPosition = (measureIdx + measureN / measureD) * 4;\n\n      // save its original position for later reference\n      note.originalBeatPosition = note.currentBeatPosition;\n\n      // If the note is the tail of a freeze arrow, calculate the number of beats\n      // from the head of the freeze arrow\n      for (let i = 0; i < note.note.length; i++) {\n        if (note.note[i] !== \"3\") continue;\n\n        // Find the most recent freeze head on the same direction as the tail\n        // and retroactively fill in the length of the hold in beats\n        for (let j = key - 1; j >= 0; j--) {\n          if (chart[j].note[i] === \"2\") {\n            if (!chart[j].holdBeats) chart[j].holdBeats = [];\n            if (!note.holdBeats) note.holdBeats = [];\n            chart[j].holdBeats[i] =\n              note.currentBeatPosition - chart[j].currentBeatPosition;\n            note.holdBeats[i] =\n              note.currentBeatPosition - chart[j].currentBeatPosition;\n            break;\n          }\n        }\n      }\n    });\n\n    chart.forEach((note, key) => {\n      if (note.note[0] === \"M\" || note.note[4] === \"M\") {\n        const shockArrow = new ShockArrow({ key, ...note });\n        this.shockArrows.push(shockArrow);\n        this.allArrows.push(shockArrow);\n      }\n      if (\n        note.note.includes(\"1\") ||\n        note.note.includes(\"2\") ||\n        note.note.includes(\"3\")\n      ) {\n        const arrow = new Arrow({ key, ...note });\n        this.arrows.push(arrow);\n        this.allArrows.push(arrow);\n      }\n    });\n\n    this.stepZone = new StepZone();\n    this.comboDisplay = new ComboDisplay();\n    this.laneCover = new LaneCover();\n\n    // console.log(`chart for ${simfile.difficulty}`, chart);\n  }\n\n  // Calculate the gsap tweens before playing the chart\n  initTimeline(mods) {\n    // console.log(`this.allArrows.length: ${this.allArrows.length}`);\n\n    /*\n      The space in between each event (i.e. a bpm change or stop) denotes a continous section of constant bpm.\n      Create a tween to animate the global beat tick for each of these sections and chain them together.\n      The position and/or frame animation of each canvas object (e.g. arrows, step zone, guidelines) can be\n      determined as a function of the beat tick value at any given point.\n    */\n    let bpm;\n\n    let accumulatedBeatTick = 0;\n\n    // Designate the \"end\" of the chart as an arbitrary number of beats (8?) after either the last arrow\n    // or the last event in the chart, whichever comes later\n    const lastArrow = this.arrows[this.arrows.length - 1];\n    const lastEvent = this.eventList[this.eventList.length - 1];\n\n    let finalBeat = 0;\n    if (lastArrow && lastEvent) {\n      finalBeat = Math.max(lastArrow.originalBeatPosition, lastEvent.beat);\n    } else if (lastArrow) {\n      finalBeat = lastArrow.originalBeatPosition;\n    } else if (lastEvent) {\n      finalBeat = lastEvent.beat;\n    }\n    finalBeat += END_EXTRA_BEATS;\n\n    // // hack to implement global offset of -12 ms\n    // this.tl = this.tl.to({}, { duration: 0 }, GLOBAL_OFFSET);\n\n    for (let i = 0; i < this.eventList.length; i++) {\n      let startEvent = this.eventList[i],\n        endEvent = this.eventList[i + 1];\n\n      // delay the animations by the length of the stop, if applicable\n      let delay = startEvent.type === \"stop\" ? startEvent.value : 0;\n\n      // the bpm of this section\n      if (startEvent.type === \"bpm\") bpm = startEvent.value;\n      else if (startEvent.type === \"stop\") bpm = startEvent.bpm;\n\n      // if there is a bpm change or stop event somewhere ahead of this one\n      if (endEvent) {\n        // number of beats between startEvent and endEvent, i.e. how long this constant bpm section is\n        const sectionBeatLength = endEvent.beat - startEvent.beat;\n\n        // the duration of this constant bpm section in seconds\n        const sectionDuration = (sectionBeatLength / bpm) * 60;\n\n        this.tl = this.tl.to(\n          this.globalParams,\n          {\n            beatTick: accumulatedBeatTick + sectionBeatLength,\n            duration: sectionDuration,\n            ease: \"none\",\n            onStart: () => {\n              if (startEvent.type === \"bpm\") {\n                store.dispatch(actions.changeActiveBpm(startEvent.value));\n              }\n            },\n          },\n          `+=${delay}`\n        );\n        accumulatedBeatTick += sectionBeatLength;\n      }\n      // if this is the last bpm change/stop event, animate remaining objects to end\n      else {\n        this.tl = this.tl.to(\n          this.globalParams,\n          {\n            beatTick: finalBeat,\n            duration: ((finalBeat - accumulatedBeatTick) / bpm) * 60,\n            ease: \"none\",\n            onStart: () => {\n              if (startEvent.type === \"bpm\") {\n                store.dispatch(actions.changeActiveBpm(startEvent.value));\n              }\n            },\n          },\n          `+=${delay}`\n        );\n      }\n    }\n\n    // note events (combo, assist tick, target flash)\n    // console.log(\"eventList\", this.eventList);\n    const bpmChangeQueue = this.globalParams.bpmChangeQueue;\n    // console.log(\"bpmChangeQueue\", bpmChangeQueue);\n\n    // subset of arrows that specifically count for combo (e.g. excluding ends of freeze arrows)\n    this.comboArrows = [];\n\n    let currentBpmPtr = -1,\n      currentEventPtr = 0,\n      pendingStopPtr = -1,\n      currentBpm = null,\n      pendingStop = null,\n      currentStopOffset = 0,\n      currentCombo = 0;\n    this.allArrows.forEach((arrow, idx) => {\n      // Find the latest bpm section that starts before this note\n      while (\n        currentBpmPtr < bpmChangeQueue.length - 1 &&\n        bpmChangeQueue[currentBpmPtr + 1].beat < arrow.originalBeatPosition\n      ) {\n        // if this block was entered, a new bpm section was entered\n        currentBpmPtr++;\n        const bpmSection = bpmChangeQueue[currentBpmPtr];\n        currentBpm = bpmSection.value;\n\n        // reset the accumulated stop time\n        currentStopOffset = 0;\n\n        // find the index of this bpm section in the eventList and use it as a starting point\n        // for keeping track of stops\n        for (let i = currentEventPtr; i < this.eventList.length; i++) {\n          const event = this.eventList[i];\n          if (event.beat === bpmSection.beat && event.type === \"bpm\") {\n            currentEventPtr = i;\n            const nextEvent = this.eventList[i + 1];\n            if (nextEvent && nextEvent.type === \"stop\") {\n              pendingStopPtr = i + 1;\n              pendingStop = this.eventList[pendingStopPtr];\n            } else {\n              pendingStop = null;\n            }\n            break;\n          }\n        }\n      }\n\n      // Accumulate total time of any stops that exist in this bpm section before this note.\n      // Keep track of the next pending stop so it can be added to the total stop time as soon as\n      // the first arrow following it is reached\n      while (pendingStop && pendingStop.beat < arrow.originalBeatPosition) {\n        currentStopOffset += pendingStop.value;\n        const nextEvent = this.eventList[pendingStopPtr + 1];\n        if (nextEvent && nextEvent.type === \"stop\") {\n          pendingStopPtr++;\n        } else {\n          pendingStopPtr = -1;\n        }\n        pendingStop = this.eventList[pendingStopPtr];\n      }\n\n      const bpmSectionStartBeat = bpmChangeQueue[currentBpmPtr].beat;\n      const bpmSectionStartTime = bpmChangeQueue[currentBpmPtr].timestamp;\n\n      const beatDiff = arrow.originalBeatPosition - bpmSectionStartBeat;\n      const timeDiff = beatDiff * (60 / currentBpm);\n      const arrowTimestamp = bpmSectionStartTime + timeDiff + currentStopOffset;\n\n      // combo arrows (includes regular notes and freeze heads)\n      if (\n        arrow.note.includes(\"1\") ||\n        arrow.note.includes(\"2\") ||\n        arrow.note.includes(\"M\")\n      ) {\n        currentCombo++;\n        arrow.combo = currentCombo;\n        arrow.timestamp = arrowTimestamp;\n\n        this.comboArrows.push(arrow);\n\n        const comboTemp = document.querySelector(\"#combo-temp .combo-num\");\n\n        this.tl.set(\n          this.globalParams,\n          {\n            // combo: arrow.combo,\n            onStart: () => {\n              // store.dispatch(actions.setCombo(arrow.combo));\n\n              if (comboTemp) {\n                comboTemp.textContent = arrow.combo;\n              }\n              this.globalParams.combo = arrow.combo;\n\n              if (arrow instanceof Arrow) {\n                // AudioPlayer.playAssistTick();\n                // console.log(arrow);\n                this.globalParams.targetFlashes[\n                  arrow.originalBeatPosition\n                ] = new TargetFlash(arrow);\n              }\n            },\n          },\n          arrowTimestamp - 0.008\n        );\n      }\n      // freeze ends that are not simultaneous with combo arrows\n      else if (arrow.note.includes(\"3\")) {\n        this.tl.set(\n          this.globalParams,\n          {\n            onStart: () => {\n              this.globalParams.targetFlashes[\n                arrow.originalBeatPosition\n              ] = new TargetFlash(arrow);\n            },\n          },\n          arrowTimestamp - 0.008\n        );\n      }\n    });\n\n    this.guidelines = new Guidelines(finalBeat);\n    AudioPlayer.setTimeline(this.tl);\n\n    this.updateLoopOnce();\n  }\n\n  mainLoop(loop = true) {\n    // console.log(\"mainLoop running\");\n    // console.log(\"\\n\\n\\n\");\n    let t0, t1;\n\n    t0 = performance.now();\n    this.drawBackground();\n    t1 = performance.now();\n    // console.log(`drawBackground: ${(t1 - t0).toFixed(3)} ms`);\n\n    const { songSelect, mods } = store.getState();\n    const { mode } = songSelect;\n\n    if (this.stepZone && mods.stepZone !== \"off\") {\n      t0 = performance.now();\n      this.stepZone.render(this.canvas, this.globalParams.beatTick, {\n        mode,\n        mods,\n      });\n      t1 = performance.now();\n      // console.log(`stepZone.render: ${(t1 - t0).toFixed(3)} ms`);\n    }\n    if (this.guidelines) {\n      t0 = performance.now();\n      this.guidelines.render(this.canvas, this.globalParams.beatTick, { mods });\n      t1 = performance.now();\n      // console.log(`guidelines.render: ${(t1 - t0).toFixed(3)} ms`);\n    }\n\n    /* Combo display, if behind arrows */\n    if (mods.comboDisplay === \"behind\") {\n      this.comboDisplay.render(this.canvas, this.globalParams.combo, {\n        mode,\n        mods,\n      });\n    }\n\n    /* Arrows */\n    t0 = performance.now();\n    for (let i = this.shockArrows.length - 1; i >= 0; i--) {\n      const shockArrow = this.shockArrows[i];\n      shockArrow.render(\n        this.canvas,\n        this.globalParams.frame,\n        this.globalParams.beatTick,\n        { mods }\n      );\n    }\n    t1 = performance.now();\n    // console.log(`shockArrow.render: ${(t1 - t0).toFixed(3)} ms`);\n\n    // render arrows in the opposite order so the earlier arrows are layered over the later ones\n    // Up arrow is the exception: later arrows are layered over the earlier ones\n\n    const upArrows = mode === \"double\" ? [2, 6] : [2];\n    const notUpArrows = mode === \"double\" ? [0, 1, 3, 4, 5, 7] : [0, 1, 3];\n\n    // draw freeze bodies first because they need to be at the bottom layer\n    t0 = performance.now();\n    for (let i = this.arrows.length - 1; i >= 0; i--) {\n      const arrow = this.arrows[i];\n      notUpArrows.forEach((directionIdx) => {\n        arrow.renderFreezeBody(\n          this.canvas,\n          this.globalParams.beatTick,\n          directionIdx,\n          { mods }\n        );\n      });\n    }\n    t1 = performance.now();\n    let renderFreezeBodyPerf = parseFloat((t1 - t0).toFixed(3));\n\n    t0 = performance.now();\n    for (let i = 0; i < this.arrows.length; i++) {\n      const arrow = this.arrows[i];\n      upArrows.forEach((directionIdx) => {\n        arrow.renderFreezeBody(\n          this.canvas,\n          this.globalParams.beatTick,\n          directionIdx,\n          { mods }\n        );\n      });\n    }\n    t1 = performance.now();\n    renderFreezeBodyPerf += parseFloat((t1 - t0).toFixed(3));\n    // console.log(`arrows renderFreezeBody: ${(t1 - t0).toFixed(3)} ms`);\n\n    // then draw the arrow heads over the freeze bodies\n    t0 = performance.now();\n    for (let i = this.arrows.length - 1; i >= 0; i--) {\n      const arrow = this.arrows[i];\n      notUpArrows.forEach((directionIdx) => {\n        arrow.renderArrow(\n          this.canvas,\n          this.globalParams.beatTick,\n          directionIdx,\n          { mods }\n        );\n      });\n    }\n    t1 = performance.now();\n    let renderArrowPerf = parseFloat((t1 - t0).toFixed(3));\n\n    t0 = performance.now();\n    for (let i = 0; i < this.arrows.length; i++) {\n      const arrow = this.arrows[i];\n      upArrows.forEach((directionIdx) => {\n        arrow.renderArrow(\n          this.canvas,\n          this.globalParams.beatTick,\n          directionIdx,\n          { mods }\n        );\n      });\n    }\n    t1 = performance.now();\n    renderArrowPerf += parseFloat((t1 - t0).toFixed(3));\n    // console.log(`arrows renderArrow: ${(t1 - t0).toFixed(3)} ms`);\n    /* End arrows */\n\n    /* Combo display, if in front of arrows */\n    if (mods.comboDisplay === \"inFront\") {\n      this.comboDisplay.render(this.canvas, this.globalParams.combo, {\n        mode,\n        mods,\n      });\n    }\n\n    /* Hidden+ and/or Sudden+ lane cover */\n    if (\n      [\"hidden\", \"sudden\", \"hiddensudden\"].includes(mods.appearance) &&\n      mods.laneCoverVisible\n    ) {\n      this.laneCover.render(this.canvas, { mode, mods });\n    }\n\n    /* Target flashes */\n    t0 = performance.now();\n    for (let beatStamp in this.globalParams.targetFlashes) {\n      const targetFlash = this.globalParams.targetFlashes[beatStamp];\n      targetFlash.frame++;\n      if (targetFlash.frame > MARVELOUS_FLASH_FRAMES) {\n        delete this.globalParams.targetFlashes[beatStamp];\n      } else {\n        targetFlash.render(this.canvas, { mods });\n      }\n    }\n    t1 = performance.now();\n    // console.log(`targetFlash render: ${(t1 - t0).toFixed(3)} ms`);\n\n    // if (this.globalParams.beatTick) {\n    //   console.log(this.globalParams.beatTick);\n    // }\n    this.globalParams.frame++;\n\n    if (loop) {\n      this.mainLoopRequestRef = window.requestAnimationFrame(\n        this.mainLoop.bind(this)\n      );\n    }\n  }\n\n  drawBackground() {\n    this.c.fillStyle = \"black\";\n    this.c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  restartTl() {\n    // console.log(\"call restart\");\n    this.tl.restart();\n  }\n  pauseTl() {\n    this.tl.pause();\n  }\n  isTlPaused() {\n    return this.tl.paused();\n  }\n}\n\nexport default GameEngine;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Modal, Button, Input } from \"semantic-ui-react\";\nimport copy from \"copy-to-clipboard\";\n\nimport { getOriginPath } from \"../../utils\";\nimport Progress from \"./canvas/Progress\";\n\nconst difficulties = {\n  Beginner: \"b\",\n  Basic: \"B\",\n  Difficult: \"D\",\n  Expert: \"E\",\n  Challenge: \"C\",\n};\n\nconst modes = {\n  single: \"S\",\n  double: \"D\",\n};\n\nconst ShareModal = (props) => {\n  const { modalOpen, setModalOpen, data } = props;\n  const { song, difficulty, mode, mods } = data;\n\n  const shareUrl = useRef();\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (modalOpen === false) {\n      setMessage(\"\");\n    }\n  }, [modalOpen]);\n\n  if (!song) return null;\n\n  // console.log(\"ShareModal data\", data);\n\n  const generateShareUrl = () => {\n    const progress = Progress.getProgress();\n\n    const params = {\n      song: song.hash,\n      difficulty: difficulties[difficulty] + modes[mode] + \"P\",\n      turn: mods.turn !== \"off\" ? mods.turn : \"\",\n      speed: mods.speed.toString().replace(\".\", \"\"),\n      progress: parseInt(progress * 100000),\n    };\n\n    const queryStr = Object.keys(params)\n      .map((param) => {\n        if (params[param] === null || typeof params[param] === \"undefined\") {\n          return null;\n        }\n        return `${param}=${params[param]}`;\n      })\n      .filter((param) => param !== null)\n      .join(\"&\");\n\n    return getOriginPath() + \"?\" + queryStr;\n  };\n  shareUrl.current = generateShareUrl();\n\n  const copyShareUrl = () => {\n    copy(shareUrl.current);\n    setMessage(\"Copied link to clipboard\");\n  };\n\n  return (\n    <Modal\n      className=\"shareModal\"\n      size=\"fullscreen\"\n      open={modalOpen}\n      onClose={() => setModalOpen(false)}\n    >\n      <Modal.Header>Share link to chart</Modal.Header>\n      <Modal.Content>\n        <Input\n          type=\"text\"\n          className=\"share-url-input\"\n          value={shareUrl.current}\n          action\n        >\n          <input />\n          <Button onClick={copyShareUrl}>Copy</Button>\n        </Input>\n        <p>{message}</p>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","import React, { useEffect, useRef } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nconst HoldButton = (props) => {\n  const button = useRef();\n  const requestRef = useRef();\n\n  const pressingDownRef = useRef();\n  const notPressingDownRef = useRef();\n\n  const buttonProps = { ...props };\n  delete buttonProps.onClick; // to avoid having the button invoke onClick an extra time\n\n  // Component needs to constantly refresh its event listeners to use the\n  // most up-to-date version of props.onClick.\n  // Unfortunately, this current implementation is not able to update state in between\n  // consecutive onClick invocations while held.\n  // Try to limit logic to those that do not depend on changing state while being held\n  useEffect(() => {\n    const el = button.current.ref.current;\n    el.removeEventListener(\"mousedown\", pressingDownRef.current, false);\n    el.removeEventListener(\"mouseup\", notPressingDownRef.current, false);\n    el.removeEventListener(\"mouseleave\", notPressingDownRef.current, false);\n\n    el.removeEventListener(\"touchstart\", pressingDownRef.current, false);\n    el.removeEventListener(\"touchend\", notPressingDownRef.current, false);\n\n    pressingDownRef.current = pressingDown;\n    notPressingDownRef.current = notPressingDown;\n\n    el.addEventListener(\"mousedown\", pressingDownRef.current, false);\n    el.addEventListener(\"mouseup\", notPressingDownRef.current, false);\n    el.addEventListener(\"mouseleave\", notPressingDownRef.current, false);\n\n    el.addEventListener(\"touchstart\", pressingDownRef.current, false);\n    el.addEventListener(\"touchend\", notPressingDownRef.current, false);\n  }, [props.onClick]);\n\n  const pressingDown = (e) => {\n    e.preventDefault();\n    if (props.onClick) {\n      props.onClick(e);\n    }\n    requestRef.current = requestAnimationFrame(handleHold.bind(null, e));\n  };\n\n  const notPressingDown = (e) => {\n    e.preventDefault();\n    cancelAnimationFrame(requestRef.current);\n  };\n\n  const handleHold = (e) => {\n    if (props.onClick) {\n      props.onClick(e);\n    }\n    requestRef.current = requestAnimationFrame(handleHold.bind(null, e));\n  };\n\n  return (\n    <Button {...buttonProps} ref={button}>\n      {props.children}\n    </Button>\n  );\n};\n\nexport default HoldButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport HoldButton from \"../ui/HoldButton\";\n\nconst PlayControls = (props) => {\n  const { audio, controlsDisabled, setShareModalOpen } = props;\n\n  const togglePlay = () => {\n    if (controlsDisabled) return;\n    if (props.audio.status === \"playing\") {\n      AudioPlayer.pause();\n    } else {\n      AudioPlayer.play();\n    }\n  };\n\n  const restart = () => {\n    if (controlsDisabled) return;\n    AudioPlayer.stop();\n  };\n\n  return (\n    <div className=\"play-controls\">\n      <HoldButton\n        onClick={() => AudioPlayer.goBack(20)}\n        className=\"play-control\"\n      >\n        <Icon name=\"backward\" />\n      </HoldButton>\n      <Button\n        onClick={togglePlay}\n        disabled={controlsDisabled}\n        className=\"play-control\"\n      >\n        <Icon name={audio.status === \"playing\" ? \"pause\" : \"play\"} />\n      </Button>\n      <Button onClick={restart} className=\"play-control\">\n        <Icon name=\"stop\" />\n      </Button>\n      <HoldButton\n        onClick={() => AudioPlayer.goForward(20)}\n        className=\"play-control\"\n      >\n        <Icon name=\"forward\" />\n      </HoldButton>\n\n      <Button\n        onClick={() => setShareModalOpen(true)}\n        className=\"play-control share-btn\"\n        disabled={audio.status === \"playing\"}\n      >\n        <Icon name=\"share square\" />\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio } = state;\n  return { audio: audio.chartAudio };\n};\n\nexport default connect(mapStateToProps, null)(PlayControls);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { SP_DIFFICULTIES, DP_DIFFICULTIES } from \"../../constants\";\n\n// displays song information on the chart view\nconst SongInfo = (props) => {\n  const { chart, selectedSong, selectedDifficulty, selectedMode } = props;\n  return (\n    <div className=\"song-info-row\">\n      <div className=\"song-information\">\n        {selectedSong && (\n          <>\n            <div className=\"song-title\">{selectedSong.title}</div>\n            <div className=\"song-artist\">{selectedSong.artist}</div>\n          </>\n        )}\n      </div>\n      <div className=\"bpm-information\">\n        <div className=\"bpm-header\">BPM</div>\n        <div className=\"bpm-value\">{chart.activeBpm}</div>\n      </div>\n      <div className=\"level-information\">\n        {selectedSong && (\n          <>\n            <div className=\"song-difficulty\">{selectedDifficulty}</div>\n            <div className=\"song-level\">\n              {\n                selectedSong.levels[\n                  selectedMode === \"double\"\n                    ? DP_DIFFICULTIES.indexOf(selectedDifficulty) + 5\n                    : SP_DIFFICULTIES.indexOf(selectedDifficulty)\n                ]\n              }\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { chart, songSelect } = state;\n  return {\n    chart,\n    selectedSong: songSelect.song,\n    selectedDifficulty: songSelect.difficulty,\n    selectedMode: songSelect.mode,\n  };\n};\n\nexport default connect(mapStateToProps, null)(SongInfo);\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\n\nimport { LANE_COVER_INCREMENT } from \"../../constants\";\nimport HoldButton from \"../ui/HoldButton\";\nimport { updateMods, updateLaneCoverHeight } from \"../../actions/ModsActions\";\nimport { getAssetPath } from \"../../utils\";\n\nconst CabButtons = (props) => {\n  const { canvas, mods, updateMods, updateLaneCoverHeight } = props;\n\n  const laneCoverFn = useRef();\n\n  const adjustLaneCoverHeight = (e) => {\n    // if key pressed is up or down, prevent default behavior\n    // ignore if key pressed is not up or down\n    if (e.keyCode !== 38 && e.keyCode !== 40) return;\n    else {\n      e.preventDefault();\n    }\n\n    // after preventing default behavior, ignore if no lane cover mod is being used\n    if (![\"hidden\", \"sudden\", \"hiddensudden\"].includes(mods.appearance)) {\n      return;\n    }\n\n    // the following code will only run if a lane cover mod is being used\n    // and if the key pressed was either up or down\n\n    const { scroll } = mods;\n\n    const laneCoverHeightDiff = [0, 0, 0];\n\n    const reverseFactor = scroll === \"reverse\" ? -1 : 1;\n\n    // up key\n    if (e.keyCode === 38) {\n      switch (mods.appearance) {\n        case \"hidden\":\n          laneCoverHeightDiff[0] -= LANE_COVER_INCREMENT * reverseFactor;\n          break;\n        case \"sudden\":\n          laneCoverHeightDiff[1] += LANE_COVER_INCREMENT * reverseFactor;\n          break;\n        case \"hiddensudden\":\n          laneCoverHeightDiff[2] += LANE_COVER_INCREMENT;\n          break;\n        default:\n          break;\n      }\n    }\n    // down key\n    else if (e.keyCode === 40) {\n      switch (mods.appearance) {\n        case \"hidden\":\n          laneCoverHeightDiff[0] += LANE_COVER_INCREMENT * reverseFactor;\n          break;\n        case \"sudden\":\n          laneCoverHeightDiff[1] -= LANE_COVER_INCREMENT * reverseFactor;\n          break;\n        case \"hiddensudden\":\n          laneCoverHeightDiff[2] -= LANE_COVER_INCREMENT;\n          break;\n        default:\n          break;\n      }\n    }\n\n    updateLaneCoverHeight({\n      diff: laneCoverHeightDiff,\n      canvasHeight: canvas.height,\n    });\n  };\n\n  const toggleLaneCover = (e) => {\n    e.preventDefault();\n    const { laneCoverVisible } = mods;\n    updateMods({ laneCoverVisible: !laneCoverVisible });\n  };\n\n  const updateLaneCoverFn = () => {\n    document.removeEventListener(\"keydown\", laneCoverFn.current);\n    laneCoverFn.current = adjustLaneCoverHeight;\n    document.addEventListener(\"keydown\", laneCoverFn.current);\n  };\n\n  useEffect(() => {\n    updateLaneCoverFn();\n  }, [mods.appearance, mods.scroll, mods.laneCoverHeight, canvas]);\n\n  return (\n    <div className=\"cab-buttons-container\">\n      <HoldButton\n        className=\"directional-button\"\n        onClick={(e) => {\n          e.keyCode = 38;\n          adjustLaneCoverHeight(e);\n        }}\n      >\n        <img src={getAssetPath(`directional_button.png`)} />\n      </HoldButton>\n      <Button\n        className=\"center-button\"\n        onClick={(e) => {\n          toggleLaneCover(e);\n        }}\n      >\n        <img src={getAssetPath(`center_button.png`)} />\n      </Button>\n      <HoldButton\n        className=\"directional-button\"\n        onClick={(e) => {\n          e.keyCode = 40;\n          adjustLaneCoverHeight(e);\n        }}\n      >\n        <img src={getAssetPath(`directional_button.png`)} />\n      </HoldButton>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateMods: (mods) => dispatch(updateMods(mods)),\n    updateLaneCoverHeight: (diff) => dispatch(updateLaneCoverHeight(diff)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CabButtons);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"inobounce\";\n\nimport { presetParams, getJacketPath } from \"../../utils\";\nimport { usePrevious } from \"../../hooks\";\nimport GameEngine from \"../../core/GameEngine\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport ShareModal from \"./ShareModal\";\nimport Progress from \"./canvas/Progress\";\nimport PlayControls from \"./PlayControls\";\nimport SongInfo from \"./SongInfo\";\n\nimport CabButtons from \"./CabButtons\";\n\nconst ChartArea = (props) => {\n  const {\n    selectedDifficulty,\n    selectedMode,\n    selectedSong,\n    sm,\n    mods,\n    screen,\n    loadingAudio,\n    gameEngine,\n    setGameEngine,\n  } = props;\n\n  const [canvas, setCanvas] = useState(null);\n  const [shareModalOpen, setShareModalOpen] = useState(false);\n  const chartArea = useRef();\n  const canvasContainer = useRef();\n  const chartLoadingScreen = useRef();\n\n  const prevState = usePrevious({\n    canvas,\n    sm,\n    selectedDifficulty,\n    selectedMode,\n    mods,\n  });\n\n  // define canvas and resize listener on mount\n  useEffect(() => {\n    chartArea.current = document.querySelector(\"#chartArea\");\n    setCanvas(chartArea.current);\n\n    Progress.initCanvas();\n  }, []);\n\n  // change chart dimensions depending on single or double\n  // Hardcoded heights for now. Variable heights may be possible in the future\n  useEffect(() => {\n    if (!canvas || !canvasContainer.current) return;\n    resizeChartArea();\n  }, [canvas, selectedMode, screen]);\n\n  const resizeChartArea = () => {\n    if (selectedMode === \"single\") {\n      chartArea.current.width = 256;\n      chartArea.current.style.transform = \"none\";\n      chartArea.current.style.position = \"relative\";\n      chartArea.current.style.left = 0;\n      chartArea.current.style.top = 0;\n    } else if (selectedMode === \"double\") {\n      chartArea.current.width = 512;\n\n      const wrapper = canvasContainer.current.getBoundingClientRect();\n\n      if (wrapper.width < 512) {\n        const scaleFactor = wrapper.width / chartArea.current.width;\n        const xOffset = (chartArea.current.width - wrapper.width) / 2;\n        const yOffset = xOffset * (7 / 8);\n        chartArea.current.style.transform = `scale(${scaleFactor}) translate(-50%)`;\n        chartArea.current.style.position = \"absolute\";\n        chartArea.current.style.left = `-${xOffset}px`;\n        chartArea.current.style.top = `-${yOffset}px`;\n      } else {\n        chartArea.current.style.transform = \"none\";\n        chartArea.current.style.position = \"relative\";\n        chartArea.current.style.left = 0;\n        chartArea.current.style.top = 0;\n      }\n    }\n\n    if (gameEngine) {\n      gameEngine.updateLoopOnce();\n    }\n  };\n\n  // reset chart if mode, difficulty, or mods change\n  useEffect(() => {\n    const currentState = { canvas, sm, selectedDifficulty, selectedMode, mods };\n\n    if (!canvas) return;\n\n    const chartParams = {\n      mode: selectedMode,\n      difficulty: selectedDifficulty,\n      mods,\n    };\n\n    Object.keys(currentState).forEach((thing) => {\n      if (prevState[thing] !== currentState[thing]) {\n        // initial setup of game engine when canvas is mounted\n        if (thing === \"canvas\") {\n        } else if (thing === \"sm\") {\n          // console.log(\n          //   `${thing} changed from ${\n          //     prevState[thing]\n          //       ? prevState[thing].slice(0, 30)\n          //       : prevState[thing]\n          //   } \\n\\nto ${currentState[thing].slice(0, 30)}`\n          // );\n          const simfileType = selectedSong.useSsc ? \"ssc\" : \"sm\";\n          let ge = new GameEngine(canvas, sm, simfileType, chartParams);\n          ge.pauseTl();\n          setGameEngine(ge);\n        } else if (thing === \"mods\") {\n          Object.keys(prevState.mods).forEach((mod) => {\n            const prev = JSON.stringify(prevState.mods[mod]);\n            const curr = JSON.stringify(currentState.mods[mod]);\n            const modChanged = prev !== curr;\n\n            if (gameEngine && modChanged) {\n              if (mod === \"turn\") {\n                gameEngine.resetChart(chartParams);\n              } else {\n                // console.log(prev, curr);\n                if (gameEngine.isTlPaused()) {\n                  gameEngine.updateLoopOnce();\n                }\n              }\n            }\n          });\n        }\n        // mode or difficulty\n        else {\n          // console.log(\n          //   `${thing} changed from ${prevState[thing]} to ${currentState[thing]}`\n          // );\n          if (gameEngine) {\n            gameEngine.resetChart(chartParams);\n          }\n        }\n      }\n    });\n  }, [canvas, sm, selectedDifficulty, selectedMode, mods]);\n\n  const shareParams = {\n    song: selectedSong,\n    difficulty: selectedDifficulty,\n    mode: selectedMode,\n    mods,\n  };\n\n  return (\n    <div\n      className={`view-section chartView ${\n        screen.activeView === \"chart\" ? \"active\" : \"\"\n      }`}\n    >\n      <div className=\"view-wrapper chartArea-container\">\n        <div\n          className={`canvas-container ${selectedMode}`}\n          ref={canvasContainer}\n        >\n          <div className=\"canvas-wrapper\">\n            <canvas id=\"chartArea\" width=\"256\" height=\"448\" />\n            <div\n              className={`chart-loading-screen ${selectedMode} ${\n                loadingAudio ? \"loading\" : \"\"\n              } `}\n              ref={chartLoadingScreen}\n            >\n              {selectedSong && (\n                <img\n                  className=\"chart-loading-jacket\"\n                  src={getJacketPath(`${selectedSong.hash}.png`)}\n                />\n              )}\n              <div className=\"chart-loading-message\">Loading chart...</div>\n            </div>\n            {selectedSong &&\n              !loadingAudio &&\n              [\"hidden\", \"sudden\", \"hiddensudden\"].includes(\n                mods.appearance\n              ) && <CabButtons mods={mods} canvas={canvas} />}\n          </div>\n        </div>\n        <div className=\"progress-container\">\n          <div className=\"progress-wrapper\">\n            <canvas id=\"progress\" />\n            {presetParams.progress ? (\n              <div\n                className=\"preset-marker-wrapper\"\n                onClick={Progress.jumpToPresetStart.bind(Progress)}\n                onTouchStart={Progress.jumpToPresetStart.bind(Progress)}\n              >\n                <div className=\"preset-marker\" />\n              </div>\n            ) : null}\n          </div>\n        </div>\n        {/* <canvas id=\"chartArea\" width=\"256\" height=\"18000\" /> */}\n        <div className=\"row\">\n          <PlayControls\n            controlsDisabled={!gameEngine || loadingAudio}\n            setShareModalOpen={setShareModalOpen}\n          />\n        </div>\n        <div className=\"row\">\n          <SongInfo />\n        </div>\n        <ShareModal\n          modalOpen={shareModalOpen}\n          setModalOpen={setShareModalOpen}\n          data={shareParams}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { mods, songSelect, screen } = state;\n  return {\n    mods,\n    selectedSong: songSelect.song,\n    selectedDifficulty: songSelect.difficulty,\n    selectedMode: songSelect.mode,\n    screen,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartArea);\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current || value;\n};\n","import { SP_DIFFICULTIES, DP_DIFFICULTIES } from \"../constants\";\n\n/*\n  If the song does not have a chart corresponding to the chosen difficulty option,\n  pick whatever is *closest*\n  - If Difficult, Expert, or Challenge is the chosen option, start from Challenge and\n    work your way down until the first available difficulty is reached.\n  - If Beginner or Basic is the chosen option, start from Beginner and work up.\n  The closest available difficulty will be chosen for the song without affecting the\n  difficulty option selected for the form, like the way it works in the real game\n*/\nexport const getClosestDifficulty = (song, difficulty, mode) => {\n  const difficulties = mode === \"double\" ? DP_DIFFICULTIES : SP_DIFFICULTIES;\n  const levels =\n    mode === \"double\" ? song.levels.slice(5, 9) : song.levels.slice(0, 5);\n\n  if ([\"Difficult\", \"Expert\", \"Challenge\"].includes(difficulty)) {\n    for (let i = difficulties.length - 1; i >= 0; i--) {\n      if (levels[i]) {\n        return difficulties[i];\n      }\n    }\n  } else if ([\"Beginner\", \"Basic\"].includes(difficulty)) {\n    for (let i = 0; i <= difficulties.length - 1; i++) {\n      if (levels[i]) {\n        return difficulties[i];\n      }\n    }\n  }\n};\n","import React from \"react\";\n\nimport { getJacketPath } from \"../../utils\";\nimport { SP_DIFFICULTIES } from \"../../constants\";\nimport { getClosestDifficulty } from \"../../utils/songUtils\";\n\nconst SongGrid = (props) => {\n  const {\n    displayedSongs,\n    onSongSelect,\n    selectedSongOption,\n    selectedMode,\n    selectedDifficultyOption,\n    selectedFilters,\n  } = props;\n\n  let songs = displayedSongs;\n\n  const selectSong = (song) => {\n    onSongSelect(null, { value: song.hash });\n  };\n\n  const renderSongLevel = (song) => {\n    let levels = [];\n    if (selectedMode === \"single\") levels = song.levels.slice(0, 5);\n    else if (selectedMode === \"double\")\n      levels = [null, ...song.levels.slice(5, 9)];\n\n    const levelFilter = selectedFilters.level;\n    const difficultyFilter = selectedFilters.difficulty;\n\n    // If neither level nor difficulty are being filtered, show the chosen difficulty option or whatever is closest\n    if (difficultyFilter === \"all\" && levelFilter === \"all\") {\n      const displayedLevels = [null, null, null, null, null];\n      const difficultyIdx = SP_DIFFICULTIES.indexOf(selectedDifficultyOption);\n      if (levels[difficultyIdx]) {\n        displayedLevels[difficultyIdx] = levels[difficultyIdx];\n      } else {\n        const closestDiff = getClosestDifficulty(\n          song,\n          selectedDifficultyOption,\n          selectedMode\n        );\n        const closestDiffIdx = SP_DIFFICULTIES.indexOf(closestDiff);\n        displayedLevels[closestDiffIdx] = levels[closestDiffIdx];\n      }\n      levels = displayedLevels;\n    } else {\n      levels.forEach((level, i) => {\n        if (!level) return;\n        const difficulty = SP_DIFFICULTIES[i];\n        // If level is chosen but difficulty is not, show all difficulties that match the level\n        if (difficultyFilter === \"all\") {\n          if (level !== levelFilter) levels[i] = null;\n        }\n        // If level is not chosen but difficulty is, show the filtered difficulty only\n        // If both level and difficulty are chosen, show the filtered difficulty only\n        else {\n          if (difficulty !== difficultyFilter) levels[i] = null;\n        }\n      });\n    }\n\n    return levels.map((level, i) => {\n      if (!level) return null;\n      const difficulty = SP_DIFFICULTIES[i];\n      return (\n        <div\n          key={`${song.hash}_${difficulty}`}\n          className={`song-level ${difficulty}`}\n        >\n          {level}\n        </div>\n      );\n    });\n  };\n\n  const renderSong = (song) => {\n    return (\n      <div\n        className=\"songTile-wrapper\"\n        key={`songtile_${song.hash}`}\n        onClick={() => selectSong(song)}\n      >\n        <div\n          className={`songTile ${\n            selectedSongOption === song.hash ? \"selected\" : \"\"\n          }`}\n        >\n          <div className=\"song-jacket-wrapper\">\n            <img\n              className=\"song-jacket\"\n              src={getJacketPath(`${song.hash}.png`)}\n              title={song.title}\n              alt={song.title}\n            />\n          </div>\n          <div className=\"song-level-wrapper\">{renderSongLevel(song)}</div>\n          <div className=\"song-title-bar\">{song.title}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"songGrid\">\n      {songs.map((song) => {\n        return renderSong(song);\n      })}\n    </div>\n  );\n};\n\nexport default SongGrid;\n","const loadStore = {\n  lastRequestedSong: null, // storing song title rn for easier debugging, change to hash\n  lastRequestedSongLoaded: false,\n};\nexport default loadStore;\n","import React from \"react\";\n\nconst ToggleSwitch = (props) => {\n  const { option1, option2, value, disabled } = props;\n\n  const toggleChange = () => {\n    if (disabled || !option1 || !option2) return;\n\n    if (value === option1.value) {\n      props.onChange(option2.value);\n    } else if (value === option2.value) {\n      props.onChange(option1.value);\n    }\n\n    // default to option 1 if uninitialized\n    else {\n      props.onChange(option1.value);\n    }\n  };\n\n  const selectOption = (option) => {\n    if (disabled || !option || typeof option.value === \"undefined\") return;\n    props.onChange(option.value);\n  };\n\n  const getSwitchClassName = () => {\n    let className = \"toggleSwitch\";\n    if (value === option1.value) className += ` left`;\n    else if (value === option2.value) className += ` right`;\n    return className;\n  };\n\n  return (\n    <div className={`toggleSwitch-wrapper ${disabled ? \"disabled\" : \"\"}`}>\n      <label\n        className={`toggleSwitch-option1 ${\n          value === option1.value ? \"selected\" : \"\"\n        }`}\n        onClick={() => selectOption(option1)}\n      >\n        {option1.text}\n      </label>\n      <div className={getSwitchClassName()} onClick={toggleChange}></div>\n      <label\n        className={`toggleSwitch-option2 ${\n          value === option2.value ? \"selected\" : \"\"\n        }`}\n        onClick={() => selectOption(option2)}\n      >\n        {option2.text}\n      </label>\n    </div>\n  );\n};\n\nexport default ToggleSwitch;\n","import {\n  SP_DIFFICULTIES,\n  TITLE_CATEGORIES,\n  LEVELS,\n  DDR_VERSIONS,\n} from \"../../constants\";\n\nexport const titleSortOptions = [\n  { key: \"title_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  TITLE_CATEGORIES.map((letter) => {\n    return { key: `title_${letter}`, value: letter, text: letter };\n  })\n);\n\nexport const versionSortOptions = [\n  { key: \"version_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  DDR_VERSIONS.map((versionName, idx) => {\n    return { key: `version_${idx}`, value: idx, text: versionName };\n  }).reverse()\n);\n\nexport const levelSortOptions = [\n  { key: \"level_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  LEVELS.map((level) => {\n    return { key: `level_${level}`, value: level, text: level };\n  })\n);\n\nexport const difficultySortOptions = [\n  { key: \"difficulty_all\", value: \"all\", text: \"ALL\" },\n].concat(\n  SP_DIFFICULTIES.map((difficulty) => {\n    return {\n      key: `difficulty_${difficulty}`,\n      value: difficulty,\n      text: difficulty,\n    };\n  })\n);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_1\",\n  \"data-name\": \"Line 1\",\n  d: \"M0.91,15L0.78,15A1,1,0,0,0,0,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H0.91Z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_2\",\n  \"data-name\": \"Line 2\",\n  d: \"M6.91,9L6.78,9A1,1,0,0,0,6,10V28a1,1,0,1,0,2,0s0,0,0,0V10A1,1,0,0,0,7,9H6.91Z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_3\",\n  \"data-name\": \"Line 3\",\n  d: \"M12.91,0L12.78,0A1,1,0,0,0,12,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H12.91Z\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_4\",\n  \"data-name\": \"Line 4\",\n  d: \"M18.91,10l-0.12,0A1,1,0,0,0,18,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H18.91Z\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_5\",\n  \"data-name\": \"Line 5\",\n  d: \"M24.91,15l-0.12,0A1,1,0,0,0,24,16v6a1,1,0,0,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H24.91Z\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_6\",\n  \"data-name\": \"Line 6\",\n  d: \"M30.91,10l-0.12,0A1,1,0,0,0,30,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H30.91Z\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_7\",\n  \"data-name\": \"Line 7\",\n  d: \"M36.91,0L36.78,0A1,1,0,0,0,36,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H36.91Z\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_8\",\n  \"data-name\": \"Line 8\",\n  d: \"M42.91,9L42.78,9A1,1,0,0,0,42,10V28a1,1,0,1,0,2,0s0,0,0,0V10a1,1,0,0,0-1-1H42.91Z\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Line_9\",\n  \"data-name\": \"Line 9\",\n  d: \"M48.91,15l-0.12,0A1,1,0,0,0,48,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H48.91Z\"\n});\n\nvar SvgAudiowave = function SvgAudiowave(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"audioWave\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 50 38.05\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgAudiowave, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/audiowave.e48c060f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\n\nimport * as actions from \"../../actions/SongSelectActions\";\nimport SongGrid from \"./SongGrid\";\nimport { getJacketPath, presetParams } from \"../../utils\";\nimport { getClosestDifficulty } from \"../../utils/songUtils\";\nimport {\n  getUserSettings,\n  updateUserSettings,\n  getSavedSongProgress,\n} from \"../../utils/userSettings\";\nimport loadStore from \"../../utils/loadStore\";\nimport ToggleSwitch from \"../ui/ToggleSwitch\";\nimport { SP_DIFFICULTIES, DP_DIFFICULTIES } from \"../../constants\";\nimport {\n  titleSortOptions,\n  versionSortOptions,\n  levelSortOptions,\n  difficultySortOptions,\n} from \"./songFormOptions\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport { ReactComponent as AudioWave } from \"../../svg/audiowave.svg\";\n\nconst userSettings = getUserSettings();\n\nconst SongForm = (props) => {\n  const { simfileList, selectedDifficulty, selectedMode, previewAudio } = props;\n  const songGridContainer = useRef();\n\n  const simfileOptions = simfileList.map((song) => {\n    return { key: song.hash, value: song.hash, text: song.title };\n  });\n\n  const [selectedSongOption, setSelectedSongOption] = useState(null);\n  const [selectedDifficultyOption, setSelectedDifficultyOption] = useState(\n    selectedDifficulty\n  );\n\n  const [selectedFilters, setSelectedFilters] = useState(\n    userSettings.filters || {\n      title: \"all\",\n      version: 15,\n      level: \"all\",\n      difficulty: \"all\",\n      // level: 10,\n    }\n  );\n\n  const updateSelectedFilters = (newFilters) => {\n    const filters = { ...selectedFilters, ...newFilters };\n    updateUserSettings({ filters });\n    setSelectedFilters(filters);\n  };\n\n  const [displayedSongs, setDisplayedSongs] = useState([]);\n\n  // on filter or mode change\n  useEffect(() => {\n    const { title, version, level, difficulty } = selectedFilters;\n\n    const songs = simfileList\n      .filter((song) => {\n        const singleDiffs = song.levels.slice(0, 5);\n        const doubleDiffs = song.levels.slice(5, 9);\n        return (\n          // song matches title filter\n          (title === \"all\" || title === song.abcSort) &&\n          // song matches version filter\n          (version === \"all\" || version === parseInt(song.version)) &&\n          // if a level filter is selected, song matches level filter\n          // if level is not being filtered, song has at least one chart on the chosen mode\n          ((level === \"all\" &&\n            selectedMode === \"single\" &&\n            singleDiffs.some((level) => !!level)) ||\n            (level === \"all\" &&\n              selectedMode === \"double\" &&\n              doubleDiffs.some((level) => !!level)) ||\n            (selectedMode === \"single\" &&\n              song.levels.slice(0, 5).includes(level)) ||\n            (selectedMode === \"double\" &&\n              song.levels.slice(5, 9).includes(level)))\n        );\n      })\n      .filter((song) => {\n        // if a difficulty is specified:\n        if (difficulty !== \"all\") {\n          // if level is not specified, simply check if that difficulty exists\n          if (level === \"all\") {\n            if (selectedMode === \"single\") {\n              return song.levels[SP_DIFFICULTIES.indexOf(difficulty)] !== null;\n            } else if (selectedMode === \"double\") {\n              return (\n                song.levels[DP_DIFFICULTIES.indexOf(difficulty) + 5] !== null\n              );\n            }\n          }\n          // if level is specified, only show if the difficulty is that level\n          else {\n            if (selectedMode === \"single\") {\n              return song.levels[SP_DIFFICULTIES.indexOf(difficulty)] === level;\n            } else if (selectedMode === \"double\") {\n              return (\n                song.levels[DP_DIFFICULTIES.indexOf(difficulty) + 5] === level\n              );\n            }\n          }\n        }\n        return song;\n      });\n\n    setDisplayedSongs(songs);\n    songGridContainer.current.scrollTop = 0;\n  }, [selectedFilters, selectedMode]);\n\n  // object corresponding to the selected song option\n  // NOT the song currently playing in the main view\n  const [selectedSong, setSelectedSong] = useState(null);\n\n  // initialize song for testing\n  useEffect(() => {\n    /*\n      For some reason, the very first interaction with the dom will reset the Howler\n      audio seek time to 0 (a bug?). Force an interaction in the beginning to get this\n      out of the way and prevent overwriting of the preset time\n    */\n    document.body.click();\n\n    if (presetParams.song) {\n      onSongSelect(null, { value: presetParams.song });\n    } else if (userSettings.song) {\n      onSongSelect(null, { value: userSettings.song });\n    } else {\n      // onSongSelect(null, { value: \"99OQb9b0IQ98P6IQdPOiqi8q16o16iqP\" }); // ORCA\n      // onSongSelect(null, { value: \"PooiIP8qP0IPd9D1Ibi6l9bDoqdi9P8O\" }); // DEGRS\n      // onSongSelect(null, { value: \"q0QIob1PDI6IP86dlPb6I6il9d6bP606\" }); // einya\n      // onSongSelect(null, { value: \"bIlqP91O9ld1lqlq6qoq9OiPdqIDPP0l\" }); // lachryma\n      // onSongSelect(null, { value: \"06O0ObdQobq86lPDo6P18dQ1QPdilIQO\" }); // ayakashi\n      // onSongSelect(null, { value: \"9bI0dQdb01Dl1bQq1Pq998i0l096D99P\" }); // second heaven\n      // onSongSelect(null, { value: \"8o1iQPiId8P6Db9Iqo1Oo119QDoq8qQ8\" }); // chaos\n      // onSongSelect(null, { value: \"dD6PqbboDil89DPIID86Pldi6obI1b8l\" }); // pluto\n      // onSongSelect(null, { value: \"loP08P1PPi990lPD0O060d888O9o6qb8\" }); // seasons\n      // onSongSelect(null, { value: \"8QbqP80q9PI8bbi0qOoiibOQD08OPdli\" }); // felm\n      // onSongSelect(null, { value: \"6bid6d9qPQ80DOqiidQQ891o6Od8801l\" }); // otp\n      // onSongSelect(null, { value: \"9i0q91lPPiO61b9P891O1i86iOP1I08O\" }); // egoism\n      // onSongSelect(null, { value: \"lldPQPDP0qq8iqQ910l8b8PoQ6O668Q0\" }); // downer & upper\n      // onSongSelect(null, { value: \"PP1q0iii1D6Dq9QOd0qqDOQD0160QoPD\" }); // paranoia eternal\n      // onSongSelect(null, { value: \"QI06q9lPIoo80DlI18Ooi6dbPl89bqi0\" }); // our soul\n      // onSongSelect(null, { value: \"POq8OPlOO9199i11Od0P00801Qo01DQo\" }); // rtswy\n      // onSongSelect(null, { value: \"QQldo10ObPPQPlliODiDIIl0Q1oPoo61\" }); // deltamax\n      // onSongSelect(null, { value: \"06loOQ0DQb0DqbOibl6qO81qlIdoP9DI\" }); // paranoia\n      // onSongSelect(null, { value: \"0dOi10q9Q6oi0Q9960iQQDO6olqlDDqo\" }); // private eye\n      // onSongSelect(null, { value: \"9I00D9Id61iD6QP8i8Dd6698PoQ9bdi9\" }); // okome\n      // onSongSelect(null, { value: \"O9qDQOQO8dDDIiO9dPP0Pb8qQo9l89D9\" }); // triperfect\n      // onSongSelect(null, { value: \"0IldoDlDQql99DqQo0Qq9ioPIiiPoIoi\" }); // pluto relinquish\n      // onSongSelect(null, { value: \"PIO8dod8P9OOP1bi0D1POIi6OdOdQDql\" }); // pluto the first\n      // onSongSelect(null, { value: \"8O6b1D9PDO0ll1IO9d1ODDPPo0QPQbob\" }); // tme\n      // onSongSelect(null, { value: \"ld6P1lbb0bPO9doqbbPOoPb8qoDo8id0\" }); // A4A\n      // onSongSelect(null, { value: \"O06Id8PIDbDblO109ddi1dldd0bqDdQ1\" }); // sexy planet from nonstop\n      // onSongSelect(null, { value: \"IQqOIb6ob8bIbOII66ID0oIQDPl6bdbb\" }); // pyfim jazzy groove\n      onSongSelect(null, { value: \"08QP8bOQ6OOdd11Dq81db1l8IdiDbod6\" }); // lesson by dj\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedSongOption) {\n      const song = simfileList.find((song) => song.hash === selectedSongOption);\n      setSelectedSong(song);\n      AudioPlayer.storeAudioSource(song);\n    }\n  }, [selectedSongOption]);\n\n  const onSongSelect = async (_, data) => {\n    AudioPlayer.stopSongPreview();\n    if (selectedSong) {\n      AudioPlayer.killImmediately(selectedSong.hash);\n    }\n\n    const songHash = data.value;\n    setSelectedSongOption(songHash);\n\n    const song = simfileList.find((song) => song.hash === songHash);\n\n    let initialProgress = 0;\n\n    // initialize progress only if this is the song being initialized on page load\n    if (!props.previousSong) {\n      initialProgress = getSavedSongProgress();\n    }\n\n    if (presetParams.song === songHash && presetParams.progress) {\n      initialProgress = presetParams.progress / 100000;\n    } else {\n      // remove preset progress marker if it is no longer relevant to the new song\n      presetParams.progress = 0;\n    }\n\n    // automatically fetch simfile and update chart\n    await props.onSongSelect(song, initialProgress);\n\n    // short-circuit if this is not the last song that was selected\n    if (loadStore.lastRequestedSong !== song.title) {\n      return;\n    }\n\n    const selectClosestDifficulty = () => {\n      const selectedDiffOptionIndex = SP_DIFFICULTIES.indexOf(\n        selectedDifficultyOption\n      );\n      let difficultyToSelect;\n      if (song.levels[selectedDiffOptionIndex]) {\n        difficultyToSelect = selectedDifficultyOption;\n      } else {\n        difficultyToSelect = getClosestDifficulty(\n          song,\n          selectedDifficultyOption,\n          selectedMode\n        );\n      }\n      props.onDifficultySelect(difficultyToSelect);\n    };\n\n    // Auto-select the selected song's chart based on the applied level/difficulty filters.\n    // 4 possible cases\n\n    // Neither level nor difficulty filter applied\n    if (\n      selectedFilters.level === \"all\" &&\n      selectedFilters.difficulty === \"all\"\n    ) {\n      // select the chart corresponding to the selected difficulty option.\n      // if the song does not have a chart for that difficulty, choose the closest difficulty.\n      selectClosestDifficulty();\n    }\n\n    // Level filter applied but not difficulty\n    else if (\n      selectedFilters.level !== \"all\" &&\n      selectedFilters.difficulty === \"all\"\n    ) {\n      const levels =\n        selectedMode === \"double\"\n          ? song.levels.slice(5, 9)\n          : song.levels.slice(0, 5);\n\n      // if the song has a chart that matches the level filter, choose that chart\n      if (levels.includes(selectedFilters.level)) {\n        for (let i = 0; i < levels.length; i++) {\n          const level = levels[i];\n          if (level === selectedFilters.level) {\n            const difficulties =\n              selectedMode === \"double\" ? DP_DIFFICULTIES : SP_DIFFICULTIES;\n            props.onDifficultySelect(difficulties[i]);\n            break;\n          }\n        }\n      }\n\n      // if the song does not have a chart that matches the level filter, go with the closest difficulty\n      else {\n        selectClosestDifficulty();\n      }\n    }\n\n    // Difficulty filter applied but not level\n    else if (\n      selectedFilters.difficulty !== \"all\" &&\n      selectedFilters.level === \"all\"\n    ) {\n      let difficultyIdx = SP_DIFFICULTIES.indexOf(selectedFilters.difficulty);\n      if (selectedMode === \"double\") difficultyIdx += 4;\n\n      // if the song has a chart that matches the difficulty filter, choose that chart\n      if (typeof song.levels[difficultyIdx] === \"number\") {\n        props.onDifficultySelect(selectedFilters.difficulty);\n      }\n\n      // if the song does not have a chart that matches the difficulty filter, go with the closest difficulty\n      else {\n        selectClosestDifficulty();\n      }\n    }\n\n    // Both level and difficulty filters applied\n    // equivalent to a regular else block but condition listed explicitly for clarity\n    else if (\n      selectedFilters.difficulty !== \"all\" &&\n      selectedFilters.level !== \"all\"\n    ) {\n      let difficultyIdx = SP_DIFFICULTIES.indexOf(selectedFilters.difficulty);\n      if (selectedMode === \"double\") difficultyIdx += 4;\n\n      if (song.levels[difficultyIdx] === selectedFilters.level) {\n        props.onDifficultySelect(selectedFilters.difficulty);\n      } else {\n        selectClosestDifficulty();\n      }\n    }\n  };\n\n  const handleDifficultySelect = (difficulty) => {\n    setSelectedDifficultyOption(difficulty);\n    props.onDifficultySelect(difficulty);\n  };\n\n  const handleModeSelect = (mode) => {\n    props.onModeSelect(mode);\n  };\n\n  const renderDifficulties = () => {\n    if (!selectedSong) return null;\n\n    let levels;\n    if (selectedMode === \"single\") levels = selectedSong.levels.slice(0, 5);\n    else if (selectedMode === \"double\")\n      levels = selectedSong.levels.slice(5, 9);\n\n    return levels.map((level, idx) => {\n      if (!level) return null;\n      const difficulty =\n        selectedMode === \"double\" ? DP_DIFFICULTIES[idx] : SP_DIFFICULTIES[idx];\n      return (\n        <div\n          className={`song-difficulty ${difficulty} ${\n            selectedDifficulty === difficulty ? \"selected\" : \"\"\n          }`}\n          key={`${selectedMode}-difficulty_${difficulty}`}\n          onClick={() => handleDifficultySelect(difficulty)}\n        >\n          <div className=\"difficulty\">{difficulty}</div>\n          <div className=\"level\">{level}</div>\n        </div>\n      );\n    });\n  };\n\n  const getDisplayBpm = () => {\n    if (!selectedSong) return null;\n    let displayBpm = selectedSong.displayBpm;\n    if (displayBpm.includes(\",\")) {\n      let difficultyIdx = SP_DIFFICULTIES.indexOf(selectedDifficulty);\n      if (selectedMode === \"double\") difficultyIdx += 4;\n      displayBpm = displayBpm.split(\",\")[difficultyIdx];\n    }\n    return displayBpm;\n  };\n\n  const isModeToggleDisabled = () => {\n    if (!selectedSong || !selectedMode) return true;\n    if (selectedDifficulty === \"Beginner\") return true;\n    if (selectedMode === \"single\") {\n      return !selectedSong.levels.slice(5, 9).filter((a) => a).length;\n    } else if (selectedMode === \"double\") {\n      return !selectedSong.levels.slice(0, 5).filter((a) => a).length;\n    }\n    return true;\n  };\n\n  const toggleSongPreview = () => {\n    const oldSongHash = AudioPlayer.currentPreview;\n\n    // toggle start/stop of the same song\n    if (oldSongHash === selectedSong.hash) {\n      if (previewAudio.status === \"playing\") {\n        AudioPlayer.stopSongPreview();\n      } else {\n        AudioPlayer.playSongPreview(selectedSong);\n      }\n    }\n\n    // play a new song and stop the current one (if applicable)\n    else {\n      if (previewAudio.status === \"playing\") {\n        AudioPlayer.stopSongPreview();\n      }\n      AudioPlayer.playSongPreview(selectedSong);\n    }\n  };\n\n  return (\n    <div\n      className={`view-section songView ${\n        props.activeView === \"song\" ? \"active\" : \"\"\n      }`}\n    >\n      {/* meta tags defined here */}\n      {selectedSong && (\n        <Helmet>\n          <title>{selectedSong.title} - SMViewer</title>\n          <meta\n            property=\"og:title\"\n            content={`${selectedSong.title} - SMViewer`}\n          />\n        </Helmet>\n      )}\n      {/* end meta tags */}\n      <div className=\"view-wrapper\">\n        <form className=\"songForm\">\n          <div className=\"form-inner-wrapper\">\n            <div className=\"selectedSong\">\n              <div\n                className={`selectedSong-jacket-wrapper ${\n                  previewAudio.status === \"playing\" ? \"playing\" : \"\"\n                }`}\n              >\n                <div className=\"selectedSong-jacket-overlay\">\n                  <AudioWave />\n                </div>\n                <img\n                  className={`selectedSong-jacket`}\n                  src={getJacketPath(`${selectedSongOption}.png`)}\n                  alt=\"Selected song\"\n                  onClick={toggleSongPreview}\n                />\n              </div>\n              <div className=\"selectedSong-info\">\n                <Dropdown\n                  placeholder=\"Choose a song\"\n                  className=\"song-title-dropdown\"\n                  search\n                  selection\n                  value={selectedSongOption}\n                  onChange={onSongSelect}\n                  options={simfileOptions}\n                  selectOnBlur={false}\n                  selectOnNavigation={false}\n                />\n                <div className=\"song-artist\">\n                  {selectedSong && selectedSong.artist}\n                </div>\n\n                <div className=\"song-difficulties\">{renderDifficulties()}</div>\n\n                <div className=\"song-mode\">\n                  <ToggleSwitch\n                    option1={{ text: \"Single\", value: \"single\" }}\n                    option2={{ text: \"Double\", value: \"double\" }}\n                    onChange={handleModeSelect}\n                    value={selectedMode}\n                    disabled={isModeToggleDisabled()}\n                  />\n                </div>\n\n                <div className=\"bpm-display-container\">\n                  <div className=\"bpm-display-label\">BPM</div>\n                  <div className=\"bpm-display-value\">{getDisplayBpm()}</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"songForm-filters\">\n              <div className=\"songForm-filters-row\">\n                <div className=\"form-field\">\n                  <label>By Title</label>\n                  <Dropdown\n                    className=\"title-filter-dropdown\"\n                    selection\n                    value={selectedFilters.title}\n                    onChange={(e, data) =>\n                      updateSelectedFilters({\n                        title: data.value,\n                      })\n                    }\n                    options={titleSortOptions}\n                  />\n                </div>\n                <div className=\"form-field\">\n                  <label>By Version</label>\n                  <Dropdown\n                    className=\"version-filter-dropdown\"\n                    selection\n                    value={selectedFilters.version}\n                    onChange={(e, data) =>\n                      updateSelectedFilters({\n                        version: data.value,\n                      })\n                    }\n                    options={versionSortOptions}\n                  />\n                </div>\n                <div className=\"form-field\">\n                  <label>By Level</label>\n                  <Dropdown\n                    className=\"level-filter-dropdown\"\n                    selection\n                    value={selectedFilters.level}\n                    onChange={(e, data) =>\n                      updateSelectedFilters({\n                        level: data.value,\n                      })\n                    }\n                    options={levelSortOptions}\n                  />\n                  <label>By Difficulty</label>\n                  <Dropdown\n                    className=\"difficulty-filter-dropdown\"\n                    selection\n                    value={selectedFilters.difficulty}\n                    onChange={(e, data) =>\n                      updateSelectedFilters({\n                        difficulty: data.value,\n                      })\n                    }\n                    options={difficultySortOptions}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"songGrid-container\" ref={songGridContainer}>\n          <SongGrid\n            displayedSongs={displayedSongs}\n            onSongSelect={onSongSelect}\n            selectedSongOption={selectedSongOption}\n            selectedMode={selectedMode}\n            selectedDifficultyOption={selectedDifficultyOption}\n            selectedFilters={selectedFilters}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio, songSelect, screen } = state;\n  const { previewAudio } = audio;\n  return {\n    previewAudio,\n    selectedDifficulty: songSelect.difficulty,\n    selectedMode: songSelect.mode,\n    previousSong: songSelect.song,\n    activeView: screen.activeView,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectSong: (song) => dispatch(actions.selectSong(song)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongForm);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Radio, Checkbox } from \"semantic-ui-react\";\n\nimport { options } from \"./options\";\nimport { SP_DIFFICULTIES, DP_DIFFICULTIES } from \"../../constants\";\nimport { capitalize } from \"../../utils\";\nimport { updateMods } from \"../../actions/ModsActions\";\n\nconst ModsForm = (props) => {\n  const { mods, updateMods, mode, song, difficulty } = props;\n\n  // when switching between single and double, any mod set to a value incompatible\n  // with the new mode will be reset to its default value\n  useEffect(() => {\n    if (mode === \"double\" && ![\"off\", \"mirror\"].includes(mods.turn)) {\n      updateMods({ turn: \"off\" });\n    }\n  }, [mode]);\n\n  const getEffectiveScrollSpeed = () => {\n    if (!song) return null;\n    let displayBpm = song.displayBpm;\n    if (displayBpm.includes(\",\")) {\n      let difficultyIdx = SP_DIFFICULTIES.indexOf(difficulty);\n      if (mode === \"double\") difficultyIdx += 4;\n      displayBpm = displayBpm.split(\",\")[difficultyIdx];\n    }\n\n    const [lowBpm, highBpm] = displayBpm.split(\"-\");\n    if (!highBpm) {\n      return <strong>{Math.round(lowBpm * mods.speed)}</strong>;\n    } else {\n      return (\n        <strong>{`${Math.round(lowBpm * mods.speed)} - ${Math.round(\n          highBpm * mods.speed\n        )}`}</strong>\n      );\n    }\n  };\n\n  return (\n    <div\n      className={`view-section modsView ${\n        props.activeView === \"mods\" ? \"active\" : \"\"\n      }`}\n    >\n      <div className=\"view-wrapper\">\n        <form className=\"modsForm\">\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">\n              Speed\n              {song && (\n                <span className=\"effective-scroll-speed\">\n                  (Effective scroll speed:{\" \"}\n                  <strong>{getEffectiveScrollSpeed()}</strong>)\n                </span>\n              )}\n            </h4>\n            {options.mods.speed.map((speed) => {\n              return (\n                <Radio\n                  key={`speed_${speed}`}\n                  label={`${speed}x`}\n                  name=\"speed\"\n                  value={speed}\n                  checked={mods.speed === speed}\n                  onChange={() => updateMods({ speed })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Appearance</h4>\n            {options.mods.appearance.map((appearance, i) => {\n              return (\n                <Radio\n                  key={`appearance_${appearance}`}\n                  label={\n                    [\n                      \"Visible\",\n                      \"Hidden+\",\n                      \"Sudden+\",\n                      \"Hidden+ / Sudden+\",\n                      \"Stealth\",\n                    ][i]\n                  }\n                  name=\"appearance\"\n                  value={appearance}\n                  checked={mods.appearance === appearance}\n                  onChange={() => updateMods({ appearance })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Arrow color</h4>\n            {options.mods.noteskin.map((noteskin) => {\n              return (\n                <Radio\n                  key={`noteskin_${noteskin}`}\n                  label={capitalize(noteskin)}\n                  name=\"noteskin\"\n                  value={noteskin}\n                  checked={mods.noteskin === noteskin}\n                  onChange={() => updateMods({ noteskin })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Turn</h4>\n            {options.mods.turn\n              .filter((turn) => {\n                if (mode === \"double\")\n                  return turn === \"off\" || turn === \"mirror\";\n                return true;\n              })\n              .map((turn) => {\n                return (\n                  <Radio\n                    key={`turn_${turn}`}\n                    label={capitalize(turn)}\n                    name=\"turn\"\n                    value={turn}\n                    checked={mods.turn === turn}\n                    onChange={() => updateMods({ turn })}\n                  />\n                );\n              })}\n          </div>\n          {mods.turn === \"shuffle\" && (\n            <div className=\"form-field\">\n              <h4 className=\"form-label\">Shuffle pattern</h4>\n              {options.mods.shuffle.map((shuffle) => {\n                return (\n                  <Radio\n                    key={`shuffle_${shuffle}`}\n                    label={shuffle}\n                    name=\"shuffle\"\n                    value={shuffle}\n                    checked={mods.shuffle === shuffle}\n                    onChange={() => updateMods({ shuffle })}\n                  />\n                );\n              })}\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Step zone</h4>\n            {options.mods.stepZone.map((stepZone) => {\n              return (\n                <Radio\n                  key={`stepZone_${stepZone}`}\n                  label={capitalize(stepZone)}\n                  name=\"stepZone\"\n                  value={stepZone}\n                  checked={mods.stepZone === stepZone}\n                  onChange={() => updateMods({ stepZone })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Scroll</h4>\n            {options.mods.scroll.map((scroll) => {\n              return (\n                <Radio\n                  key={`scroll_${scroll}`}\n                  label={capitalize(scroll)}\n                  name=\"scroll\"\n                  value={scroll}\n                  checked={mods.scroll === scroll}\n                  onChange={() => updateMods({ scroll })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Combo display</h4>\n            {options.mods.comboDisplay.map((comboDisplay, i) => {\n              return (\n                <Radio\n                  key={`comboDisplay_${comboDisplay}`}\n                  label={[\"Behind arrows\", \"In front of arrows\", \"Hidden\"][i]}\n                  name=\"comboDisplay\"\n                  value={comboDisplay}\n                  checked={mods.comboDisplay === comboDisplay}\n                  onChange={() => updateMods({ comboDisplay })}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"form-field\">\n            <h4 className=\"form-label\">Combo font</h4>\n            {options.mods.comboFont.map((comboFont) => {\n              return (\n                <Radio\n                  key={`comboFont_${comboFont}`}\n                  label={comboFont}\n                  name=\"comboFont\"\n                  value={comboFont}\n                  checked={mods.comboFont === comboFont}\n                  onChange={() => updateMods({ comboFont })}\n                />\n              );\n            })}\n          </div>\n\n          <h4>Miscellaneous</h4>\n          <div className=\"form-field\">\n            <Checkbox\n              toggle\n              label=\"Guidelines\"\n              name=\"guidelines\"\n              checked={mods.guidelines}\n              onChange={() => updateMods({ guidelines: !mods.guidelines })}\n            />\n          </div>\n          <div className=\"form-field\">\n            <Checkbox\n              toggle\n              label=\"Color freeze heads\"\n              name=\"colorFreezes\"\n              checked={mods.colorFreezes}\n              onChange={() => updateMods({ colorFreezes: !mods.colorFreezes })}\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { mods, songSelect, screen } = state;\n  return {\n    mods,\n    mode: songSelect.mode,\n    song: songSelect.song,\n    difficulty: songSelect.difficulty,\n    activeView: screen.activeView,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateMods: (mods) => dispatch(updateMods(mods)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModsForm);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n\\t\\ttspan { white-space:pre }\\n\\t\\t.shp0 { fill: #020202 } \\n\\t\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  id: \"Path 0\",\n  className: \"shp0\",\n  d: \"M16.49 17L1.5 32C30.16 60.67 31.81 62.01 35 61.99C37.45 61.97 39.33 61.14 41.27 59.23C43.27 57.26 44.03 55.53 44.01 53C43.98 50.32 43.09 48.61 40.24 45.73L36.5 41.97L54.5 42.03C60.51 35.97 61.98 33.52 62 32C62.02 30.41 60.66 28.14 58.27 25.76L54.5 22.03L36.5 22.03C43.09 15.39 43.98 13.68 44.01 11C44.03 8.47 43.27 6.74 41.27 4.77C39.32 2.85 37.45 2.03 34.99 2.02C31.78 2 30.15 3.32 16.49 17ZM89.49 5.79L85.58 9.58L86.03 27.5C79.22 20.74 77.75 20.03 74.61 20.01C71.58 20 70.19 20.61 68.37 22.75C66.91 24.47 66.03 26.81 66.01 29C65.99 32.19 67.33 33.84 81 47.5L96 62.5C124.67 33.84 126.01 32.19 125.99 29C125.97 26.55 125.14 24.67 123.23 22.73C121.43 20.9 119.47 19.96 117.49 19.98C115.46 19.99 113.1 21.22 110.23 23.75L105.97 27.5L106.03 9.5C99.91 3.43 97.54 2.02 95.95 2.01C94.34 2.01 91.96 3.4 89.49 5.79ZM144.5 16.76C130.41 30.65 129.54 31.73 129.78 35.01C129.94 37.22 131.03 39.51 132.77 41.27C134.74 43.27 136.47 44.03 139 44.01C141.68 43.98 143.39 43.09 146.27 40.24L150.03 36.5L149.97 54.5C156.03 60.51 158.48 61.98 160 62C161.59 62.02 163.86 60.66 166.24 58.27L169.97 54.5L169.97 36.5C176.61 43.09 178.32 43.98 181 44.01C183.53 44.03 185.26 43.27 187.23 41.27C189.14 39.33 189.97 37.45 189.99 35C190.01 31.81 188.68 30.18 175.25 16.75C167.14 8.64 160.27 2.01 159.99 2C159.71 2 152.74 8.64 144.5 16.76ZM214.48 4.8C212.27 6.96 211.65 8.41 211.81 11.05C211.97 13.52 213.09 15.57 215.76 18.27L219.5 22.03L200.89 22C195.51 27.88 194.02 30.58 194 32C193.98 33.59 195.34 35.86 197.73 38.24L201.5 41.97L219.5 41.97C212.91 48.61 212.02 50.32 211.99 53C211.97 55.53 212.73 57.26 214.73 59.23C216.67 61.14 218.55 61.97 221 61.99C224.19 62.01 225.84 60.67 239.5 47L254.5 32C225.76 3.26 224.2 1.99 220.93 2C218.38 2 216.55 2.8 214.48 4.8Z\"\n});\n\nvar SvgArrows = function SvgArrows(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 256 80\",\n    width: 256,\n    height: 80,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrows, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrows.48a2d361.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M544.033302 516.000776V96.000564c0-17.672051-14.478655-31.998984-32.150706-31.998984s-32.150706 14.326933-32.150707 31.998984v420.061624c-54.909072 14.251072-95.809105 64.333925-95.809105 123.935554 0 59.691941 40.82056 109.836206 96.090876 124.000579a32.298816 32.298816 0 0 0-0.281771 4.006195v159.99492c0 17.672051 14.478655 31.998984 32.150707 31.998984s32.150706-14.326933 32.150706-31.998984V768.004516a32.280754 32.280754 0 0 0-0.317894-3.941171c55.389526-14.088512 96.397933-64.301413 96.397932-124.058378 0.010837-59.691941-40.809723-109.832593-96.080038-124.004191z m13.221527 169.249989a64.00158 64.00158 0 1 1 18.744945-45.256635 63.578925 63.578925 0 0 1-18.744945 45.260247zM223.678606 196.003711a32.287979 32.287979 0 0 0 0.292607-4.002582V96.000564a31.970084 31.970084 0 1 0-63.940169 0V192.001129a32.371065 32.371065 0 0 0 0.180622 4.060381c-55.270316 14.160761-96.173962 64.301413-96.173961 124.000579s40.910871 109.818143 96.181186 123.996966a32.360228 32.360228 0 0 0-0.184234 3.937558V927.999436a31.970084 31.970084 0 1 0 63.940169 0V448.000226a32.287979 32.287979 0 0 0-0.278158-3.883372c55.385914-14.088512 96.350971-64.301413 96.350971-124.054765S279.071744 210.084998 223.678606 196.003711z m13.575545 169.315013A64.00158 64.00158 0 1 1 255.999097 320.062089a63.578925 63.578925 0 0 1-18.744946 45.256635zM959.99842 320.062089c0-59.775027-41.048144-109.977091-96.45212-124.058378a32.360228 32.360228 0 0 0 0.173397-4.002582V96.000564a31.970084 31.970084 0 1 0-63.940169 0V192.001129a32.291592 32.291592 0 0 0 0.299833 4.060381c-55.270316 14.160761-96.116162 64.301413-96.116163 124.000579s40.82056 109.836206 96.090876 124.000578a32.298816 32.298816 0 0 0-0.281771 3.99897V927.999436a31.970084 31.970084 0 1 0 63.940169 0V448.061637a32.381903 32.381903 0 0 0-0.166172-3.941171c55.407588-14.084899 96.452119-64.286963 96.45212-124.058377z m-82.746526 45.253022a63.997968 63.997968 0 1 1 18.748558-45.253022 63.578925 63.578925 0 0 1-18.748558 45.253022z\",\n  fill: \"\"\n});\n\nvar SvgMods = function SvgMods(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"icon\",\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      verticalAlign: \"middle\",\n      fill: \"currentColor\",\n      overflow: \"hidden\"\n    },\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMods, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mods.d3d6577c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", null, \"\\n\\t\\ttspan { white-space:pre }\\n\\t\\t.shp0 { fill: #323638 } \\n\\t\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Layer\"\n}, React.createElement(\"path\", {\n  id: \"Layer\",\n  fillRule: \"evenodd\",\n  className: \"shp0\",\n  d: \"M92.28 85.53L84 93.71C83.8 93.9 83.55 94 83.29 94C83.04 94 82.78 93.9 82.59 93.71L65.27 76.56C64.03 75.31 64.05 73.3 65.29 72.07L70.7 66.74C71.9 65.55 73.99 65.56 75.18 66.77L92.29 84.12C92.68 84.51 92.67 85.14 92.28 85.53ZM90.16 84.81L73.76 68.17C73.53 67.95 73.24 67.82 72.92 67.82C72.61 67.82 72.32 67.94 72.1 68.16L66.7 73.49C66.24 73.95 66.23 74.69 66.69 75.15L83.29 91.59L90.16 84.81Z\"\n}), React.createElement(\"path\", {\n  id: \"Layer\",\n  fillRule: \"evenodd\",\n  className: \"shp0\",\n  d: \"M39.31 77.77C18.42 77.77 1.42 60.77 1.42 39.88C1.42 18.99 18.42 2 39.3 2C60.19 2 77.19 18.99 77.19 39.88C77.19 60.77 60.19 77.77 39.31 77.77ZM75.19 39.88C75.19 20.1 59.09 4 39.3 4C19.52 4 3.42 20.1 3.42 39.88C3.42 59.67 19.52 75.77 39.3 75.77C59.09 75.77 75.19 59.67 75.19 39.88Z\"\n}), React.createElement(\"path\", {\n  id: \"Layer\",\n  fillRule: \"evenodd\",\n  className: \"shp0\",\n  d: \"M57.7 25.39L57.7 54.31C57.7 58.64 54.17 62.17 49.83 62.17C45.5 62.17 41.97 58.64 41.97 54.31C41.97 49.97 45.5 46.44 49.83 46.44C52.17 46.44 54.26 47.47 55.7 49.08L55.7 25.39C55.7 25.01 55.46 24.67 55.09 24.55L34.1 17.21C33.85 17.13 33.57 17.17 33.34 17.34C33.11 17.51 32.98 17.77 32.98 18.05L32.98 48.81C32.98 53.15 29.46 56.68 25.12 56.68C20.78 56.68 17.25 53.15 17.25 48.81C17.25 44.47 20.78 40.95 25.12 40.95C27.45 40.95 29.54 41.97 30.98 43.59L30.98 18.05C30.98 17.12 31.41 16.27 32.17 15.72C32.92 15.18 33.85 15.03 34.74 15.31L55.73 22.66C56.9 23.03 57.7 24.13 57.7 25.39ZM30.98 48.81C30.98 45.58 28.35 42.95 25.12 42.95C21.88 42.95 19.25 45.58 19.25 48.81C19.25 52.05 21.88 54.68 25.12 54.68C28.35 54.68 30.98 52.05 30.98 48.81ZM55.7 54.31C55.7 51.07 53.07 48.44 49.83 48.44C46.6 48.44 43.97 51.07 43.97 54.31C43.97 57.54 46.6 60.17 49.83 60.17C53.07 60.17 55.7 57.54 55.7 54.31Z\"\n}));\n\nvar SvgMusicSearch = function SvgMusicSearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 94 96\",\n    width: 94,\n    height: 96,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMusicSearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/music_search.ab83855e.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport { stopPreviewAudio } from \"../../actions/AudioActions\";\nimport { setActiveView } from \"../../actions/ScreenActions\";\nimport { ReactComponent as ChartIcon } from \"../../svg/arrows.svg\";\nimport { ReactComponent as ModsIcon } from \"../../svg/mods.svg\";\nimport { ReactComponent as SongIcon } from \"../../svg/music_search.svg\";\n\nconst Navbar = (props) => {\n  const { activeView, chartAudio } = props;\n\n  const navItems = [\n    { view: \"song\", icon: \"music\", svgIcon: SongIcon, text: \"Song\" },\n    { view: \"mods\", icon: \"sidebar\", svgIcon: ModsIcon, text: \"Mods\" },\n    { view: \"chart\", svgIcon: ChartIcon, text: \"Chart\" },\n    { view: \"2\", icon: \"\", text: \"\" },\n    { view: \"3\", icon: \"\", text: \"\" },\n  ];\n\n  const changeActiveView = (view) => {\n    if (chartAudio.status === \"playing\") return;\n    AudioPlayer.stopSongPreview();\n    props.setActiveView(view);\n  };\n\n  const isDisabled = (view) => {\n    if (view !== \"chart\" && chartAudio.status === \"playing\") return true;\n    return false;\n  };\n\n  return (\n    <nav className=\"navbar\">\n      {navItems.map((navItem) => {\n        const { view, icon, text } = navItem;\n        const SVGIcon = navItem.svgIcon;\n        if (!view) return <div className=\"navbar_item\" />;\n        return (\n          <div\n            key={`navbarItem_${view}`}\n            className={`navbar_item ${activeView === view ? \"active\" : \"\"} ${\n              isDisabled(view) ? \"disabled\" : \"\"\n            }`}\n            onClick={() => changeActiveView(view)}\n          >\n            {SVGIcon ? (\n              <SVGIcon className={`svg-icon ${view}`} />\n            ) : (\n              <Icon name={icon} />\n            )}\n            <span className=\"description\">{text}</span>\n          </div>\n        );\n      })}\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { audio, screen } = state;\n  const { chartAudio } = audio;\n  return {\n    chartAudio,\n    activeView: screen.activeView,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    stopPreviewAudio: () => dispatch(stopPreviewAudio()),\n    setActiveView: (view) => dispatch(setActiveView(view)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { tsv } from \"d3-fetch\";\n\nimport ChartArea from \"../../components/chart/ChartArea\";\nimport SongForm from \"../../components/form/SongForm\";\nimport ModsForm from \"../../components/form/ModsForm\";\nimport Navbar from \"../../components/navigation/Navbar\";\nimport AudioPlayer from \"../../core/AudioPlayer\";\nimport { getOriginPath, fetchDocument } from \"../../utils\";\nimport {\n  selectSong,\n  selectDifficulty,\n  selectMode,\n} from \"../../actions/SongSelectActions\";\nimport { resizeScreen } from \"../../actions/ScreenActions\";\nimport loadStore from \"../../utils/loadStore\";\nimport { DEBUG_MODE } from \"../../constants\";\n\nconst MainContainer = (props) => {\n  const [loadingSimfiles, setLoadingSimfiles] = useState(true);\n  const [simfileList, setSimfileList] = useState([]);\n  const [selectedSM, setSelectedSM] = useState(null);\n\n  const [gameEngine, setGameEngine] = useState(null);\n\n  const [loadingAudio, setLoadingAudio] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchSimfiles();\n      setLoadingSimfiles(false);\n    };\n    fetchData();\n\n    AudioPlayer.setLoadingAudio = setLoadingAudio;\n\n    window.addEventListener(\"resize\", props.resizeScreen);\n  }, []);\n\n  const fetchSimfiles = async () => {\n    try {\n      const parsedTsv = await tsv(getOriginPath() + \"data/simfiles.tsv\");\n      parsedTsv.forEach((row) => {\n        row.levels = row.levels\n          .split(\",\")\n          .map((level) => (level ? parseInt(level) : null));\n      });\n\n      // console.log(\"simfiles\", parsedTsv);\n      setSimfileList(parsedTsv);\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n\n  const onSongSelect = async (song, initialProgress = 0) => {\n    console.log(\"MainContainer selected song\", song);\n    AudioPlayer.selectSong(song, initialProgress);\n    // setSelectedSong(song);\n\n    props.selectSong(song);\n\n    document.title = `${song.title} - SMViewer`;\n\n    // retrieve audio file and simfile from song.simfilePath\n\n    let smName = song.smName;\n\n    // special case for tohoku evolved: pick one of its types at random\n    if (song.hash === \"OddDoQ6dqi0QdQDDOO6qlO08d8bPbli1\") {\n      smName = smName.replace(\"1\", Math.floor(Math.random() * 4) + 1);\n    }\n\n    try {\n      // Immediately update the value of \"last requested song\"\n      // Any pending requests that finish before the last song is loaded will be ignored\n      loadStore.lastRequestedSong = song.title;\n      const sm = await fetchDocument(\n        `${getOriginPath()}simfiles/${encodeURIComponent(smName)}.${\n          song.useSsc ? \"ssc\" : \"sm\"\n        }`\n      );\n\n      // User might try to select a new song before the simfile is fetched.\n      // Only process simfile if this is the last song that was selected\n      if (loadStore.lastRequestedSong === song.title) {\n        setSelectedSM(sm);\n      }\n    } catch (err) {\n      alert(`Song ${song.title} failed to load`, err);\n    }\n  };\n\n  const onDifficultySelect = (difficulty) => {\n    // setSelectedDifficulty(difficulty);\n    props.selectDifficulty(difficulty);\n  };\n  const onModeSelect = (mode) => {\n    props.selectMode(mode);\n  };\n\n  return (\n    <div className=\"main-container\">\n      {!loadingSimfiles && (\n        <>\n          <Navbar />\n          <div className=\"view-container\">\n            <ChartArea\n              loadingAudio={loadingAudio}\n              sm={selectedSM}\n              gameEngine={gameEngine}\n              setGameEngine={setGameEngine}\n            />\n            <ModsForm />\n            <SongForm\n              simfileList={simfileList}\n              onSongSelect={onSongSelect}\n              onDifficultySelect={onDifficultySelect}\n              onModeSelect={onModeSelect}\n              loadingAudio={loadingAudio}\n            />\n          </div>\n        </>\n      )}\n      {DEBUG_MODE && (\n        <div id=\"debugLog\">\n          <div className=\"debug-text1\" />\n          <div className=\"debug-text2\" />\n          <div className=\"debug-text3\" />\n          <div className=\"debug-text4\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectSong: (song) => dispatch(selectSong(song)),\n    selectDifficulty: (song) => dispatch(selectDifficulty(song)),\n    selectMode: (song) => dispatch(selectMode(song)),\n    resizeScreen: (e) => dispatch(resizeScreen(e)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);\n","import React from \"react\";\n\nimport MainContainer from \"./containers/main/MainContainer\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport \"./styles.scss\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}